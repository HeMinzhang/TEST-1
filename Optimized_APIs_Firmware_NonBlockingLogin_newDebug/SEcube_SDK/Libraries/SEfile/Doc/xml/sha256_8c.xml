<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="sha256_8c" kind="file">
    <compoundname>sha256.c</compoundname>
    <includes refid="sha256_8h" local="yes">sha256.h</includes>
    <incdepgraph>
      <node id="204">
        <label>/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/sha256.c</label>
        <link refid="sha256.c"/>
        <childnode refid="205" relation="include">
        </childnode>
      </node>
      <node id="205">
        <label>sha256.h</label>
        <link refid="sha256_8h_source"/>
        <childnode refid="206" relation="include">
        </childnode>
        <childnode refid="207" relation="include">
        </childnode>
      </node>
      <node id="206">
        <label>stdint.h</label>
      </node>
      <node id="207">
        <label>string.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="sha256_8c_1a311278c41654e2dc34fc3b0ecdb4f287" prot="public" static="no">
        <name>B5_SHA256_SHR</name>
        <param><defname>x</defname></param>
        <param><defname>n</defname></param>
        <initializer>((x &amp; 0xFFFFFFFF) &gt;&gt; n)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/sha256.c" line="31" column="9" bodyfile="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/sha256.c" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sha256_8c_1ae53170bb9ce34490035a624ff571a1df" prot="public" static="no">
        <name>B5_SHA256_ROTR</name>
        <param><defname>x</defname></param>
        <param><defname>n</defname></param>
        <initializer>(B5_SHA256_SHR(x,n) | (x &lt;&lt; (32 - n)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/sha256.c" line="32" column="9" bodyfile="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/sha256.c" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sha256_8c_1a76c3ac7745cb55b48f3c63418bcfa5ab" prot="public" static="no">
        <name>B5_SHA256_S0</name>
        <param><defname>x</defname></param>
        <initializer>(B5_SHA256_ROTR(x, 7) ^ B5_SHA256_ROTR(x,18) ^  B5_SHA256_SHR(x, 3))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/sha256.c" line="34" column="9" bodyfile="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/sha256.c" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sha256_8c_1a14162524a7ab2d8e04062ae4730d2004" prot="public" static="no">
        <name>B5_SHA256_S1</name>
        <param><defname>x</defname></param>
        <initializer>(B5_SHA256_ROTR(x,17) ^ B5_SHA256_ROTR(x,19) ^  B5_SHA256_SHR(x,10))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/sha256.c" line="35" column="9" bodyfile="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/sha256.c" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sha256_8c_1a44745ddad69ee710ee79543bbb75ae39" prot="public" static="no">
        <name>B5_SHA256_S2</name>
        <param><defname>x</defname></param>
        <initializer>(B5_SHA256_ROTR(x, 2) ^ B5_SHA256_ROTR(x,13) ^ B5_SHA256_ROTR(x,22))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/sha256.c" line="37" column="9" bodyfile="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/sha256.c" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sha256_8c_1aff1a5a4f7e8b2efd086e7aeec816ec80" prot="public" static="no">
        <name>B5_SHA256_S3</name>
        <param><defname>x</defname></param>
        <initializer>(B5_SHA256_ROTR(x, 6) ^ B5_SHA256_ROTR(x,11) ^ B5_SHA256_ROTR(x,25))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/sha256.c" line="38" column="9" bodyfile="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/sha256.c" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sha256_8c_1ac62e5522585ad5e5745ccf67a721b60d" prot="public" static="no">
        <name>B5_SHA256_F0</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>z</defname></param>
        <initializer>((x &amp; y) | (z &amp; (x | y)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/sha256.c" line="40" column="9" bodyfile="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/sha256.c" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sha256_8c_1a03055695636bd4af7a9350c70c53fa95" prot="public" static="no">
        <name>B5_SHA256_F1</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <param><defname>z</defname></param>
        <initializer>(z ^ (x &amp; (y ^ z)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/sha256.c" line="41" column="9" bodyfile="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/sha256.c" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sha256_8c_1a1bc8b61e9ea79fdfafabbc5cd61c37b1" prot="public" static="no">
        <name>B5_SHA256_R</name>
        <param><defname>t</defname></param>
        <initializer>(                                                       \
    ctx-&gt;W[t] = B5_SHA256_S1(ctx-&gt;W[t -  2]) + ctx-&gt;W[t -  7] +   \
           B5_SHA256_S0(ctx-&gt;W[t - 15]) + ctx-&gt;W[t - 16]          \
)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/sha256.c" line="43" column="9" bodyfile="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/sha256.c" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sha256_8c_1a8638d6d6cd736fb5fac9a7a86b2d1b1a" prot="public" static="no">
        <name>B5_HMAC_IPAD</name>
        <initializer>0x36</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/sha256.c" line="61" column="9" bodyfile="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/sha256.c" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sha256_8c_1a12e46bd19a92881a6f26ae76ddf88233" prot="public" static="no">
        <name>B5_HMAC_OPAD</name>
        <initializer>0x5C</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/sha256.c" line="64" column="9" bodyfile="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/sha256.c" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="sha256_8c_1a1b12cdb4053c0281c6d9407b5332a4c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void B5_SHA256_GETUINT32</definition>
        <argsstring>(uint32_t *n, const uint8_t *b, int32_t i)</argsstring>
        <name>B5_SHA256_GETUINT32</name>
        <param>
          <type>uint32_t *</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/sha256.c" line="14" column="1" bodyfile="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/sha256.c" bodystart="14" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="sha256_8c_1a92e7f7c9c4710ceaf8d3bf875a27d59d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void B5_SHA256_PUTUINT32</definition>
        <argsstring>(uint32_t n, uint8_t *b, int32_t i)</argsstring>
        <name>B5_SHA256_PUTUINT32</name>
        <param>
          <type>uint32_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/sha256.c" line="22" column="1" bodyfile="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/sha256.c" bodystart="22" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="sha256_8c_1a17704c85fe66023f3fc8104f6184377c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void B5_SHA256_P</definition>
        <argsstring>(uint32_t a, uint32_t b, uint32_t c, uint32_t *d, uint32_t e, uint32_t f, uint32_t g, uint32_t *h, uint32_t x, uint32_t K)</argsstring>
        <name>B5_SHA256_P</name>
        <param>
          <type>uint32_t</type>
          <declname>a</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>b</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>c</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>d</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>e</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>f</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>g</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>h</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>K</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/sha256.c" line="49" column="1" bodyfile="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/sha256.c" bodystart="49" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="sha256_8c_1abd1dbea82fa085c1cc857a8ab96d3c08" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void B5_Sha256ProcessBlock</definition>
        <argsstring>(B5_tSha256Ctx *ctx, const uint8_t *data)</argsstring>
        <name>B5_Sha256ProcessBlock</name>
        <param>
          <type><ref refid="struct_b5__t_sha256_ctx" kindref="compound">B5_tSha256Ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/sha256.c" line="69" column="1" bodyfile="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/sha256.c" bodystart="69" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="group__sha_func_1gaf3507913b8ba5c90d7aecaa26456082e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t B5_Sha256_Init</definition>
        <argsstring>(B5_tSha256Ctx *ctx)</argsstring>
        <name>B5_Sha256_Init</name>
        <param>
          <type><ref refid="struct_b5__t_sha256_ctx" kindref="compound">B5_tSha256Ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Initialize the SHA256 context. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the SHA256 data structure to be initialized. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>See <ref refid="group__sha_return" kindref="compound">SHA256 return values</ref> . </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/sha256.c" line="181" column="1" bodyfile="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/sha256.c" bodystart="181" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="group__sha_func_1gafedcaa9cc6241df89b13d1533ab7583c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t B5_Sha256_Update</definition>
        <argsstring>(B5_tSha256Ctx *ctx, const uint8_t *data, int32_t dataLen)</argsstring>
        <name>B5_Sha256_Update</name>
        <param>
          <type><ref refid="struct_b5__t_sha256_ctx" kindref="compound">B5_tSha256Ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>dataLen</declname>
        </param>
        <briefdescription>
<para>Compute the SHA256 algorithm on input data depending on the current status of the SHA256 context. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the current SHA context. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the input data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dataLen</parametername>
</parameternamelist>
<parameterdescription>
<para>Bytes to be processed. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>See <ref refid="group__sha_return" kindref="compound">SHA256 return values</ref> . </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/sha256.c" line="210" column="1" bodyfile="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/sha256.c" bodystart="210" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="group__sha_func_1ga481d39b16dccfa2e85d4ad8962c1de3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t B5_Sha256_Finit</definition>
        <argsstring>(B5_tSha256Ctx *ctx, uint8_t *rDigest)</argsstring>
        <name>B5_Sha256_Finit</name>
        <param>
          <type><ref refid="struct_b5__t_sha256_ctx" kindref="compound">B5_tSha256Ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>rDigest</declname>
        </param>
        <briefdescription>
<para>De-initialize the current SHA256 context. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the SHA context to de-initialize. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rDigest</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a blank memory area that can store the computed output digest. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>See <ref refid="group__sha_return" kindref="compound">SHA256 return values</ref> . </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/sha256.c" line="262" column="1" bodyfile="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/sha256.c" bodystart="262" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="group__hmacsha_func_1ga1178a5df067377025aec0bdea3b8f63f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t B5_HmacSha256_Init</definition>
        <argsstring>(B5_tHmacSha256Ctx *ctx, const uint8_t *Key, int16_t keySize)</argsstring>
        <name>B5_HmacSha256_Init</name>
        <param>
          <type><ref refid="struct_b5__t_hmac_sha256_ctx" kindref="compound">B5_tHmacSha256Ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>Key</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>keySize</declname>
        </param>
        <briefdescription>
<para>Initialize the HMAC-SHA256 context. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the HMAC-SHA256 data structure to be initialized. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Key</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the Key that must be used. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keySize</parametername>
</parameternamelist>
<parameterdescription>
<para>Key size. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>See <ref refid="group__hmacsha_return" kindref="compound">HMAC-SHA256 return values</ref> . </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/sha256.c" line="316" column="1" bodyfile="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/sha256.c" bodystart="316" bodyend="363"/>
      </memberdef>
      <memberdef kind="function" id="group__hmacsha_func_1ga4e55de9980f2f0b132d1a5ec343289e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t B5_HmacSha256_Update</definition>
        <argsstring>(B5_tHmacSha256Ctx *ctx, const uint8_t *data, int32_t dataLen)</argsstring>
        <name>B5_HmacSha256_Update</name>
        <param>
          <type><ref refid="struct_b5__t_hmac_sha256_ctx" kindref="compound">B5_tHmacSha256Ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>dataLen</declname>
        </param>
        <briefdescription>
<para>Compute the HMAC-SHA256 algorithm on input data depending on the current status of the HMAC-SHA256 context. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the current HMAC-SHA256 context. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the input data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dataLen</parametername>
</parameternamelist>
<parameterdescription>
<para>Bytes to be processed. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>See <ref refid="group__hmacsha_return" kindref="compound">HMAC-SHA256 return values</ref> . </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/sha256.c" line="369" column="1" bodyfile="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/sha256.c" bodystart="369" bodyend="387"/>
      </memberdef>
      <memberdef kind="function" id="group__hmacsha_func_1gac36fde1fcd954065872e07dadbfccff7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t B5_HmacSha256_Finit</definition>
        <argsstring>(B5_tHmacSha256Ctx *ctx, uint8_t *rDigest)</argsstring>
        <name>B5_HmacSha256_Finit</name>
        <param>
          <type><ref refid="struct_b5__t_hmac_sha256_ctx" kindref="compound">B5_tHmacSha256Ctx</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>rDigest</declname>
        </param>
        <briefdescription>
<para>De-initialize the current HMAC-SHA256 context. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the HMAC-SHA256 context to de-initialize. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rDigest</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a blank memory area that can store the computed output digest. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>See <ref refid="group__hmacsha_return" kindref="compound">HMAC-SHA256 return values</ref> . </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/sha256.c" line="393" column="1" bodyfile="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/sha256.c" bodystart="393" bodyend="419"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/><sp/>LICENSE<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="preprocessor">#include<sp/>&quot;sha256.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>B5_SHA256_GETUINT32(uint32_t<sp/>*n,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*b,<sp/>int32_t<sp/>i)</highlight></codeline>
<codeline lineno="15"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>*n<sp/>=<sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>(uint32_t)<sp/>b[i<sp/><sp/><sp/><sp/>]<sp/>&lt;&lt;<sp/>24<sp/>)</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>(<sp/>(uint32_t)<sp/>b[i<sp/>+<sp/>1]<sp/>&lt;&lt;<sp/>16<sp/>)</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>(<sp/>(uint32_t)<sp/>b[i<sp/>+<sp/>2]<sp/>&lt;&lt;<sp/><sp/>8<sp/>)</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>(<sp/>(uint32_t)<sp/>b[i<sp/>+<sp/>3]<sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="20"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>B5_SHA256_PUTUINT32(uint32_t<sp/>n,uint8_t<sp/>*b,<sp/>int32_t<sp/>i)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="23"><highlight class="normal">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>b[i<sp/><sp/><sp/><sp/>]<sp/>=<sp/>(uint8_t)<sp/>(<sp/>n<sp/>&gt;&gt;<sp/>24<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>b[i<sp/>+<sp/>1]<sp/>=<sp/>(uint8_t)<sp/>(<sp/>n<sp/>&gt;&gt;<sp/>16<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>b[i<sp/>+<sp/>2]<sp/>=<sp/>(uint8_t)<sp/>(<sp/>n<sp/>&gt;&gt;<sp/><sp/>8<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>b[i<sp/>+<sp/>3]<sp/>=<sp/>(uint8_t)<sp/>(<sp/>n<sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B5_SHA256_SHR(x,n)<sp/>((x<sp/>&amp;<sp/>0xFFFFFFFF)<sp/>&gt;&gt;<sp/>n)</highlight></codeline>
<codeline lineno="32"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>B5_SHA256_ROTR(x,n)<sp/>(B5_SHA256_SHR(x,n)<sp/>|<sp/>(x<sp/>&lt;&lt;<sp/>(32<sp/>-<sp/>n)))</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B5_SHA256_S0(x)<sp/>(B5_SHA256_ROTR(x,<sp/>7)<sp/>^<sp/>B5_SHA256_ROTR(x,18)<sp/>^<sp/><sp/>B5_SHA256_SHR(x,<sp/>3))</highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>B5_SHA256_S1(x)<sp/>(B5_SHA256_ROTR(x,17)<sp/>^<sp/>B5_SHA256_ROTR(x,19)<sp/>^<sp/><sp/>B5_SHA256_SHR(x,10))</highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B5_SHA256_S2(x)<sp/>(B5_SHA256_ROTR(x,<sp/>2)<sp/>^<sp/>B5_SHA256_ROTR(x,13)<sp/>^<sp/>B5_SHA256_ROTR(x,22))</highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>B5_SHA256_S3(x)<sp/>(B5_SHA256_ROTR(x,<sp/>6)<sp/>^<sp/>B5_SHA256_ROTR(x,11)<sp/>^<sp/>B5_SHA256_ROTR(x,25))</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B5_SHA256_F0(x,y,z)<sp/>((x<sp/>&amp;<sp/>y)<sp/>|<sp/>(z<sp/>&amp;<sp/>(x<sp/>|<sp/>y)))</highlight></codeline>
<codeline lineno="41"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>B5_SHA256_F1(x,y,z)<sp/>(z<sp/>^<sp/>(x<sp/>&amp;<sp/>(y<sp/>^<sp/>z)))</highlight></codeline>
<codeline lineno="42"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B5_SHA256_R(t)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="44"><highlight class="preprocessor">(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="45"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>ctx-&gt;W[t]<sp/>=<sp/>B5_SHA256_S1(ctx-&gt;W[t<sp/>-<sp/><sp/>2])<sp/>+<sp/>ctx-&gt;W[t<sp/>-<sp/><sp/>7]<sp/>+<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="46"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>B5_SHA256_S0(ctx-&gt;W[t<sp/>-<sp/>15])<sp/>+<sp/>ctx-&gt;W[t<sp/>-<sp/>16]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="47"><highlight class="preprocessor">)</highlight></codeline>
<codeline lineno="48"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>B5_SHA256_P(uint32_t<sp/>a,uint32_t<sp/>b,uint32_t<sp/>c,uint32_t<sp/>*d,uint32_t<sp/>e,uint32_t<sp/>f,uint32_t<sp/>g,uint32_t<sp/>*h,uint32_t<sp/>x,uint32_t<sp/>K)</highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal">uint32_t<sp/>temp1,<sp/>temp2;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>temp1<sp/>=<sp/>*h<sp/>+<sp/>B5_SHA256_S3(e)<sp/>+<sp/>B5_SHA256_F1(e,f,g)<sp/>+<sp/>K<sp/>+<sp/>x;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>temp2<sp/>=<sp/>B5_SHA256_S2(a)<sp/>+<sp/>B5_SHA256_F0(a,b,c);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>*d<sp/>+=<sp/>temp1;<sp/>*h<sp/>=<sp/>temp1<sp/>+<sp/>temp2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Inner<sp/>padding<sp/>(ipad)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B5_HMAC_IPAD<sp/>0x36</highlight></codeline>
<codeline lineno="62"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Outer<sp/>padding<sp/>(opad)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>B5_HMAC_OPAD<sp/>0x5C</highlight></codeline>
<codeline lineno="65"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>B5_Sha256ProcessBlock(<ref refid="struct_b5__t_sha256_ctx" kindref="compound">B5_tSha256Ctx</ref><sp/>*ctx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*data)</highlight></codeline>
<codeline lineno="70"><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>A,<sp/>B,<sp/>C,<sp/>D,<sp/>E,<sp/>F,<sp/>G,<sp/>H;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_GETUINT32(<sp/>&amp;ctx-&gt;W[0],<sp/><sp/>data,<sp/><sp/>0<sp/>);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_GETUINT32(<sp/>&amp;ctx-&gt;W[1],<sp/><sp/>data,<sp/><sp/>4<sp/>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_GETUINT32(<sp/>&amp;ctx-&gt;W[2],<sp/><sp/>data,<sp/><sp/>8<sp/>);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_GETUINT32(<sp/>&amp;ctx-&gt;W[3],<sp/><sp/>data,<sp/>12<sp/>);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_GETUINT32(<sp/>&amp;ctx-&gt;W[4],<sp/><sp/>data,<sp/>16<sp/>);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_GETUINT32(<sp/>&amp;ctx-&gt;W[5],<sp/><sp/>data,<sp/>20<sp/>);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_GETUINT32(<sp/>&amp;ctx-&gt;W[6],<sp/><sp/>data,<sp/>24<sp/>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_GETUINT32(<sp/>&amp;ctx-&gt;W[7],<sp/><sp/>data,<sp/>28<sp/>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_GETUINT32(<sp/>&amp;ctx-&gt;W[8],<sp/><sp/>data,<sp/>32<sp/>);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_GETUINT32(<sp/>&amp;ctx-&gt;W[9],<sp/><sp/>data,<sp/>36<sp/>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_GETUINT32(<sp/>&amp;ctx-&gt;W[10],<sp/>data,<sp/>40<sp/>);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_GETUINT32(<sp/>&amp;ctx-&gt;W[11],<sp/>data,<sp/>44<sp/>);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_GETUINT32(<sp/>&amp;ctx-&gt;W[12],<sp/>data,<sp/>48<sp/>);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_GETUINT32(<sp/>&amp;ctx-&gt;W[13],<sp/>data,<sp/>52<sp/>);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_GETUINT32(<sp/>&amp;ctx-&gt;W[14],<sp/>data,<sp/>56<sp/>);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_GETUINT32(<sp/>&amp;ctx-&gt;W[15],<sp/>data,<sp/>60<sp/>);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>A<sp/>=<sp/>ctx-&gt;state[0];</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>B<sp/>=<sp/>ctx-&gt;state[1];</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>C<sp/>=<sp/>ctx-&gt;state[2];</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>D<sp/>=<sp/>ctx-&gt;state[3];</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>E<sp/>=<sp/>ctx-&gt;state[4];</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>F<sp/>=<sp/>ctx-&gt;state[5];</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>G<sp/>=<sp/>ctx-&gt;state[6];</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>H<sp/>=<sp/>ctx-&gt;state[7];</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_P(<sp/>A,<sp/>B,<sp/>C,<sp/>&amp;D,<sp/>E,<sp/>F,<sp/>G,<sp/>&amp;H,<sp/>ctx-&gt;W[<sp/>0],<sp/>0x428A2F98<sp/>);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_P(<sp/>H,<sp/>A,<sp/>B,<sp/>&amp;C,<sp/>D,<sp/>E,<sp/>F,<sp/>&amp;G,<sp/>ctx-&gt;W[<sp/>1],<sp/>0x71374491<sp/>);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_P(<sp/>G,<sp/>H,<sp/>A,<sp/>&amp;B,<sp/>C,<sp/>D,<sp/>E,<sp/>&amp;F,<sp/>ctx-&gt;W[<sp/>2],<sp/>0xB5C0FBCF<sp/>);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_P(<sp/>F,<sp/>G,<sp/>H,<sp/>&amp;A,<sp/>B,<sp/>C,<sp/>D,<sp/>&amp;E,<sp/>ctx-&gt;W[<sp/>3],<sp/>0xE9B5DBA5<sp/>);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_P(<sp/>E,<sp/>F,<sp/>G,<sp/>&amp;H,<sp/>A,<sp/>B,<sp/>C,<sp/>&amp;D,<sp/>ctx-&gt;W[<sp/>4],<sp/>0x3956C25B<sp/>);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_P(<sp/>D,<sp/>E,<sp/>F,<sp/>&amp;G,<sp/>H,<sp/>A,<sp/>B,<sp/>&amp;C,<sp/>ctx-&gt;W[<sp/>5],<sp/>0x59F111F1<sp/>);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_P(<sp/>C,<sp/>D,<sp/>E,<sp/>&amp;F,<sp/>G,<sp/>H,<sp/>A,<sp/>&amp;B,<sp/>ctx-&gt;W[<sp/>6],<sp/>0x923F82A4<sp/>);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_P(<sp/>B,<sp/>C,<sp/>D,<sp/>&amp;E,<sp/>F,<sp/>G,<sp/>H,<sp/>&amp;A,<sp/>ctx-&gt;W[<sp/>7],<sp/>0xAB1C5ED5<sp/>);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_P(<sp/>A,<sp/>B,<sp/>C,<sp/>&amp;D,<sp/>E,<sp/>F,<sp/>G,<sp/>&amp;H,<sp/>ctx-&gt;W[<sp/>8],<sp/>0xD807AA98<sp/>);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_P(<sp/>H,<sp/>A,<sp/>B,<sp/>&amp;C,<sp/>D,<sp/>E,<sp/>F,<sp/>&amp;G,<sp/>ctx-&gt;W[<sp/>9],<sp/>0x12835B01<sp/>);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_P(<sp/>G,<sp/>H,<sp/>A,<sp/>&amp;B,<sp/>C,<sp/>D,<sp/>E,<sp/>&amp;F,<sp/>ctx-&gt;W[10],<sp/>0x243185BE<sp/>);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_P(<sp/>F,<sp/>G,<sp/>H,<sp/>&amp;A,<sp/>B,<sp/>C,<sp/>D,<sp/>&amp;E,<sp/>ctx-&gt;W[11],<sp/>0x550C7DC3<sp/>);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_P(<sp/>E,<sp/>F,<sp/>G,<sp/>&amp;H,<sp/>A,<sp/>B,<sp/>C,<sp/>&amp;D,<sp/>ctx-&gt;W[12],<sp/>0x72BE5D74<sp/>);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_P(<sp/>D,<sp/>E,<sp/>F,<sp/>&amp;G,<sp/>H,<sp/>A,<sp/>B,<sp/>&amp;C,<sp/>ctx-&gt;W[13],<sp/>0x80DEB1FE<sp/>);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_P(<sp/>C,<sp/>D,<sp/>E,<sp/>&amp;F,<sp/>G,<sp/>H,<sp/>A,<sp/>&amp;B,<sp/>ctx-&gt;W[14],<sp/>0x9BDC06A7<sp/>);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_P(<sp/>B,<sp/>C,<sp/>D,<sp/>&amp;E,<sp/>F,<sp/>G,<sp/>H,<sp/>&amp;A,<sp/>ctx-&gt;W[15],<sp/>0xC19BF174<sp/>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_P(<sp/>A,<sp/>B,<sp/>C,<sp/>&amp;D,<sp/>E,<sp/>F,<sp/>G,<sp/>&amp;H,<sp/>B5_SHA256_R(16),<sp/>0xE49B69C1<sp/>);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_P(<sp/>H,<sp/>A,<sp/>B,<sp/>&amp;C,<sp/>D,<sp/>E,<sp/>F,<sp/>&amp;G,<sp/>B5_SHA256_R(17),<sp/>0xEFBE4786<sp/>);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_P(<sp/>G,<sp/>H,<sp/>A,<sp/>&amp;B,<sp/>C,<sp/>D,<sp/>E,<sp/>&amp;F,<sp/>B5_SHA256_R(18),<sp/>0x0FC19DC6<sp/>);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_P(<sp/>F,<sp/>G,<sp/>H,<sp/>&amp;A,<sp/>B,<sp/>C,<sp/>D,<sp/>&amp;E,<sp/>B5_SHA256_R(19),<sp/>0x240CA1CC<sp/>);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_P(<sp/>E,<sp/>F,<sp/>G,<sp/>&amp;H,<sp/>A,<sp/>B,<sp/>C,<sp/>&amp;D,<sp/>B5_SHA256_R(20),<sp/>0x2DE92C6F<sp/>);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_P(<sp/>D,<sp/>E,<sp/>F,<sp/>&amp;G,<sp/>H,<sp/>A,<sp/>B,<sp/>&amp;C,<sp/>B5_SHA256_R(21),<sp/>0x4A7484AA<sp/>);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_P(<sp/>C,<sp/>D,<sp/>E,<sp/>&amp;F,<sp/>G,<sp/>H,<sp/>A,<sp/>&amp;B,<sp/>B5_SHA256_R(22),<sp/>0x5CB0A9DC<sp/>);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_P(<sp/>B,<sp/>C,<sp/>D,<sp/>&amp;E,<sp/>F,<sp/>G,<sp/>H,<sp/>&amp;A,<sp/>B5_SHA256_R(23),<sp/>0x76F988DA<sp/>);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_P(<sp/>A,<sp/>B,<sp/>C,<sp/>&amp;D,<sp/>E,<sp/>F,<sp/>G,<sp/>&amp;H,<sp/>B5_SHA256_R(24),<sp/>0x983E5152<sp/>);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_P(<sp/>H,<sp/>A,<sp/>B,<sp/>&amp;C,<sp/>D,<sp/>E,<sp/>F,<sp/>&amp;G,<sp/>B5_SHA256_R(25),<sp/>0xA831C66D<sp/>);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_P(<sp/>G,<sp/>H,<sp/>A,<sp/>&amp;B,<sp/>C,<sp/>D,<sp/>E,<sp/>&amp;F,<sp/>B5_SHA256_R(26),<sp/>0xB00327C8<sp/>);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_P(<sp/>F,<sp/>G,<sp/>H,<sp/>&amp;A,<sp/>B,<sp/>C,<sp/>D,<sp/>&amp;E,<sp/>B5_SHA256_R(27),<sp/>0xBF597FC7<sp/>);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_P(<sp/>E,<sp/>F,<sp/>G,<sp/>&amp;H,<sp/>A,<sp/>B,<sp/>C,<sp/>&amp;D,<sp/>B5_SHA256_R(28),<sp/>0xC6E00BF3<sp/>);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_P(<sp/>D,<sp/>E,<sp/>F,<sp/>&amp;G,<sp/>H,<sp/>A,<sp/>B,<sp/>&amp;C,<sp/>B5_SHA256_R(29),<sp/>0xD5A79147<sp/>);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_P(<sp/>C,<sp/>D,<sp/>E,<sp/>&amp;F,<sp/>G,<sp/>H,<sp/>A,<sp/>&amp;B,<sp/>B5_SHA256_R(30),<sp/>0x06CA6351<sp/>);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_P(<sp/>B,<sp/>C,<sp/>D,<sp/>&amp;E,<sp/>F,<sp/>G,<sp/>H,<sp/>&amp;A,<sp/>B5_SHA256_R(31),<sp/>0x14292967<sp/>);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_P(<sp/>A,<sp/>B,<sp/>C,<sp/>&amp;D,<sp/>E,<sp/>F,<sp/>G,<sp/>&amp;H,<sp/>B5_SHA256_R(32),<sp/>0x27B70A85<sp/>);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_P(<sp/>H,<sp/>A,<sp/>B,<sp/>&amp;C,<sp/>D,<sp/>E,<sp/>F,<sp/>&amp;G,<sp/>B5_SHA256_R(33),<sp/>0x2E1B2138<sp/>);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_P(<sp/>G,<sp/>H,<sp/>A,<sp/>&amp;B,<sp/>C,<sp/>D,<sp/>E,<sp/>&amp;F,<sp/>B5_SHA256_R(34),<sp/>0x4D2C6DFC<sp/>);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_P(<sp/>F,<sp/>G,<sp/>H,<sp/>&amp;A,<sp/>B,<sp/>C,<sp/>D,<sp/>&amp;E,<sp/>B5_SHA256_R(35),<sp/>0x53380D13<sp/>);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_P(<sp/>E,<sp/>F,<sp/>G,<sp/>&amp;H,<sp/>A,<sp/>B,<sp/>C,<sp/>&amp;D,<sp/>B5_SHA256_R(36),<sp/>0x650A7354<sp/>);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_P(<sp/>D,<sp/>E,<sp/>F,<sp/>&amp;G,<sp/>H,<sp/>A,<sp/>B,<sp/>&amp;C,<sp/>B5_SHA256_R(37),<sp/>0x766A0ABB<sp/>);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_P(<sp/>C,<sp/>D,<sp/>E,<sp/>&amp;F,<sp/>G,<sp/>H,<sp/>A,<sp/>&amp;B,<sp/>B5_SHA256_R(38),<sp/>0x81C2C92E<sp/>);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_P(<sp/>B,<sp/>C,<sp/>D,<sp/>&amp;E,<sp/>F,<sp/>G,<sp/>H,<sp/>&amp;A,<sp/>B5_SHA256_R(39),<sp/>0x92722C85<sp/>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_P(<sp/>A,<sp/>B,<sp/>C,<sp/>&amp;D,<sp/>E,<sp/>F,<sp/>G,<sp/>&amp;H,<sp/>B5_SHA256_R(40),<sp/>0xA2BFE8A1<sp/>);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_P(<sp/>H,<sp/>A,<sp/>B,<sp/>&amp;C,<sp/>D,<sp/>E,<sp/>F,<sp/>&amp;G,<sp/>B5_SHA256_R(41),<sp/>0xA81A664B<sp/>);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_P(<sp/>G,<sp/>H,<sp/>A,<sp/>&amp;B,<sp/>C,<sp/>D,<sp/>E,<sp/>&amp;F,<sp/>B5_SHA256_R(42),<sp/>0xC24B8B70<sp/>);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_P(<sp/>F,<sp/>G,<sp/>H,<sp/>&amp;A,<sp/>B,<sp/>C,<sp/>D,<sp/>&amp;E,<sp/>B5_SHA256_R(43),<sp/>0xC76C51A3<sp/>);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_P(<sp/>E,<sp/>F,<sp/>G,<sp/>&amp;H,<sp/>A,<sp/>B,<sp/>C,<sp/>&amp;D,<sp/>B5_SHA256_R(44),<sp/>0xD192E819<sp/>);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_P(<sp/>D,<sp/>E,<sp/>F,<sp/>&amp;G,<sp/>H,<sp/>A,<sp/>B,<sp/>&amp;C,<sp/>B5_SHA256_R(45),<sp/>0xD6990624<sp/>);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_P(<sp/>C,<sp/>D,<sp/>E,<sp/>&amp;F,<sp/>G,<sp/>H,<sp/>A,<sp/>&amp;B,<sp/>B5_SHA256_R(46),<sp/>0xF40E3585<sp/>);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_P(<sp/>B,<sp/>C,<sp/>D,<sp/>&amp;E,<sp/>F,<sp/>G,<sp/>H,<sp/>&amp;A,<sp/>B5_SHA256_R(47),<sp/>0x106AA070<sp/>);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_P(<sp/>A,<sp/>B,<sp/>C,<sp/>&amp;D,<sp/>E,<sp/>F,<sp/>G,<sp/>&amp;H,<sp/>B5_SHA256_R(48),<sp/>0x19A4C116<sp/>);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_P(<sp/>H,<sp/>A,<sp/>B,<sp/>&amp;C,<sp/>D,<sp/>E,<sp/>F,<sp/>&amp;G,<sp/>B5_SHA256_R(49),<sp/>0x1E376C08<sp/>);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_P(<sp/>G,<sp/>H,<sp/>A,<sp/>&amp;B,<sp/>C,<sp/>D,<sp/>E,<sp/>&amp;F,<sp/>B5_SHA256_R(50),<sp/>0x2748774C<sp/>);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_P(<sp/>F,<sp/>G,<sp/>H,<sp/>&amp;A,<sp/>B,<sp/>C,<sp/>D,<sp/>&amp;E,<sp/>B5_SHA256_R(51),<sp/>0x34B0BCB5<sp/>);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_P(<sp/>E,<sp/>F,<sp/>G,<sp/>&amp;H,<sp/>A,<sp/>B,<sp/>C,<sp/>&amp;D,<sp/>B5_SHA256_R(52),<sp/>0x391C0CB3<sp/>);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_P(<sp/>D,<sp/>E,<sp/>F,<sp/>&amp;G,<sp/>H,<sp/>A,<sp/>B,<sp/>&amp;C,<sp/>B5_SHA256_R(53),<sp/>0x4ED8AA4A<sp/>);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_P(<sp/>C,<sp/>D,<sp/>E,<sp/>&amp;F,<sp/>G,<sp/>H,<sp/>A,<sp/>&amp;B,<sp/>B5_SHA256_R(54),<sp/>0x5B9CCA4F<sp/>);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_P(<sp/>B,<sp/>C,<sp/>D,<sp/>&amp;E,<sp/>F,<sp/>G,<sp/>H,<sp/>&amp;A,<sp/>B5_SHA256_R(55),<sp/>0x682E6FF3<sp/>);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_P(<sp/>A,<sp/>B,<sp/>C,<sp/>&amp;D,<sp/>E,<sp/>F,<sp/>G,<sp/>&amp;H,<sp/>B5_SHA256_R(56),<sp/>0x748F82EE<sp/>);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_P(<sp/>H,<sp/>A,<sp/>B,<sp/>&amp;C,<sp/>D,<sp/>E,<sp/>F,<sp/>&amp;G,<sp/>B5_SHA256_R(57),<sp/>0x78A5636F<sp/>);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_P(<sp/>G,<sp/>H,<sp/>A,<sp/>&amp;B,<sp/>C,<sp/>D,<sp/>E,<sp/>&amp;F,<sp/>B5_SHA256_R(58),<sp/>0x84C87814<sp/>);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_P(<sp/>F,<sp/>G,<sp/>H,<sp/>&amp;A,<sp/>B,<sp/>C,<sp/>D,<sp/>&amp;E,<sp/>B5_SHA256_R(59),<sp/>0x8CC70208<sp/>);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_P(<sp/>E,<sp/>F,<sp/>G,<sp/>&amp;H,<sp/>A,<sp/>B,<sp/>C,<sp/>&amp;D,<sp/>B5_SHA256_R(60),<sp/>0x90BEFFFA<sp/>);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_P(<sp/>D,<sp/>E,<sp/>F,<sp/>&amp;G,<sp/>H,<sp/>A,<sp/>B,<sp/>&amp;C,<sp/>B5_SHA256_R(61),<sp/>0xA4506CEB<sp/>);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_P(<sp/>C,<sp/>D,<sp/>E,<sp/>&amp;F,<sp/>G,<sp/>H,<sp/>A,<sp/>&amp;B,<sp/>B5_SHA256_R(62),<sp/>0xBEF9A3F7<sp/>);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_P(<sp/>B,<sp/>C,<sp/>D,<sp/>&amp;E,<sp/>F,<sp/>G,<sp/>H,<sp/>&amp;A,<sp/>B5_SHA256_R(63),<sp/>0xC67178F2<sp/>);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx-&gt;state[0]<sp/>+=<sp/>A;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx-&gt;state[1]<sp/>+=<sp/>B;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx-&gt;state[2]<sp/>+=<sp/>C;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx-&gt;state[3]<sp/>+=<sp/>D;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx-&gt;state[4]<sp/>+=<sp/>E;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx-&gt;state[5]<sp/>+=<sp/>F;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx-&gt;state[6]<sp/>+=<sp/>G;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx-&gt;state[7]<sp/>+=<sp/>H;</highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal">int32_t<sp/><ref refid="group__sha_func_1gaf3507913b8ba5c90d7aecaa26456082e" kindref="member">B5_Sha256_Init</ref><sp/>(<ref refid="struct_b5__t_sha256_ctx" kindref="compound">B5_tSha256Ctx</ref><sp/>*ctx)</highlight></codeline>
<codeline lineno="182"><highlight class="normal">{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ctx<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>B5_SHA256_RES_INVALID_CONTEXT;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(ctx,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_b5__t_sha256_ctx" kindref="compound">B5_tSha256Ctx</ref>));</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>initial<sp/>hash<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx-&gt;total[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx-&gt;total[1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx-&gt;state[0]<sp/>=<sp/>0x6A09E667;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx-&gt;state[1]<sp/>=<sp/>0xBB67AE85;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx-&gt;state[2]<sp/>=<sp/>0x3C6EF372;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx-&gt;state[3]<sp/>=<sp/>0xA54FF53A;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx-&gt;state[4]<sp/>=<sp/>0x510E527F;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx-&gt;state[5]<sp/>=<sp/>0x9B05688C;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx-&gt;state[6]<sp/>=<sp/>0x1F83D9AB;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx-&gt;state[7]<sp/>=<sp/>0x5BE0CD19;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>B5_SHA256_RES_OK;</highlight></codeline>
<codeline lineno="204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal">int32_t<sp/><ref refid="group__sha_func_1gafedcaa9cc6241df89b13d1533ab7583c" kindref="member">B5_Sha256_Update</ref><sp/>(<ref refid="struct_b5__t_sha256_ctx" kindref="compound">B5_tSha256Ctx</ref><sp/>*ctx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>data,<sp/>int32_t<sp/>dataLen)<sp/></highlight></codeline>
<codeline lineno="211"><highlight class="normal">{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>left,<sp/>fill;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ctx<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>B5_SHA256_RES_INVALID_CONTEXT;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((data<sp/>==<sp/>NULL)<sp/>||<sp/>(dataLen<sp/>&lt;<sp/>0))</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>B5_SHA256_RES_INVALID_ARGUMENT;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>left<sp/>=<sp/>ctx-&gt;total[0]<sp/>&amp;<sp/>0x3F;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>fill<sp/>=<sp/>64<sp/>-<sp/>left;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx-&gt;total[0]<sp/>+=<sp/>dataLen;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx-&gt;total[0]<sp/>&amp;=<sp/>0xFFFFFFFF;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>ctx-&gt;total[0]<sp/>&lt;<sp/>(uint32_t)<sp/>dataLen<sp/>)</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctx-&gt;total[1]++;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>left<sp/>&amp;&amp;<sp/>((uint32_t)<sp/>dataLen<sp/>&gt;=<sp/>fill)<sp/>)</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>(ctx-&gt;buffer<sp/>+<sp/>left),</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>data,<sp/>fill<sp/>);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>B5_Sha256ProcessBlock(<sp/>ctx,<sp/>ctx-&gt;buffer<sp/>);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataLen<sp/>-=<sp/>fill;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/><sp/>+=<sp/>fill;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>dataLen<sp/>&gt;=<sp/>64<sp/>)</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>B5_Sha256ProcessBlock(<sp/>ctx,<sp/>data<sp/>);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataLen<sp/>-=<sp/>64;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/><sp/>+=<sp/>64;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>dataLen<sp/>)</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>(ctx-&gt;buffer<sp/>+<sp/>left),</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>data,<sp/>dataLen<sp/>);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>B5_SHA256_RES_OK;</highlight></codeline>
<codeline lineno="256"><highlight class="normal">}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal">int32_t<sp/><ref refid="group__sha_func_1ga481d39b16dccfa2e85d4ad8962c1de3a" kindref="member">B5_Sha256_Finit</ref><sp/>(<ref refid="struct_b5__t_sha256_ctx" kindref="compound">B5_tSha256Ctx</ref><sp/>*ctx,<sp/>uint8_t*<sp/>rDigest)</highlight></codeline>
<codeline lineno="263"><highlight class="normal">{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/>sha2_padding[64];</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/>last,<sp/>padn;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/>high,<sp/>low;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/>msglen[8];</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ctx<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>B5_SHA256_RES_INVALID_CONTEXT;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rDigest<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>B5_SHA256_RES_INVALID_ARGUMENT;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(sha2_padding,0x00,64);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>sha2_padding[0]<sp/>=<sp/>0x80;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>high<sp/>=<sp/>(<sp/>ctx-&gt;total[0]<sp/>&gt;&gt;<sp/>29<sp/>)</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>(<sp/>ctx-&gt;total[1]<sp/>&lt;&lt;<sp/><sp/>3<sp/>);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>low<sp/><sp/>=<sp/>(<sp/>ctx-&gt;total[0]<sp/>&lt;&lt;<sp/><sp/>3<sp/>);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_PUTUINT32(<sp/>high,<sp/>msglen,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_PUTUINT32(<sp/>low,<sp/><sp/>msglen,<sp/>4<sp/>);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>last<sp/>=<sp/>ctx-&gt;total[0]<sp/>&amp;<sp/>0x3F;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>padn<sp/>=<sp/>(<sp/>last<sp/>&lt;<sp/>56<sp/>)<sp/>?<sp/>(<sp/>56<sp/>-<sp/>last<sp/>)<sp/>:<sp/>(<sp/>120<sp/>-<sp/>last<sp/>);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sha_func_1gafedcaa9cc6241df89b13d1533ab7583c" kindref="member">B5_Sha256_Update</ref>(ctx,<sp/>sha2_padding,<sp/>padn<sp/>);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sha_func_1gafedcaa9cc6241df89b13d1533ab7583c" kindref="member">B5_Sha256_Update</ref>(ctx,<sp/>msglen,<sp/>8<sp/>);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_PUTUINT32(<sp/>ctx-&gt;state[0],<sp/>rDigest,<sp/><sp/>0<sp/>);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_PUTUINT32(<sp/>ctx-&gt;state[1],<sp/>rDigest,<sp/><sp/>4<sp/>);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_PUTUINT32(<sp/>ctx-&gt;state[2],<sp/>rDigest,<sp/><sp/>8<sp/>);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_PUTUINT32(<sp/>ctx-&gt;state[3],<sp/>rDigest,<sp/>12<sp/>);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_PUTUINT32(<sp/>ctx-&gt;state[4],<sp/>rDigest,<sp/>16<sp/>);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_PUTUINT32(<sp/>ctx-&gt;state[5],<sp/>rDigest,<sp/>20<sp/>);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_PUTUINT32(<sp/>ctx-&gt;state[6],<sp/>rDigest,<sp/>24<sp/>);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_SHA256_PUTUINT32(<sp/>ctx-&gt;state[7],<sp/>rDigest,<sp/>28<sp/>);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>B5_SHA256_RES_OK;</highlight></codeline>
<codeline lineno="308"><highlight class="normal">}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal">int32_t<sp/><ref refid="group__hmacsha_func_1ga1178a5df067377025aec0bdea3b8f63f" kindref="member">B5_HmacSha256_Init</ref><sp/>(<ref refid="struct_b5__t_hmac_sha256_ctx" kindref="compound">B5_tHmacSha256Ctx</ref><sp/>*ctx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*Key,<sp/>int16_t<sp/>keySize)</highlight></codeline>
<codeline lineno="317"><highlight class="normal">{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/><sp/><sp/>i;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/>digest[B5_SHA256_DIGEST_SIZE];</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(Key<sp/>==<sp/>NULL)<sp/></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>B5_HMAC_SHA256_RES_INVALID_ARGUMENT;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ctx<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>B5_HMAC_SHA256_RES_INVALID_CONTEXT;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(ctx,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_b5__t_hmac_sha256_ctx" kindref="compound">B5_tHmacSha256Ctx</ref>));</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//The<sp/>key<sp/>is<sp/>longer<sp/>than<sp/>the<sp/>block<sp/>size?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(keySize<sp/>&gt;<sp/>B5_SHA256_BLOCK_SIZE)</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>hash<sp/>function<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sha_func_1gaf3507913b8ba5c90d7aecaa26456082e" kindref="member">B5_Sha256_Init</ref>(&amp;ctx-&gt;shaCtx);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Digest<sp/>the<sp/>original<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sha_func_1gafedcaa9cc6241df89b13d1533ab7583c" kindref="member">B5_Sha256_Update</ref>(&amp;ctx-&gt;shaCtx,<sp/>Key,<sp/>keySize);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Finalize<sp/>the<sp/>message<sp/>digest<sp/>computation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sha_func_1ga481d39b16dccfa2e85d4ad8962c1de3a" kindref="member">B5_Sha256_Finit</ref>(&amp;ctx-&gt;shaCtx,<sp/>digest);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Key<sp/>=<sp/>digest;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keySize<sp/>=<sp/>B5_SHA256_DIGEST_SIZE;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(<sp/>ctx-&gt;iPad,<sp/>B5_HMAC_IPAD,<sp/>64<sp/>);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(<sp/>ctx-&gt;oPad,<sp/>B5_HMAC_OPAD,<sp/>64<sp/>);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>keySize;<sp/>i++<sp/>)</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctx-&gt;iPad[i]<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char)(<sp/>ctx-&gt;iPad[i]<sp/>^<sp/>Key[i]<sp/>);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctx-&gt;oPad[i]<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char)(<sp/>ctx-&gt;oPad[i]<sp/>^<sp/>Key[i]<sp/>);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>context<sp/>for<sp/>the<sp/>first<sp/>pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sha_func_1gaf3507913b8ba5c90d7aecaa26456082e" kindref="member">B5_Sha256_Init</ref>(&amp;ctx-&gt;shaCtx);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>with<sp/>the<sp/>inner<sp/>pad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sha_func_1gafedcaa9cc6241df89b13d1533ab7583c" kindref="member">B5_Sha256_Update</ref>(&amp;ctx-&gt;shaCtx,<sp/>ctx-&gt;iPad,<sp/>B5_SHA256_BLOCK_SIZE);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>B5_HMAC_SHA256_RES_OK;</highlight></codeline>
<codeline lineno="363"><highlight class="normal">}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal">int32_t<sp/><ref refid="group__hmacsha_func_1ga4e55de9980f2f0b132d1a5ec343289e0" kindref="member">B5_HmacSha256_Update</ref><sp/>(<ref refid="struct_b5__t_hmac_sha256_ctx" kindref="compound">B5_tHmacSha256Ctx</ref><sp/>*ctx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*data,<sp/>int32_t<sp/>dataLen)</highlight></codeline>
<codeline lineno="370"><highlight class="normal">{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ctx<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>B5_HMAC_SHA256_RES_INVALID_CONTEXT;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((data<sp/>==<sp/>NULL)<sp/>||<sp/>(dataLen<sp/>&lt;<sp/>0))</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>B5_HMAC_SHA256_RES_INVALID_ARGUMENT;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dataLen<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>B5_HMAC_SHA256_RES_OK;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Digest<sp/>the<sp/>message<sp/>(first<sp/>pass)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sha_func_1gafedcaa9cc6241df89b13d1533ab7583c" kindref="member">B5_Sha256_Update</ref>(&amp;ctx-&gt;shaCtx,<sp/>data,<sp/>dataLen);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>B5_HMAC_SHA256_RES_OK;</highlight></codeline>
<codeline lineno="387"><highlight class="normal">}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal">int32_t<sp/><ref refid="group__hmacsha_func_1gac36fde1fcd954065872e07dadbfccff7" kindref="member">B5_HmacSha256_Finit</ref><sp/>(<ref refid="struct_b5__t_hmac_sha256_ctx" kindref="compound">B5_tHmacSha256Ctx</ref><sp/>*ctx,<sp/>uint8_t<sp/>*rDigest)</highlight></codeline>
<codeline lineno="394"><highlight class="normal">{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/>digest[B5_SHA256_DIGEST_SIZE];</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ctx<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>B5_HMAC_SHA256_RES_INVALID_CONTEXT;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rDigest<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>B5_HMAC_SHA256_RES_INVALID_ARGUMENT;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Finish<sp/>the<sp/>first<sp/>pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sha_func_1ga481d39b16dccfa2e85d4ad8962c1de3a" kindref="member">B5_Sha256_Finit</ref>(&amp;ctx-&gt;shaCtx,<sp/>digest);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>context<sp/>for<sp/>the<sp/>second<sp/>pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sha_func_1gaf3507913b8ba5c90d7aecaa26456082e" kindref="member">B5_Sha256_Init</ref>(&amp;ctx-&gt;shaCtx);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>with<sp/>outer<sp/>pad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sha_func_1gafedcaa9cc6241df89b13d1533ab7583c" kindref="member">B5_Sha256_Update</ref>(&amp;ctx-&gt;shaCtx,<sp/>ctx-&gt;oPad,<sp/>B5_SHA256_BLOCK_SIZE);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Then<sp/>digest<sp/>the<sp/>result<sp/>of<sp/>the<sp/>first<sp/>hash</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sha_func_1gafedcaa9cc6241df89b13d1533ab7583c" kindref="member">B5_Sha256_Update</ref>(&amp;ctx-&gt;shaCtx,<sp/>digest,<sp/>B5_SHA256_DIGEST_SIZE);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Finish<sp/>the<sp/>second<sp/>pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sha_func_1ga481d39b16dccfa2e85d4ad8962c1de3a" kindref="member">B5_Sha256_Finit</ref>(&amp;ctx-&gt;shaCtx,<sp/>rDigest);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>B5_HMAC_SHA256_RES_OK;</highlight></codeline>
<codeline lineno="419"><highlight class="normal">}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/sha256.c"/>
  </compounddef>
</doxygen>
