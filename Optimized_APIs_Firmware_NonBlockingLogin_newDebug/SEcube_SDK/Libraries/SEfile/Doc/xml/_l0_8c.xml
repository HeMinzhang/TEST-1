<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="_l0_8c" kind="file">
    <compoundname>L0.c</compoundname>
    <includes refid="_l0_8h" local="yes">L0.h</includes>
    <incdepgraph>
      <node id="41">
        <label>stdbool.h</label>
      </node>
      <node id="37">
        <label>se3c0def.h</label>
        <link refid="se3c0def_8h_source"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>se3comm.h</label>
        <link refid="se3comm_8h_source"/>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>se3_common.h</label>
        <link refid="se3__common_8h_source"/>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>sha256.h</label>
        <link refid="sha256_8h_source"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>stdint.h</label>
      </node>
      <node id="38">
        <label>stdlib.h</label>
      </node>
      <node id="47">
        <label>Windows.h</label>
      </node>
      <node id="45">
        <label>pbkdf2.h</label>
        <link refid="pbkdf2_8h_source"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>stddef.h</label>
      </node>
      <node id="43">
        <label>string.h</label>
      </node>
      <node id="34">
        <label>/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/L0.c</label>
        <link refid="L0.c"/>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>L0.h</label>
        <link refid="_l0_8h_source"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>time.h</label>
      </node>
      <node id="49">
        <label>crc16.h</label>
        <link refid="crc16_8h_source"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>aes256.h</label>
        <link refid="aes256_8h_source"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="_l0_8c_1a6c47eda89dae367319c5103a457a501f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>static uint16_t L0_TX</definition>
        <argsstring>(se3_device *device, uint16_t cmd, uint16_t cmd_flags, uint16_t len, const uint8_t *data)</argsstring>
        <name>L0_TX</name>
        <param>
          <type><ref refid="structse3__device__" kindref="compound">se3_device</ref> *</type>
          <declname>device</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>cmd</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>cmd_flags</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/L0.c" line="3" column="1" bodyfile="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/L0.c" bodystart="74" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="_l0_8c_1ae1a02fba972265b17df109289a2ae08b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>static uint16_t L0_RX</definition>
        <argsstring>(se3_device *device, uint16_t *resp_status, uint16_t *resp_len, uint8_t *resp_data)</argsstring>
        <name>L0_RX</name>
        <param>
          <type><ref refid="structse3__device__" kindref="compound">se3_device</ref> *</type>
          <declname>device</declname>
        </param>
        <param>
          <type>uint16_t *</type>
          <declname>resp_status</declname>
        </param>
        <param>
          <type>uint16_t *</type>
          <declname>resp_len</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>resp_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/L0.c" line="4" column="1" bodyfile="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/L0.c" bodystart="138" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="_l0_8c_1a353c787635ef97ae485d9a1ef79d84d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t L0_TXRX</definition>
        <argsstring>(se3_device *device, uint16_t req_cmd, uint16_t req_cmdflags, uint16_t req_len, const uint8_t *req_data, uint16_t *resp_status, uint16_t *resp_len, uint8_t *resp_data)</argsstring>
        <name>L0_TXRX</name>
        <param>
          <type><ref refid="structse3__device__" kindref="compound">se3_device</ref> *</type>
          <declname>device</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>req_cmd</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>req_cmdflags</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>req_len</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>req_data</declname>
        </param>
        <param>
          <type>uint16_t *</type>
          <declname>resp_status</declname>
        </param>
        <param>
          <type>uint16_t *</type>
          <declname>resp_len</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>resp_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>resp_len</parametername>
</parameternamelist>
<parameterdescription>
<para>in: maximum size of resp_data, out: effective size of resp_data </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/L0.c" line="41" column="1" bodyfile="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/L0.c" bodystart="41" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="_l0_8c_1ab9d73d38063cdd73114620708dd7dd16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t L0_echo</definition>
        <argsstring>(se3_device *device, const uint8_t *data_in, uint16_t data_in_len, uint8_t *data_out)</argsstring>
        <name>L0_echo</name>
        <param>
          <type><ref refid="structse3__device__" kindref="compound">se3_device</ref> *</type>
          <declname>device</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>data_in</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>data_in_len</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>data_out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/L0.c" line="232" column="1" bodyfile="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/L0.c" bodystart="232" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="_l0_8c_1a34c609bc570ca78ef73e16a9122695e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t L0_factoryinit</definition>
        <argsstring>(se3_device *device, const uint8_t *serialno)</argsstring>
        <name>L0_factoryinit</name>
        <param>
          <type><ref refid="structse3__device__" kindref="compound">se3_device</ref> *</type>
          <declname>device</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>serialno</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/L0.c" line="245" column="1" bodyfile="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/L0.c" bodystart="245" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="_l0_8c_1a4294775b050e1ecd2a978b1460c9c402" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void L0_discover_init</definition>
        <argsstring>(se3_disco_it *it)</argsstring>
        <name>L0_discover_init</name>
        <param>
          <type><ref refid="structse3__disco__it__" kindref="compound">se3_disco_it</ref> *</type>
          <declname>it</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/L0.c" line="257" column="1" bodyfile="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/L0.c" bodystart="257" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="_l0_8c_1a512850a6b42a819da88a8767c0ff0caa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool L0_discover_next</definition>
        <argsstring>(se3_disco_it *it)</argsstring>
        <name>L0_discover_next</name>
        <param>
          <type><ref refid="structse3__disco__it__" kindref="compound">se3_disco_it</ref> *</type>
          <declname>it</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/L0.c" line="263" column="1" bodyfile="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/L0.c" bodystart="263" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="_l0_8c_1a17a412db0eaddee7ab0b1d8ef04e50e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool L0_discover_serialno</definition>
        <argsstring>(uint8_t *serialno, se3_device_info *device)</argsstring>
        <name>L0_discover_serialno</name>
        <param>
          <type>uint8_t *</type>
          <declname>serialno</declname>
        </param>
        <param>
          <type><ref refid="structse3__device__info__" kindref="compound">se3_device_info</ref> *</type>
          <declname>device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/L0.c" line="283" column="1" bodyfile="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/L0.c" bodystart="283" bodyend="294"/>
      </memberdef>
      <memberdef kind="function" id="_l0_8c_1affc090d37506a44ba96d2dfed5867700" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t L0_open</definition>
        <argsstring>(se3_device *dev, se3_device_info *dev_info, uint32_t timeout)</argsstring>
        <name>L0_open</name>
        <param>
          <type><ref refid="structse3__device__" kindref="compound">se3_device</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type><ref refid="structse3__device__info__" kindref="compound">se3_device_info</ref> *</type>
          <declname>dev_info</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/L0.c" line="297" column="1" bodyfile="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/L0.c" bodystart="297" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="_l0_8c_1a5bd035af2ad1311a811bde0575a373b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void L0_close</definition>
        <argsstring>(se3_device *dev)</argsstring>
        <name>L0_close</name>
        <param>
          <type><ref refid="structse3__device__" kindref="compound">se3_device</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/L0.c" line="321" column="1" bodyfile="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/L0.c" bodystart="321" bodyend="335"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;L0.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint16_t<sp/>L0_TX(<ref refid="structse3__device__" kindref="compound">se3_device</ref>*<sp/>device,<sp/>uint16_t<sp/>cmd,<sp/>uint16_t<sp/>cmd_flags,<sp/>uint16_t<sp/>len,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>data);</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint16_t<sp/>L0_RX(<ref refid="structse3__device__" kindref="compound">se3_device</ref>*<sp/>device,<sp/>uint16_t*<sp/>resp_status,<sp/>uint16_t*<sp/>resp_len,<sp/>uint8_t*<sp/>resp_data);</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CUBESIM</highlight></codeline>
<codeline lineno="8"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;se3_proto.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>se3c_write_sim(uint8_t*<sp/>buf,<sp/><ref refid="structse3__file" kindref="compound">se3_file</ref><sp/>hfile,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>block,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nblocks,<sp/>uint32_t<sp/>timeout)<sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>se3_proto_recv(1,<sp/>buf,<sp/>(uint32_t)(101<sp/>+<sp/>block),<sp/>(uint16_t)nblocks);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>se3c_read_sim(uint8_t*<sp/>buf,<sp/><ref refid="structse3__file" kindref="compound">se3_file</ref><sp/>hfile,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>block,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nblocks,<sp/>uint32_t<sp/>timeout)<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>se3_proto_send(1,<sp/>buf,<sp/>(uint32_t)(101<sp/>+<sp/>block),<sp/>(uint16_t)nblocks);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16"><highlight class="normal">uint16_t<sp/>L0_open_sim(<ref refid="structse3__device__" kindref="compound">se3_device</ref>*<sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t*<sp/>buf<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i,<sp/>k;<sp/><ref refid="structse3__file" kindref="compound">se3_file</ref><sp/>foo<sp/>=<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(s,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structse3__device__" kindref="compound">se3_device</ref>));</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;request<sp/>=<sp/>(uint8_t*)malloc(SE3_COMM_N*SE3_COMM_BLOCK);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;response<sp/>=<sp/>(uint8_t*)malloc(SE3_COMM_N*SE3_COMM_BLOCK);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>buf<sp/>=<sp/>(uint8_t*)malloc(SE3_COMM_N<sp/>*<sp/>SE3_COMM_BLOCK);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>16;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>SE3_COMM_BLOCK;<sp/>k<sp/>+=<sp/>SE3_MAGIC_SIZE)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(buf<sp/>+<sp/>i*SE3_COMM_BLOCK<sp/>+<sp/>k,<sp/>se3_magic,<sp/>SE3_MAGIC_SIZE);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf[(i<sp/>+<sp/>1)*SE3_COMM_BLOCK<sp/>-<sp/>1]<sp/>=<sp/>(uint8_t)i;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>se3c_write_sim(buf,<sp/>foo,<sp/>0,<sp/>16,<sp/>0);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>free(buf);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>SE3_OK;</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>se3c_write<sp/>se3c_write_sim</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>se3c_read<sp/>se3c_read_sim</highlight></codeline>
<codeline lineno="34"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>L0_TXRX</highlight></codeline>
<codeline lineno="41"><highlight class="comment"></highlight><highlight class="normal">uint16_t<sp/>L0_TXRX(<ref refid="structse3__device__" kindref="compound">se3_device</ref>*<sp/>device,<sp/>uint16_t<sp/>req_cmd,<sp/>uint16_t<sp/>req_cmdflags,<sp/>uint16_t<sp/>req_len,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>req_data,<sp/>uint16_t*<sp/>resp_status,<sp/>uint16_t*<sp/>resp_len,<sp/>uint8_t*<sp/>resp_data)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>r<sp/>=<sp/>0;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>error<sp/>=<sp/>0;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>error<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>parameters<sp/>are<sp/>valid<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(device<sp/>==<sp/>NULL<sp/>||</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>req_len<sp/>&gt;<sp/>SE3_REQ_MAX_DATA)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(SE3_ERR_PARAMS);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Send<sp/>Request<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/>L0_TX(device,<sp/>req_cmd,<sp/>req_cmdflags,<sp/>req_len,<sp/>req_data);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error<sp/>!=<sp/>SE3_OK)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(error);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Receive<sp/>Response<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/>L0_RX(device,<sp/>resp_status,<sp/>resp_len,<sp/>resp_data);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error<sp/>!=<sp/>SE3_OK)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(error);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(SE3_OK);</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint16_t<sp/>L0_TX(<ref refid="structse3__device__" kindref="compound">se3_device</ref>*<sp/>device,<sp/>uint16_t<sp/>cmd,<sp/>uint16_t<sp/>cmd_flags,<sp/>uint16_t<sp/>len,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>data)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t*<sp/>request<sp/>=<sp/>device-&gt;request;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Buffer<sp/>to<sp/>be<sp/>sent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>cmd_token<sp/>=<sp/>0;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Command<sp/>Token</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SE3_CONF_CRC</highlight></codeline>
<codeline lineno="78"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>crc;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="80"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>nblocks<sp/>=<sp/>0;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>logical<sp/>data<sp/>blocks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>index<sp/>variable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>cmd_token_block<sp/>=<sp/>0;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Command<sp/>Token<sp/>for<sp/>data<sp/>blocks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>offset_src<sp/>=<sp/>0;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Offset<sp/>for<sp/>source<sp/>data<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>offset_dst<sp/>=<sp/>0;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Offset<sp/>for<sp/>destination<sp/>blocks<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>len_data_and_headers<sp/>=<sp/>se3_req_len_data_and_headers(len);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>se3c_rand(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint32_t),<sp/>(uint8_t*)&amp;cmd_token);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>header<sp/>fields<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>SE3_SET16(request,<sp/>SE3_REQ_OFFSET_CMD,<sp/>cmd);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>SE3_SET16(request,<sp/>SE3_REQ_OFFSET_CMDFLAGS,<sp/>cmd_flags);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>SE3_SET16(request,<sp/>SE3_REQ_OFFSET_LEN,<sp/>len_data_and_headers);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>SE3_SET32(request,<sp/>SE3_REQ_OFFSET_CMDTOKEN,<sp/>cmd_token);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(request<sp/>+<sp/>SE3_REQ_OFFSET_PADDING,<sp/>0,<sp/>4);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SE3_CONF_CRC</highlight></codeline>
<codeline lineno="99"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>crc<sp/>of<sp/>headers<sp/>and<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>crc<sp/>=<sp/>se3_crc16_update(SE3_REQ_OFFSET_CRC,<sp/>request,<sp/>0);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crc<sp/>=<sp/>se3_crc16_update(len,<sp/>data,<sp/>crc);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>SE3_SET16(request,<sp/>SE3_REQ_OFFSET_CRC,<sp/>crc);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="106"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>(len<sp/>&lt;<sp/>(SE3_COMM_BLOCK<sp/>-<sp/>SE3_REQ_SIZE_HEADER))<sp/>?<sp/>(len)<sp/>:<sp/>(SE3_COMM_BLOCK<sp/>-<sp/>SE3_REQ_SIZE_HEADER);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(request<sp/>+<sp/>SE3_REQ_SIZE_HEADER,<sp/>data,<sp/>n);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>offset_dst<sp/>=<sp/>SE3_COMM_BLOCK;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>offset_src<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>nblocks<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(offset_src<sp/>&lt;<sp/>len)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd_token++;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>((len<sp/>-<sp/>offset_src)<sp/>&lt;<sp/>(SE3_COMM_BLOCK<sp/>-<sp/>SE3_REQDATA_SIZE_HEADER))<sp/>?<sp/>(len<sp/>-<sp/>offset_src)<sp/>:<sp/>(SE3_COMM_BLOCK<sp/>-<sp/>SE3_REQDATA_SIZE_HEADER);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SE3_SET32(request<sp/>+<sp/>offset_dst,<sp/>SE3_REQDATA_OFFSET_CMDTOKEN,<sp/>cmd_token);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(request<sp/>+<sp/>offset_dst<sp/>+<sp/>SE3_REQDATA_OFFSET_DATA,<sp/>data<sp/>+<sp/>offset_src,<sp/>n);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset_dst<sp/>+=<sp/>SE3_COMM_BLOCK;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset_src<sp/>+=<sp/>n;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nblocks++;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Send<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!se3c_write(request,<sp/>device-&gt;f,<sp/>0,<sp/>nblocks,<sp/>SE3_TIMEOUT))<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(SE3_ERR_COMM);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(SE3_OK);</highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint16_t<sp/>L0_RX(<ref refid="structse3__device__" kindref="compound">se3_device</ref>*<sp/>device,<sp/>uint16_t*<sp/>resp_status,<sp/>uint16_t*<sp/>resp_len,<sp/>uint8_t*<sp/>resp_data)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ready<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>success<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>n;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nblocks<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>len_data_and_headers<sp/>=<sp/>0,<sp/>len<sp/>=<sp/>0,<sp/>u16tmp;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>cmdtok0,<sp/>u32tmp;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>deadline<sp/>=<sp/>se3c_deadline(SE3_TIMEOUT);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>offset_src,<sp/>offset_dst;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SE3_CONF_CRC</highlight></codeline>
<codeline lineno="148"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>crc;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="150"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!ready)<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>se3c_sleep();</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!se3c_read(device-&gt;response,<sp/>device-&gt;f,<sp/>0,<sp/>1,<sp/>SE3_TIMEOUT))<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>success<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SE3_GET16(device-&gt;response,<sp/>0,<sp/>u16tmp);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ready<sp/>=<sp/>(u16tmp<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((se3c_clock()<sp/>&gt;<sp/>deadline)<sp/>&amp;&amp;<sp/>!ready)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>success<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!success)<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SE3_ERR_COMM;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>SE3_GET16(device-&gt;response,<sp/>SE3_RESP_OFFSET_LEN,<sp/>len_data_and_headers);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>len<sp/>=<sp/>se3_resp_len_data(len_data_and_headers);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&gt;<sp/>*resp_len)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SE3_ERR_COMM;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>nblocks<sp/>=<sp/>se3_nblocks(len_data_and_headers);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nblocks<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!se3c_read(device-&gt;response<sp/>+<sp/>1*SE3_COMM_BLOCK,<sp/>device-&gt;f,<sp/>1,<sp/>nblocks<sp/>-<sp/>1,<sp/>SE3_TIMEOUT))</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SE3_ERR_COMM;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>cmdtokens</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>SE3_GET32(device-&gt;response,<sp/>SE3_RESP_OFFSET_CMDTOKEN,<sp/>cmdtok0);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>nblocks;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmdtok0++;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SE3_GET32(device-&gt;response<sp/>+<sp/>i*SE3_COMM_BLOCK,<sp/>SE3_RESPDATA_OFFSET_CMDTOKEN,<sp/>u32tmp);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmdtok0<sp/>!=<sp/>u32tmp)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SE3_ERR_COMM;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SE3_CONF_CRC</highlight></codeline>
<codeline lineno="190"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>crc<sp/>=<sp/>se3_crc16_update(SE3_REQ_OFFSET_CRC,<sp/>device-&gt;response,<sp/>0);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="192"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>(len<sp/>&lt;<sp/>(SE3_COMM_BLOCK<sp/>-<sp/>SE3_RESP_SIZE_HEADER))<sp/>?<sp/>(len)<sp/>:<sp/>(SE3_COMM_BLOCK<sp/>-<sp/>SE3_RESP_SIZE_HEADER);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(resp_data<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(resp_data,<sp/>device-&gt;response<sp/>+<sp/>SE3_RESP_SIZE_HEADER,<sp/>n);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SE3_CONF_CRC</highlight></codeline>
<codeline lineno="197"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crc<sp/>=<sp/>se3_crc16_update(n,<sp/>device-&gt;response<sp/>+<sp/>SE3_RESP_SIZE_HEADER,<sp/>crc);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="201"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>offset_src<sp/>=<sp/>SE3_COMM_BLOCK;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>offset_dst<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(offset_dst<sp/>&lt;<sp/>len)<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>((len<sp/>-<sp/>offset_dst)<sp/>&lt;<sp/>(SE3_COMM_BLOCK<sp/>-<sp/>SE3_RESPDATA_SIZE_HEADER))<sp/>?<sp/>(len<sp/>-<sp/>offset_dst)<sp/>:<sp/>(SE3_COMM_BLOCK<sp/>-<sp/>SE3_RESPDATA_SIZE_HEADER);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(resp_data<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(resp_data<sp/>+<sp/>offset_dst,<sp/>device-&gt;response<sp/>+<sp/>offset_src<sp/>+<sp/>SE3_RESPDATA_SIZE_HEADER,<sp/>n);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SE3_CONF_CRC</highlight></codeline>
<codeline lineno="209"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crc<sp/>=<sp/>se3_crc16_update(n,<sp/>device-&gt;response<sp/>+<sp/>offset_src<sp/>+<sp/>SE3_RESPDATA_SIZE_HEADER,<sp/>crc);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="211"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset_src<sp/>+=<sp/>SE3_COMM_BLOCK;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset_dst<sp/>+=<sp/>n;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>headers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>SE3_GET16(device-&gt;response,<sp/>SE3_RESP_OFFSET_STATUS,<sp/>u16tmp);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>*resp_status<sp/>=<sp/>u16tmp;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>SE3_GET16(device-&gt;response,<sp/>SE3_RESP_OFFSET_LEN,<sp/>u16tmp);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>*resp_len<sp/>=<sp/>len;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SE3_CONF_CRC</highlight></codeline>
<codeline lineno="221"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>SE3_GET16(device-&gt;response,<sp/>SE3_RESP_OFFSET_CRC,<sp/>u16tmp);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(u16tmp<sp/>!=<sp/>crc)<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SE3_ERR_COMM;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="226"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SE3_OK;</highlight></codeline>
<codeline lineno="228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal">uint16_t<sp/>L0_echo(<ref refid="structse3__device__" kindref="compound">se3_device</ref>*<sp/>device,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>data_in,<sp/>uint16_t<sp/>data_in_len,<sp/>uint8_t*<sp/>data_out)<sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>resp_status<sp/>=<sp/>0,<sp/>resp_len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>error<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>resp_len<sp/>=<sp/>data_in_len;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/>L0_TXRX(device,<sp/>SE3_CMD0_ECHO,<sp/>0,<sp/>data_in_len,<sp/>data_in,<sp/>&amp;resp_status,<sp/>&amp;resp_len,<sp/>data_out);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error<sp/>!=<sp/>SE3_OK)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(error);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(resp_status);</highlight></codeline>
<codeline lineno="241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal">uint16_t<sp/>L0_factoryinit(<ref refid="structse3__device__" kindref="compound">se3_device</ref>*<sp/>device,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>serialno)<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>resp_status<sp/>=<sp/>0,<sp/>resp_len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>error<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/>L0_TXRX(device,<sp/>SE3_CMD0_FACTORY_INIT,<sp/>0,<sp/>SE3_SERIAL_SIZE,<sp/>serialno,<sp/>&amp;resp_status,<sp/>&amp;resp_len,<sp/>NULL);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error<sp/>!=<sp/>SE3_OK)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(error);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(resp_status);</highlight></codeline>
<codeline lineno="253"><highlight class="normal">}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>L0_discover_init(<ref refid="structse3__disco__it__" kindref="compound">se3_disco_it</ref>*<sp/>it)<sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>se3c_drive_init(&amp;(it-&gt;_drive_it));</highlight></codeline>
<codeline lineno="259"><highlight class="normal">}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>L0_discover_next(<ref refid="structse3__disco__it__" kindref="compound">se3_disco_it</ref>*<sp/>it)<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structse3__discover__info__" kindref="compound">se3_discover_info</ref><sp/>discov_nfo;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>deadline;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(se3c_drive_next(&amp;(it-&gt;_drive_it)))<sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deadline<sp/>=<sp/>se3c_deadline(0);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(se3c_info(it-&gt;_drive_it.path,<sp/>deadline,<sp/>&amp;discov_nfo))<sp/>{<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>True<sp/>=<sp/>SEcube</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(it-&gt;device_info.serialno,<sp/>discov_nfo.serialno,<sp/>SE3_SN_SIZE);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(it-&gt;device_info.hello_msg,<sp/>discov_nfo.hello_msg,<sp/>SE3_HELLO_SIZE);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>se3c_pathcopy(it-&gt;device_info.path,<sp/>it-&gt;_drive_it.path);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;device_info.status<sp/>=<sp/>discov_nfo.status;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="280"><highlight class="normal">}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>L0_discover_serialno(uint8_t*<sp/>serialno,<sp/><ref refid="structse3__device__info__" kindref="compound">se3_device_info</ref>*<sp/>device)<sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structse3__disco__it__" kindref="compound">se3_disco_it</ref><sp/>it;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>L0_discover_init(&amp;it);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(L0_discover_next(&amp;it))<sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(memcmp(serialno,<sp/>it.device_info.serialno,<sp/>SE3_SN_SIZE))<sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(device,<sp/>&amp;(it.device_info),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structse3__device__info__" kindref="compound">se3_device_info</ref>));</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="294"><highlight class="normal">}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal">uint16_t<sp/>L0_open(<ref refid="structse3__device__" kindref="compound">se3_device</ref>*<sp/>dev,<sp/><ref refid="structse3__device__info__" kindref="compound">se3_device_info</ref>*<sp/>dev_info,<sp/>uint32_t<sp/>timeout)</highlight></codeline>
<codeline lineno="298"><highlight class="normal">{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structse3__file" kindref="compound">se3_file</ref><sp/>hfile;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structse3__discover__info__" kindref="compound">se3_discover_info</ref><sp/>discov_nfo;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(dev,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structse3__device__" kindref="compound">se3_device</ref>));</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(&amp;(dev-&gt;info),<sp/>dev_info,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structse3__device__info__" kindref="compound">se3_device_info</ref>));</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>dev-&gt;opened<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!se3c_open(dev-&gt;info.path,<sp/>timeout,<sp/>&amp;hfile,<sp/>&amp;discov_nfo))<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SE3_ERR_COMM;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(memcmp(discov_nfo.serialno,<sp/>dev-&gt;info.serialno,<sp/>SE3_SN_SIZE))<sp/>{<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SEcube<sp/>serial<sp/>number<sp/>does<sp/>not<sp/>match.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>se3c_close(hfile);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SE3_ERR_COMM;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>dev-&gt;f<sp/>=<sp/>hfile;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>dev-&gt;request<sp/>=<sp/>(uint8_t*)malloc(SE3_COMM_N*SE3_COMM_BLOCK);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>dev-&gt;response<sp/>=<sp/>(uint8_t*)malloc(SE3_COMM_N*SE3_COMM_BLOCK);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>dev-&gt;opened<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SE3_OK;</highlight></codeline>
<codeline lineno="318"><highlight class="normal">}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>L0_close(<ref refid="structse3__device__" kindref="compound">se3_device</ref>*<sp/>dev)</highlight></codeline>
<codeline lineno="322"><highlight class="normal">{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dev-&gt;opened)<sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev-&gt;opened<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NULL<sp/>!=<sp/>dev-&gt;request)<sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(dev-&gt;request);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev-&gt;request<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NULL<sp/>!=<sp/>dev-&gt;response)<sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(dev-&gt;response);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev-&gt;response<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>se3c_close(dev-&gt;f);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal">}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/L0.c"/>
  </compounddef>
</doxygen>
