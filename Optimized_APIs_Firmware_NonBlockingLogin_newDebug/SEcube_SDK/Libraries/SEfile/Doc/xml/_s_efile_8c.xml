<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="_s_efile_8c" kind="file">
    <compoundname>SEfile.c</compoundname>
    <includes refid="_s_efile_8h" local="yes">SEfile.h</includes>
    <includes local="yes">/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/se3_common.h</includes>
    <includes local="yes">/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/se3c0def.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">stdint.h</includes>
    <includes local="no">stddef.h</includes>
    <includes local="no">stdbool.h</includes>
    <includes local="yes">/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/aes256.h</includes>
    <includes local="no">string.h</includes>
    <includes local="yes">/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/sha256.h</includes>
    <includes local="yes">/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/pbkdf2.h</includes>
    <includes local="yes">/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/se3comm.h</includes>
    <includes local="no">Windows.h</includes>
    <includes local="no">time.h</includes>
    <includes local="yes">/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/crc16.h</includes>
    <includes local="yes">/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/L0.h</includes>
    <includes local="yes">/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/se3c1def.h</includes>
    <incdepgraph>
      <node id="12">
        <label>stdbool.h</label>
      </node>
      <node id="8">
        <label>/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/se3c0def.h</label>
      </node>
      <node id="16">
        <label>/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/se3comm.h</label>
      </node>
      <node id="7">
        <label>/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/se3_common.h</label>
      </node>
      <node id="3">
        <label>se3/L1.h</label>
      </node>
      <node id="14">
        <label>/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/sha256.h</label>
      </node>
      <node id="10">
        <label>stdint.h</label>
      </node>
      <node id="9">
        <label>stdlib.h</label>
      </node>
      <node id="17">
        <label>Windows.h</label>
      </node>
      <node id="21">
        <label>/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/se3c1def.h</label>
      </node>
      <node id="15">
        <label>/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/pbkdf2.h</label>
      </node>
      <node id="2">
        <label>se3/L0.h</label>
      </node>
      <node id="11">
        <label>stddef.h</label>
      </node>
      <node id="5">
        <label>string.h</label>
      </node>
      <node id="20">
        <label>/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/L0.h</label>
      </node>
      <node id="18">
        <label>time.h</label>
      </node>
      <node id="19">
        <label>/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/crc16.h</label>
      </node>
      <node id="0">
        <label>/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c</label>
        <link refid="SEfile.c"/>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>SEfile.h</label>
        <link refid="_s_efile_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>ctype.h</label>
      </node>
      <node id="4">
        <label>se3/se3c1def.h</label>
      </node>
      <node id="13">
        <label>/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/se3/aes256.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct_s_e_f_i_l_e___h_a_n_d_l_e" prot="public">SEFILE_HANDLE</innerclass>
    <innerclass refid="struct_s_e_f_i_l_e___h_e_a_d_e_r" prot="public">SEFILE_HEADER</innerclass>
    <innerclass refid="struct_s_e_f_i_l_e___s_e_c_t_o_r" prot="public">SEFILE_SECTOR</innerclass>
      <sectiondef kind="user-defined">
      <header>Environmental Variables</header>
      <description><para>This static variables will store some data useful during the active session. </para></description>
      <memberdef kind="variable" id="group___environmental_vars_1gad3215e338581ce95b76b3b84b928d744" prot="public" static="yes" mutable="no">
        <type>se3_session *</type>
        <definition>se3_session* EnvSession</definition>
        <argsstring></argsstring>
        <name>EnvSession</name>
        <initializer>=NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Which session we want to use </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c" line="95" column="1" bodyfile="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group___environmental_vars_1ga7a8b4d6945f6a13f8683427dc7ab7a44" prot="public" static="yes" mutable="no">
        <type>int32_t *</type>
        <definition>int32_t* EnvKeyID</definition>
        <argsstring></argsstring>
        <name>EnvKeyID</name>
        <initializer>=NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Which KeyID we want to use </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c" line="96" column="1" bodyfile="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group___environmental_vars_1ga328037c714e95e56186f9d5f0842adea" prot="public" static="yes" mutable="no">
        <type>uint16_t *</type>
        <definition>uint16_t* EnvCrypto</definition>
        <argsstring></argsstring>
        <name>EnvCrypto</name>
        <initializer>=NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Which cipher algorithm and mode we want to use </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c" line="97" column="1" bodyfile="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c" bodystart="97" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="_s_efile_8c_1a369266c24eacffb87046522897a570d5" prot="public" static="no">
        <name>_GNU_SOURCE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c" line="10" column="9" bodyfile="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_efile_8c_1a59d2e926963f89a7688333a5ee073c69" prot="public" static="no">
        <name>SEFILE_NONCE_LEN</name>
        <initializer>32</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c" line="15" column="9" bodyfile="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_s_efile_8c_1a7617f01b2063fc7205c6081b88801a75" prot="public" static="no">
        <name>POS_TO_CIPHER_BLOCK</name>
        <param><defname>current_position</defname></param>
        <initializer>((current_position / <ref refid="group___sector___defines_1gad205a758c315675de3ad9f5f1cbf962d" kindref="member">SEFILE_SECTOR_SIZE</ref>) - 1)*(<ref refid="group___sector___defines_1ga6961ed45e472749b587136d18eb74b4d" kindref="member">SEFILE_SECTOR_DATA_SIZE</ref> / <ref refid="group___sector___defines_1ga9344350dc20df5bbdc5693775c54afcb" kindref="member">SEFILE_BLOCK_SIZE</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Macro used to convert the actual pointer position to the cipher blocks amount </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c" line="85" column="10" bodyfile="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c" bodystart="85" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_s_efile_8c_1a533853754430e7d85524fd5641a7bf3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void get_filename</definition>
        <argsstring>(char *path, char *file_name)</argsstring>
        <name>get_filename</name>
        <param>
          <type>char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>file_name</declname>
        </param>
        <briefdescription>
<para>This function extract the filename pointed by path. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">path</parametername>
</parameternamelist>
<parameterdescription>
<para>It can be both an absolute or relative path. No encrypted directory are allowed inside the path. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">file_name</parametername>
</parameternamelist>
<parameterdescription>
<para>A preallocated string where to store the filename. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c" line="108" column="1" bodyfile="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c" bodystart="1244" bodyend="1260"/>
      </memberdef>
      <memberdef kind="function" id="_s_efile_8c_1af387c94c97d3d3df73d0ddc6da891ad2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void get_path</definition>
        <argsstring>(char *full_path, char *path)</argsstring>
        <name>get_path</name>
        <param>
          <type>char *</type>
          <declname>full_path</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>This function extract the path where the file is. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">full_path</parametername>
</parameternamelist>
<parameterdescription>
<para>It can be both an absolute or relative path. No encrypted directory are allowed inside the path. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">path</parametername>
</parameternamelist>
<parameterdescription>
<para>A preallocated string where to store the path </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c" line="116" column="1" bodyfile="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c" bodystart="1261" bodyend="1279"/>
      </memberdef>
      <memberdef kind="function" id="_s_efile_8c_1a99543075d3f99eca1a5ca4b2d5feb016" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t check_env</definition>
        <argsstring>()</argsstring>
        <name>check_env</name>
        <briefdescription>
<para>This function check if the environmental variables are correctly initialized and set. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The function returns a (uint16_t) &apos;0&apos; in case of success. See <ref refid="group__error_values" kindref="compound">error values</ref> for error list. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c" line="123" column="1" bodyfile="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c" bodystart="1328" bodyend="1333"/>
      </memberdef>
      <memberdef kind="function" id="_s_efile_8c_1aeb97d3ccfe07f0f8b62c6f4c05b3d115" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t crypt_sectors</definition>
        <argsstring>(void *buff_decrypt, void *buff_crypt, size_t datain_len, size_t current_offset, uint8_t *nonce_ctr, uint8_t *nonce_pbkdf2)</argsstring>
        <name>crypt_sectors</name>
        <param>
          <type>void *</type>
          <declname>buff_decrypt</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>buff_crypt</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>datain_len</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>current_offset</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>nonce_ctr</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>nonce_pbkdf2</declname>
        </param>
        <briefdescription>
<para>This function encrypts the buff_decrypt data by exploiting the functions provided by L1.h. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">buff_decrypt</parametername>
</parameternamelist>
<parameterdescription>
<para>The plaintext data to be encrypted </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">buff_crypt</parametername>
</parameternamelist>
<parameterdescription>
<para>The preallocated buffer where to store the encrypted data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">datain_len</parametername>
</parameternamelist>
<parameterdescription>
<para>Specify how many data we want to encrypt. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">current_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Current position inside the file expressed as number of cipher blocks </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">nonce_ctr</parametername>
</parameternamelist>
<parameterdescription>
<para>Initialization vector, see <ref refid="struct_s_e_f_i_l_e___h_e_a_d_e_r" kindref="compound">SEFILE_HEADER</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">nonce_pbkdf2</parametername>
</parameternamelist>
<parameterdescription>
<para>Initialization vector, see <ref refid="struct_s_e_f_i_l_e___h_e_a_d_e_r" kindref="compound">SEFILE_HEADER</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function returns a (uint16_t) &apos;0&apos; in case of success. See <ref refid="group__error_values" kindref="compound">error values</ref> for error list. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c" line="140" column="1" bodyfile="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c" bodystart="1389" bodyend="1432"/>
      </memberdef>
      <memberdef kind="function" id="_s_efile_8c_1a84651b6b79095cbb509ac22824595e4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t crypt_header</definition>
        <argsstring>(void *buff1, void *buff2, size_t datain_len, uint16_t direction)</argsstring>
        <name>crypt_header</name>
        <param>
          <type>void *</type>
          <declname>buff1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>buff2</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>datain_len</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>direction</declname>
        </param>
        <briefdescription>
<para>This function encrypts a header buffer by exploiting the functions provided by L1.h. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">buff1</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the header we want to encrypt/decrypt. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">buff2</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an allocated header where to store the result. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">datain_len</parametername>
</parameternamelist>
<parameterdescription>
<para>How big is the amount of data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">direction</parametername>
</parameternamelist>
<parameterdescription>
<para>See SE3_DIR. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function returns a (uint16_t) &apos;0&apos; in case of success. See <ref refid="group__error_values" kindref="compound">error values</ref> for error list. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c" line="156" column="1" bodyfile="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c" bodystart="1335" bodyend="1377"/>
      </memberdef>
      <memberdef kind="function" id="_s_efile_8c_1a34d995f228e33aa28bff9af5cd8ca305" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t decrypt_sectors</definition>
        <argsstring>(void *buff_crypt, void *buff_decrypt, size_t datain_len, size_t current_offset, uint8_t *nonce_ctr, uint8_t *nonce_pbkdf2)</argsstring>
        <name>decrypt_sectors</name>
        <param>
          <type>void *</type>
          <declname>buff_crypt</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>buff_decrypt</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>datain_len</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>current_offset</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>nonce_ctr</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>nonce_pbkdf2</declname>
        </param>
        <briefdescription>
<para>This function decrypts the buff_crypt data by exploiting the functions provided by L1.h. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">buff_crypt</parametername>
</parameternamelist>
<parameterdescription>
<para>The cipher text data to be decrypted </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">buff_decrypt</parametername>
</parameternamelist>
<parameterdescription>
<para>The preallocated buffer where to store the decrypted data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">datain_len</parametername>
</parameternamelist>
<parameterdescription>
<para>Specify how many data we want to decrypt. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">current_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Current position inside the file expressed as number of cipher blocks </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">nonce_ctr</parametername>
</parameternamelist>
<parameterdescription>
<para>Initialization vector, see <ref refid="struct_s_e_f_i_l_e___h_e_a_d_e_r" kindref="compound">SEFILE_HEADER</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">nonce_pbkdf2</parametername>
</parameternamelist>
<parameterdescription>
<para>Initialization vector, see <ref refid="struct_s_e_f_i_l_e___h_e_a_d_e_r" kindref="compound">SEFILE_HEADER</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function returns a (uint16_t) &apos;0&apos; in case of success. See <ref refid="group__error_values" kindref="compound">error values</ref> for error list. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c" line="175" column="1" bodyfile="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c" bodystart="1433" bodyend="1477"/>
      </memberdef>
      <memberdef kind="function" id="_s_efile_8c_1a558cc4a9929c6dc846d54ec42012466c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t get_filesize</definition>
        <argsstring>(SEFILE_FHANDLE *hFile, uint32_t *length)</argsstring>
        <name>get_filesize</name>
        <param>
          <type><ref refid="_s_efile_8h_1ac073933cdf58a366c2dfed344c37ebe9" kindref="member">SEFILE_FHANDLE</ref> *</type>
          <declname>hFile</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>This function is used to compute the total logic size of an open file handle. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hFile</parametername>
</parameternamelist>
<parameterdescription>
<para>Open file handle whose size shall be computed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">length</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a preallocated variable where to store the logic size. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function returns a (uint16_t) &apos;0&apos; in case of success. See <ref refid="group__error_values" kindref="compound">error values</ref> for error list. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c" line="185" column="1" bodyfile="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c" bodystart="1479" bodyend="1583"/>
      </memberdef>
      <memberdef kind="function" id="_s_efile_8c_1aeda597741a9b6bf76b5258f6c996e678" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t decrypt_filename</definition>
        <argsstring>(char *path, char *filename)</argsstring>
        <name>decrypt_filename</name>
        <param>
          <type>char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>This function is used to compute the plaintext of a encrypted filename stored in path. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">path</parametername>
</parameternamelist>
<parameterdescription>
<para>Where the encrypted file is stored, it can be an absolute or relative path. No encrypted directory are allowed inside the path. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">filename</parametername>
</parameternamelist>
<parameterdescription>
<para>A preallocated string where to store the plaintext filename </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function returns a (uint16_t) &apos;0&apos; in case of success. See <ref refid="group__error_values" kindref="compound">error values</ref> for error list. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c" line="196" column="1" bodyfile="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c" bodystart="1584" bodyend="1621"/>
      </memberdef>
      <memberdef kind="function" id="_s_efile_8c_1a2ada7106da4eb0668715f317366777ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t decrypt_filehandle</definition>
        <argsstring>(SEFILE_FHANDLE *hFile, char *filename)</argsstring>
        <name>decrypt_filehandle</name>
        <param>
          <type><ref refid="_s_efile_8h_1ac073933cdf58a366c2dfed344c37ebe9" kindref="member">SEFILE_FHANDLE</ref> *</type>
          <declname>hFile</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>This function is used to compute the plaintext of a encrypted filename stored in an already open hFile header. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hFile</parametername>
</parameternamelist>
<parameterdescription>
<para>Already opened file handle to be read in order to obtain its plaintext filename. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">filename</parametername>
</parameternamelist>
<parameterdescription>
<para>A preallocated string where to store the plaintext filename. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function returns a (uint16_t) &apos;0&apos; in case of success. See <ref refid="group__error_values" kindref="compound">error values</ref> for error list. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c" line="207" column="1" bodyfile="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c" bodystart="1623" bodyend="1723"/>
      </memberdef>
      <memberdef kind="function" id="_s_efile_8c_1a700fedc67d30512447684ec1eff14bab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t crypt_dirname</definition>
        <argsstring>(char *dirpath, char *encDirname)</argsstring>
        <name>crypt_dirname</name>
        <param>
          <type>char *</type>
          <declname>dirpath</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>encDirname</declname>
        </param>
        <briefdescription>
<para>This function is used to compute the ciphertext of a directory name stored in dirname. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dirpath</parametername>
</parameternamelist>
<parameterdescription>
<para>Path to the directory whose name has to be encrypted. No encrypted directory are allowed inside the path. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">encDirname</parametername>
</parameternamelist>
<parameterdescription>
<para>A preallocated string where to store the encrypted directory name </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function returns a (uint16_t) &apos;0&apos; in case of success. See <ref refid="group__error_values" kindref="compound">error values</ref> for error list. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c" line="218" column="1" bodyfile="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c" bodystart="1729" bodyend="1777"/>
      </memberdef>
      <memberdef kind="function" id="_s_efile_8c_1ac74803a54c2cb05ea329acdeef7f7856" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t decrypt_dirname</definition>
        <argsstring>(char *dirpath, char *decDirname)</argsstring>
        <name>decrypt_dirname</name>
        <param>
          <type>char *</type>
          <declname>dirpath</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>decDirname</declname>
        </param>
        <briefdescription>
<para>This function is used to compute the plaintext of a encrypted directory name stored in dirname. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dirpath</parametername>
</parameternamelist>
<parameterdescription>
<para>Path to the directory whose name has to be decrypted. No encrypted directory are allowed inside the path. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">decDirname</parametername>
</parameternamelist>
<parameterdescription>
<para>A preallocated string where to store the decrypted directory name </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function returns a (uint16_t) &apos;0&apos; in case of success. See <ref refid="group__error_values" kindref="compound">error values</ref> for error list. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c" line="229" column="1" bodyfile="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c" bodystart="1779" bodyend="1820"/>
      </memberdef>
      <memberdef kind="function" id="_s_efile_8c_1a95ea3f63b783aca7223b6b885cab1a5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t valid_name</definition>
        <argsstring>(char *name)</argsstring>
        <name>valid_name</name>
        <param>
          <type>char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>This function checks if the given name can be a valid encrypted filename/directory name. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">Name</parametername>
</parameternamelist>
<parameterdescription>
<para>of the file/directory. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function returns a (uint16_t) &apos;0&apos; in case of success. See <ref refid="group__error_values" kindref="compound">error values</ref> for error list. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c" line="238" column="1" bodyfile="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c" bodystart="1822" bodyend="1831"/>
      </memberdef>
      <memberdef kind="function" id="_s_efile_8c_1a435a1cfd0cd619deb2efeb7aa3723126" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t secure_init</definition>
        <argsstring>(se3_session *s, uint32_t keyID, uint16_t crypto)</argsstring>
        <name>secure_init</name>
        <param>
          <type>se3_session *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>keyID</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>crypto</declname>
        </param>
        <briefdescription>
<para>This function creates a new secure environment, by allocating statically the parameters needed by the following functions. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">s</parametername>
</parameternamelist>
<parameterdescription>
<para>Contains the pointer to the se3_session structure that must be used during the session. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">keyID</parametername>
</parameternamelist>
<parameterdescription>
<para>Contains the ID number of the key that must be used during the session. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">crypto</parametername>
</parameternamelist>
<parameterdescription>
<para>Contains the id to specify which algorithm to use. See AlgorithmAvail, it can be SE3_ALGO_MAX + 1 if you don&apos;t know which algorithm to choose. See <ref refid="group__error_values" kindref="compound">error values</ref> for error list.</para></parameterdescription>
</parameteritem>
</parameterlist>
All the data passed to this function must be allocated and filled with valid data. Once secure_init succeed it is possible to destroy these data, since a copy has been made. N.B. Remember to call the <ref refid="_s_efile_8h_1a71736a6b4cc1a0ec94d013052e1e2a10" kindref="member">secure_finit</ref> function to deallocate these data once you have finished. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c" line="240" column="1" bodyfile="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c" bodystart="240" bodyend="327"/>
      </memberdef>
      <memberdef kind="function" id="_s_efile_8c_1ae8d0daae652fc1f3e2c29781591aa36e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t secure_update</definition>
        <argsstring>(se3_session *s, int32_t keyID, uint16_t crypto)</argsstring>
        <name>secure_update</name>
        <param>
          <type>se3_session *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>keyID</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>crypto</declname>
        </param>
        <briefdescription>
<para>This function can be called only after the <ref refid="_s_efile_8c_1a435a1cfd0cd619deb2efeb7aa3723126" kindref="member">secure_init()</ref> function and give to the user the possibility to overwrite the Environment variables with new ones. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">s</parametername>
</parameternamelist>
<parameterdescription>
<para>Contains the pointer to the se3_session structure that must be used during the session. Can be NULL. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">keyID</parametername>
</parameternamelist>
<parameterdescription>
<para>keyID Contains the ID number of the key that must be used during the session. Can be -1. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">crypto</parametername>
</parameternamelist>
<parameterdescription>
<para>Contains the id to specify which algorithm to use. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function returns a (uint16_t) &apos;0&apos; in case of success. See <ref refid="group__error_values" kindref="compound">error values</ref> for error list.</para></simplesect>
Parameters from 1 to 3 can be a NULL pointer or &apos;-1&apos; value, if all parameters are NULL (or &apos;-1&apos; in case of keyID) the function is a No-Operation one. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c" line="329" column="1" bodyfile="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c" bodystart="329" bodyend="362"/>
      </memberdef>
      <memberdef kind="function" id="_s_efile_8c_1a71736a6b4cc1a0ec94d013052e1e2a10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t secure_finit</definition>
        <argsstring>()</argsstring>
        <name>secure_finit</name>
        <briefdescription>
<para>This function deallocate the structures defined by the <ref refid="_s_efile_8c_1a435a1cfd0cd619deb2efeb7aa3723126" kindref="member">secure_init()</ref>. Should be called at the end of a session. No parameters are needed;. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The function returns a (uint16_t) &apos;0&apos; in case of success. See <ref refid="group__error_values" kindref="compound">error values</ref> for error list. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c" line="364" column="1" bodyfile="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c" bodystart="364" bodyend="377"/>
      </memberdef>
      <memberdef kind="function" id="_s_efile_8c_1ae99f8ccb396cbb5685d9e16bb3dbbe98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t secure_open</definition>
        <argsstring>(char *path, SEFILE_FHANDLE *hFile, int32_t mode, int32_t creation)</argsstring>
        <name>secure_open</name>
        <param>
          <type>char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type><ref refid="_s_efile_8h_1ac073933cdf58a366c2dfed344c37ebe9" kindref="member">SEFILE_FHANDLE</ref> *</type>
          <declname>hFile</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>mode</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>access</declname>
          <defname>creation</defname>
        </param>
        <briefdescription>
<para>This function opens a secure file and create a SEFILE_FHANDLE that can be used in future. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">path</parametername>
</parameternamelist>
<parameterdescription>
<para>Specify the absolute/relative path where to retrieve the file to open. No encrypted directory are allowed inside the path. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">hFile</parametername>
</parameternamelist>
<parameterdescription>
<para>The pointer in which the file handle to the opened file is placed after a success, NULL in case of failure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mode</parametername>
</parameternamelist>
<parameterdescription>
<para>The mode in which the file should be opened. See <ref refid="group___mode___defines" kindref="compound">mode parameter for secure_open</ref>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">access</parametername>
</parameternamelist>
<parameterdescription>
<para>Define if the file should be created or it should already exist. See <ref refid="group___access___defines" kindref="compound">access parameter for secure_open</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function returns a (uint16_t) &apos;0&apos; in case of success. See <ref refid="group__error_values" kindref="compound">error values</ref> for error list. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c" line="379" column="1" bodyfile="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c" bodystart="379" bodyend="460"/>
      </memberdef>
      <memberdef kind="function" id="_s_efile_8c_1adbb72ef517bfb5e342fba86f2e72b25f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t secure_create</definition>
        <argsstring>(char *path, SEFILE_FHANDLE *hFile, int mode)</argsstring>
        <name>secure_create</name>
        <param>
          <type>char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type><ref refid="_s_efile_8h_1ac073933cdf58a366c2dfed344c37ebe9" kindref="member">SEFILE_FHANDLE</ref> *</type>
          <declname>hFile</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>This function creates a new secure file and creates a SEFILE_FHANDLE that can be used in future. If the file already exists, it is overwritten with an empty one, all previous data are lost. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">path</parametername>
</parameternamelist>
<parameterdescription>
<para>Specify the absolute/relative path where to create the file. No encrypted directory are allowed inside the path. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">hFile</parametername>
</parameternamelist>
<parameterdescription>
<para>The pointer in which the file handle to the new opened file is placed after a success, NULL in case of failure. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mode</parametername>
</parameternamelist>
<parameterdescription>
<para>The mode in which the file should be created. See <ref refid="group___mode___defines" kindref="compound">mode parameter for secure_open</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function returns a (uint16_t) &apos;0&apos; in case of success. See <ref refid="group__error_values" kindref="compound">error values</ref> for error list. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c" line="462" column="1" bodyfile="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c" bodystart="462" bodyend="578"/>
      </memberdef>
      <memberdef kind="function" id="_s_efile_8c_1acb652f6362fd5635c4aaa8c5e67c7f1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t secure_write</definition>
        <argsstring>(SEFILE_FHANDLE *hFile, uint8_t *dataIn, uint32_t dataIn_len)</argsstring>
        <name>secure_write</name>
        <param>
          <type><ref refid="_s_efile_8h_1ac073933cdf58a366c2dfed344c37ebe9" kindref="member">SEFILE_FHANDLE</ref> *</type>
          <declname>hFile</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>dataIn</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>dataIn_len</declname>
        </param>
        <briefdescription>
<para>This function writes the characters given by dataIn to the encrypted file hFile. Before writing them, dataIn is encrypted according to the environmental parameters. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hFile</parametername>
</parameternamelist>
<parameterdescription>
<para>The handle to an already opened file to be written. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dataIn</parametername>
</parameternamelist>
<parameterdescription>
<para>The string of characters that have to be written. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dataIn_len</parametername>
</parameternamelist>
<parameterdescription>
<para>The length, in bytes, of the data that have to be written. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function returns a (uint16_t) &apos;0&apos; in case of success. See <ref refid="group__error_values" kindref="compound">error values</ref> for error list. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c" line="580" column="1" bodyfile="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c" bodystart="580" bodyend="732"/>
      </memberdef>
      <memberdef kind="function" id="_s_efile_8c_1ab4468e0e71fe2626767388150952fbdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t secure_read</definition>
        <argsstring>(SEFILE_FHANDLE *hFile, uint8_t *dataOut, uint32_t dataOut_len, uint32_t *bytesRead)</argsstring>
        <name>secure_read</name>
        <param>
          <type><ref refid="_s_efile_8h_1ac073933cdf58a366c2dfed344c37ebe9" kindref="member">SEFILE_FHANDLE</ref> *</type>
          <declname>hFile</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>dataOut</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>dataOut_len</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>bytesRead</declname>
        </param>
        <briefdescription>
<para>This function reads from hFile bytesRead characters out of dataOut_len correctly decrypted ones and stores them in dataOut string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hFile</parametername>
</parameternamelist>
<parameterdescription>
<para>The handle to an already opened file to be read. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">dataOut</parametername>
</parameternamelist>
<parameterdescription>
<para>An already allocated array of characters where to store data read. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dataOut_len</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of characters we want to read. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">bytesRead</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of effective characters read, MUST NOT BE NULL. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function returns a (uint16_t) &apos;0&apos; in case of success. See <ref refid="group__error_values" kindref="compound">error values</ref> for error list. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c" line="736" column="1" bodyfile="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c" bodystart="736" bodyend="840"/>
      </memberdef>
      <memberdef kind="function" id="_s_efile_8c_1a157807247b4913a73fc3b6677a61e6a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t secure_seek</definition>
        <argsstring>(SEFILE_FHANDLE *hFile, int32_t offset, int32_t *position, uint8_t whence)</argsstring>
        <name>secure_seek</name>
        <param>
          <type><ref refid="_s_efile_8h_1ac073933cdf58a366c2dfed344c37ebe9" kindref="member">SEFILE_FHANDLE</ref> *</type>
          <declname>hFile</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>position</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>whence</declname>
        </param>
        <briefdescription>
<para>This function is used to move correctly the file pointer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hFile</parametername>
</parameternamelist>
<parameterdescription>
<para>The handle to the file to manipulate. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Amount of character we want to move. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">position</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a int32_t variable where the final position is stored, MUST NOT BE NULL. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">whence</parametername>
</parameternamelist>
<parameterdescription>
<para>According to this parameter we can choose if we want to move from the file beginning, file ending or current file pointer position. See <ref refid="group___seek___defines" kindref="compound">whence parameter for secure_seek</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function returns a (uint16_t) &apos;0&apos; in case of success. See <ref refid="group__error_values" kindref="compound">error values</ref> for error list. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c" line="842" column="1" bodyfile="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c" bodystart="842" bodyend="969"/>
      </memberdef>
      <memberdef kind="function" id="_s_efile_8c_1ae51272c2c3b72a01bd7aa98f25fb5245" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t secure_truncate</definition>
        <argsstring>(SEFILE_FHANDLE *hFile, uint32_t size)</argsstring>
        <name>secure_truncate</name>
        <param>
          <type><ref refid="_s_efile_8h_1ac073933cdf58a366c2dfed344c37ebe9" kindref="member">SEFILE_FHANDLE</ref> *</type>
          <declname>hFile</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>This function resizes the file pointed by hFile to size. If size is bigger than its current size the gap is filled with 0s. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hFile</parametername>
</parameternamelist>
<parameterdescription>
<para>The handle to the file to manipulate. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>New size of the file. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function returns a (uint16_t) &apos;0&apos; in case of success. See <ref refid="group__error_values" kindref="compound">error values</ref> for error list. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c" line="971" column="1" bodyfile="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c" bodystart="971" bodyend="1046"/>
      </memberdef>
      <memberdef kind="function" id="_s_efile_8c_1a54f66c38e6025c8e57ceda5c43d51c5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t secure_close</definition>
        <argsstring>(SEFILE_FHANDLE *hFile)</argsstring>
        <name>secure_close</name>
        <param>
          <type><ref refid="_s_efile_8h_1ac073933cdf58a366c2dfed344c37ebe9" kindref="member">SEFILE_FHANDLE</ref> *</type>
          <declname>hFile</declname>
        </param>
        <briefdescription>
<para>This function releases resources related to hFile. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hFile</parametername>
</parameternamelist>
<parameterdescription>
<para>The handle to the file we do not want to manipulate no more. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function returns a (uint16_t) &apos;0&apos; in case of success. See <ref refid="group__error_values" kindref="compound">error values</ref> for error list. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c" line="1048" column="1" bodyfile="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c" bodystart="1048" bodyend="1083"/>
      </memberdef>
      <memberdef kind="function" id="_s_efile_8c_1a6b2a9a6b81381a4ce20421831103b8b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t secure_ls</definition>
        <argsstring>(char *path, char *list, uint32_t *list_length)</argsstring>
        <name>secure_ls</name>
        <param>
          <type>char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>list</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>list_length</declname>
        </param>
        <briefdescription>
<para>This function identifies which encrypted files and encrypted directories are present in the directory pointed by path and writes them in list. It only recognizes the ones encrypted with the current environmental parameters. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">path</parametername>
</parameternamelist>
<parameterdescription>
<para>Absolute or relative path to the directory to browse. No encrypted directory are allowed inside the path. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">list</parametername>
</parameternamelist>
<parameterdescription>
<para>Already allocated array where to store filenames and directory names. Each entry is separated by &apos;\0&apos;. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">list_length</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a uint32_t used to stored total number of characters written in list. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function returns a (uint16_t) &apos;0&apos; in case of success. See <ref refid="group__error_values" kindref="compound">error values</ref> for error list. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c" line="1085" column="1" bodyfile="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c" bodystart="1085" bodyend="1189"/>
      </memberdef>
      <memberdef kind="function" id="_s_efile_8c_1a987cae1899d44e2c86de985b6145d41b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t secure_getfilesize</definition>
        <argsstring>(char *path, uint32_t *position)</argsstring>
        <name>secure_getfilesize</name>
        <param>
          <type>char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>position</declname>
        </param>
        <briefdescription>
<para>This function is used to get the total logic size of an encrypted file pointed by path. Logic size will always be smaller than physical size. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">path</parametername>
</parameternamelist>
<parameterdescription>
<para>Absolute or relative path the file. No encrypted directory are allowed inside the path. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">position</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an allocated uint32_t variable where will be stored the file size. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function returns a (uint16_t) &apos;0&apos; in case of success. See <ref refid="group__error_values" kindref="compound">error values</ref> for error list. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c" line="1191" column="1" bodyfile="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c" bodystart="1191" bodyend="1209"/>
      </memberdef>
      <memberdef kind="function" id="_s_efile_8c_1afc10a53fb05941bb327447cbef30b963" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t secure_mkdir</definition>
        <argsstring>(char *path)</argsstring>
        <name>secure_mkdir</name>
        <param>
          <type>char *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>This function creates a directory with an encrypted name. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">path</parametername>
</parameternamelist>
<parameterdescription>
<para>Absolute or relative path of the new directory. No encrypted directory are allowed inside the path. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function returns a (uint16_t) &apos;0&apos; in case of success. See <ref refid="group__error_values" kindref="compound">error values</ref> for error list. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c" line="1211" column="1" bodyfile="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c" bodystart="1211" bodyend="1242"/>
      </memberdef>
      <memberdef kind="function" id="_s_efile_8c_1ab134ec0c74652e6c2ecac3096d0bfd7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t crypto_filename</definition>
        <argsstring>(char *path, char *enc_name, uint16_t *encoded_length)</argsstring>
        <name>crypto_filename</name>
        <param>
          <type>char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>enc_name</declname>
        </param>
        <param>
          <type>uint16_t *</type>
          <declname>encoded_length</declname>
        </param>
        <briefdescription>
<para>This function computes the encrypted name of the file specified at position path and its length. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">path</parametername>
</parameternamelist>
<parameterdescription>
<para>It can be absolute or relative but it can not be a directory. No encrypted directory are allowed inside the path. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">enc_name</parametername>
</parameternamelist>
<parameterdescription>
<para>Already allocate string where the encrypted filename should be stored. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">encoded_length</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an allocated uint16_t where the length of the encrypted filename is stored. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function returns a (uint16_t) &apos;0&apos; in case of success. See <ref refid="group__error_values" kindref="compound">error values</ref> for error list. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c" line="1280" column="1" bodyfile="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c" bodystart="1280" bodyend="1326"/>
      </memberdef>
      <memberdef kind="function" id="_s_efile_8c_1a73a19f91c4b2838a6c1f126ac5e5381f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void compute_blk_offset</definition>
        <argsstring>(size_t current_offset, uint8_t *nonce)</argsstring>
        <name>compute_blk_offset</name>
        <param>
          <type>size_t</type>
          <declname>current_offset</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>nonce</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c" line="1378" column="1" bodyfile="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c" bodystart="1378" bodyend="1388"/>
      </memberdef>
      <memberdef kind="function" id="_s_efile_8c_1afe0d197f2f2b834bfdd7e65f71695bff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t encrypt_name</definition>
        <argsstring>(void *buff1, void *buff2, size_t size, uint16_t direction)</argsstring>
        <name>encrypt_name</name>
        <param>
          <type>void *</type>
          <declname>buff1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>buff2</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>direction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c" line="1725" column="1" bodyfile="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c" bodystart="1725" bodyend="1727"/>
      </memberdef>
      <memberdef kind="function" id="_s_efile_8c_1aae977955a0ae4b48158806cd45d2cd12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t secure_sync</definition>
        <argsstring>(SEFILE_FHANDLE *hFile)</argsstring>
        <name>secure_sync</name>
        <param>
          <type><ref refid="_s_efile_8h_1ac073933cdf58a366c2dfed344c37ebe9" kindref="member">SEFILE_FHANDLE</ref> *</type>
          <declname>hFile</declname>
        </param>
        <briefdescription>
<para>This function is used in case we want to be sure that the physical file is synced with the OS buffers. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hFile</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to the secure file to be synced. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function returns a (uint16_t) &apos;0&apos; in case of success. See <ref refid="group__error_values" kindref="compound">error values</ref> for error list. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c" line="1833" column="1" bodyfile="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c" bodystart="1833" bodyend="1851"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>In this file you will find the implementation of the public function already described in <ref refid="_s_efile_8h" kindref="compound">SEfile.h</ref>. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="authors"><para>Francesco Giavatto, Nicolò Maunero, Giulio Scalia </para></simplesect>
<simplesect kind="date"><para>17/09/2016 </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="9"><highlight class="preprocessor">#ifdef<sp/>__linux__</highlight></codeline>
<codeline lineno="10"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>_GNU_SOURCE</highlight></codeline>
<codeline lineno="11"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="12"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_s_efile_8h" kindref="compound">SEfile.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SEFILE_NONCE_LEN<sp/>32</highlight></codeline>
<codeline lineno="16"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="24" refid="struct_s_e_f_i_l_e___h_a_n_d_l_e" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e" kindref="compound">SEFILE_HANDLE</ref><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a507fef27d36d8ad4550276f9abf84ebb" kindref="member">log_offset</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="26"><highlight class="preprocessor">#if<sp/>defined(__linux__)<sp/>||<sp/>defined(__APPLE__)</highlight></codeline>
<codeline lineno="27"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="28"><highlight class="preprocessor">#elif<sp/>_WIN32<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="29"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>HANDLE<sp/><ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a37935da2e79760bd04e32e05e5922975" kindref="member">nonce_ctr</ref>[16];<sp/><sp/></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a6d2cb56237e6a99def8f9e9e54a46489" kindref="member">nonce_pbkdf2</ref>[SEFILE_NONCE_LEN];<sp/></highlight></codeline>
<codeline lineno="33"><highlight class="normal">};</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="preprocessor">#pragma<sp/>pack(push,1)</highlight></codeline>
<codeline lineno="41"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="47"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>nonce_pbkdf2[SEFILE_NONCE_LEN];<sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>nonce_ctr[16];<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>magic;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>ver;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>uid;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>uid_cnt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>fname_len;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal">}<sp/><ref refid="struct_s_e_f_i_l_e___h_e_a_d_e_r" kindref="compound">SEFILE_HEADER</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="preprocessor">#pragma<sp/>pack(pop)</highlight></codeline>
<codeline lineno="59"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>pack(push,1)</highlight></codeline>
<codeline lineno="61"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="69"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_s_e_f_i_l_e___h_e_a_d_e_r" kindref="compound">SEFILE_HEADER</ref><sp/>header;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>data[<ref refid="group___sector___defines_1ga460525481b728a7bbad706019c7f2156" kindref="member">SEFILE_LOGIC_DATA</ref>];<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>len;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>signature[32];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="80"><highlight class="normal">}<sp/><ref refid="struct_s_e_f_i_l_e___s_e_c_t_o_r" kindref="compound">SEFILE_SECTOR</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"></codeline>
<codeline lineno="84"><highlight class="preprocessor">#pragma<sp/>pack(pop)</highlight></codeline>
<codeline lineno="85"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>POS_TO_CIPHER_BLOCK(current_position)<sp/>((current_position<sp/>/<sp/>SEFILE_SECTOR_SIZE)<sp/>-<sp/>1)*(SEFILE_SECTOR_DATA_SIZE<sp/>/<sp/>SEFILE_BLOCK_SIZE)<sp/></highlight></codeline>
<codeline lineno="94"><highlight class="preprocessor">static<sp/>se3_session<sp/>*EnvSession=NULL;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="96"><highlight class="preprocessor">static<sp/>int32_t<sp/>*EnvKeyID=NULL;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="97"><highlight class="preprocessor">static<sp/>uint16_t<sp/>*EnvCrypto=NULL;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="98"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="108"><highlight class="preprocessor">void<sp/>get_filename(char<sp/>*path,<sp/>char<sp/>*file_name);</highlight></codeline>
<codeline lineno="109"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="116"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_s_efile_8c_1af387c94c97d3d3df73d0ddc6da891ad2" kindref="member">get_path</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*full_path,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path);</highlight></codeline>
<codeline lineno="123"><highlight class="normal">uint16_t<sp/><ref refid="_s_efile_8c_1a99543075d3f99eca1a5ca4b2d5feb016" kindref="member">check_env</ref>();</highlight></codeline>
<codeline lineno="140"><highlight class="normal">uint16_t<sp/><ref refid="_s_efile_8c_1aeb97d3ccfe07f0f8b62c6f4c05b3d115" kindref="member">crypt_sectors</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buff_decrypt,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buff_crypt,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>datain_len,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>current_offset,<sp/>uint8_t*<sp/>nonce_ctr,<sp/>uint8_t*<sp/>nonce_pbkdf2);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal">uint16_t<sp/><ref refid="_s_efile_8c_1a84651b6b79095cbb509ac22824595e4d" kindref="member">crypt_header</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buff1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buff2,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>datain_len,<sp/>uint16_t<sp/>direction);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="comment">//uint16_t<sp/>decrypt_sectors(void<sp/>*buff_crypt,<sp/>void<sp/>*buff_decrypt,<sp/>uint32_t<sp/>size);</highlight></codeline>
<codeline lineno="175"><highlight class="comment"></highlight><highlight class="normal">uint16_t<sp/><ref refid="_s_efile_8c_1a34d995f228e33aa28bff9af5cd8ca305" kindref="member">decrypt_sectors</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buff_crypt,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buff_decrypt,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>datain_len,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>current_offset,<sp/>uint8_t*<sp/>nonce_ctr,<sp/>uint8_t*<sp/>nonce_pbkdf2);</highlight></codeline>
<codeline lineno="185"><highlight class="normal">uint16_t<sp/><ref refid="_s_efile_8c_1a558cc4a9929c6dc846d54ec42012466c" kindref="member">get_filesize</ref>(<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e" kindref="compound">SEFILE_FHANDLE</ref><sp/>*hFile,<sp/>uint32_t<sp/>*<sp/>length);</highlight></codeline>
<codeline lineno="196"><highlight class="normal">uint16_t<sp/><ref refid="_s_efile_8c_1aeda597741a9b6bf76b5258f6c996e678" kindref="member">decrypt_filename</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename);</highlight></codeline>
<codeline lineno="207"><highlight class="normal">uint16_t<sp/><ref refid="_s_efile_8c_1a2ada7106da4eb0668715f317366777ef" kindref="member">decrypt_filehandle</ref>(<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e" kindref="compound">SEFILE_FHANDLE</ref><sp/>*hFile,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename);</highlight></codeline>
<codeline lineno="218"><highlight class="normal">uint16_t<sp/><ref refid="_s_efile_8c_1a700fedc67d30512447684ec1eff14bab" kindref="member">crypt_dirname</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dirpath,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*encDirname);</highlight></codeline>
<codeline lineno="229"><highlight class="normal">uint16_t<sp/><ref refid="_s_efile_8c_1ac74803a54c2cb05ea329acdeef7f7856" kindref="member">decrypt_dirname</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dirpath,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*decDirname);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal">uint16_t<sp/><ref refid="_s_efile_8c_1a95ea3f63b783aca7223b6b885cab1a5e" kindref="member">valid_name</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal">uint16_t<sp/><ref refid="_s_efile_8c_1a435a1cfd0cd619deb2efeb7aa3723126" kindref="member">secure_init</ref>(se3_session<sp/>*s,<sp/>uint32_t<sp/>keyID,<sp/>uint16_t<sp/>crypto){</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0,<sp/>j<sp/>=<sp/>0,<sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>se3_key<sp/>keyTable;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>se3_algo<sp/>algTable[SE3_ALGO_MAX];</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>ret<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="group___environmental_vars_1gad3215e338581ce95b76b3b84b928d744" kindref="member">EnvSession</ref><sp/>!=<sp/>NULL<sp/>||<sp/><ref refid="group___environmental_vars_1ga7a8b4d6945f6a13f8683427dc7ab7a44" kindref="member">EnvKeyID</ref><sp/>!=<sp/>NULL<sp/>||<sp/><ref refid="group___environmental_vars_1ga328037c714e95e56186f9d5f0842adea" kindref="member">EnvCrypto</ref><sp/>!=<sp/>NULL<sp/>){</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_ENV_INIT_ERROR;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(s==NULL){</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_ENV_INIT_ERROR;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!s-&gt;logged_in){</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_ENV_INIT_ERROR;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___environmental_vars_1gad3215e338581ce95b76b3b84b928d744" kindref="member">EnvSession</ref>=(se3_session<sp/>*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(se3_session));</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___environmental_vars_1ga7a8b4d6945f6a13f8683427dc7ab7a44" kindref="member">EnvKeyID</ref>=(int32_t<sp/>*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int32_t));</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___environmental_vars_1ga328037c714e95e56186f9d5f0842adea" kindref="member">EnvCrypto</ref><sp/>=<sp/>(uint16_t<sp/>*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint16_t));</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="group___environmental_vars_1ga328037c714e95e56186f9d5f0842adea" kindref="member">EnvCrypto</ref><sp/>=<sp/>SE3_ALGO_MAX<sp/>+<sp/>1;<sp/></highlight><highlight class="comment">//No<sp/>valid<sp/>algorithm<sp/>still<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="group___environmental_vars_1gad3215e338581ce95b76b3b84b928d744" kindref="member">EnvSession</ref><sp/>==<sp/>NULL<sp/>||<sp/><ref refid="group___environmental_vars_1ga7a8b4d6945f6a13f8683427dc7ab7a44" kindref="member">EnvKeyID</ref><sp/>==<sp/>NULL<sp/>||<sp/><ref refid="group___environmental_vars_1ga328037c714e95e56186f9d5f0842adea" kindref="member">EnvCrypto</ref><sp/>==<sp/>NULL<sp/>){</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_ENV_INIT_ERROR;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(<ref refid="group___environmental_vars_1gad3215e338581ce95b76b3b84b928d744" kindref="member">EnvSession</ref>,<sp/>s,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(se3_session));</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyID<sp/>==<sp/>-1){<sp/></highlight><highlight class="comment">//use<sp/>first<sp/>available<sp/>KeyID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i=0;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(L1_key_list(s,<sp/>i,<sp/>1,<sp/>&amp;keyTable,<sp/>&amp;count)){</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_efile_8c_1a71736a6b4cc1a0ec94d013052e1e2a10" kindref="member">secure_finit</ref>();</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_ENV_INIT_ERROR;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(count<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_efile_8c_1a71736a6b4cc1a0ec94d013052e1e2a10" kindref="member">secure_finit</ref>();</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_KEYID_NOT_PRESENT;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(keyTable.validity&gt;time(0)){</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="group___environmental_vars_1ga7a8b4d6945f6a13f8683427dc7ab7a44" kindref="member">EnvKeyID</ref>=keyTable.id;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(found<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(found<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_efile_8c_1a71736a6b4cc1a0ec94d013052e1e2a10" kindref="member">secure_finit</ref>();</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_KEYID_NOT_PRESENT;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!L1_find_key(<ref refid="group___environmental_vars_1gad3215e338581ce95b76b3b84b928d744" kindref="member">EnvSession</ref>,<sp/>keyID)){</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_efile_8c_1a71736a6b4cc1a0ec94d013052e1e2a10" kindref="member">secure_finit</ref>();</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_ENV_INIT_ERROR;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="group___environmental_vars_1ga7a8b4d6945f6a13f8683427dc7ab7a44" kindref="member">EnvKeyID</ref><sp/>=<sp/>keyID;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(crypto!=(SE3_ALGO_MAX<sp/>+<sp/>1)){</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((ret<sp/>=<sp/>L1_get_algorithms(<ref refid="group___environmental_vars_1gad3215e338581ce95b76b3b84b928d744" kindref="member">EnvSession</ref>,<sp/>0,<sp/>SE3_ALGO_MAX,<sp/>algTable,<sp/>&amp;count))<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>count<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>algTable[crypto].type<sp/>==<sp/>SE3_CRYPTO_TYPE_BLOCKCIPHER_AUTH){</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="group___environmental_vars_1ga328037c714e95e56186f9d5f0842adea" kindref="member">EnvCrypto</ref><sp/>=<sp/>crypto;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_efile_8c_1a71736a6b4cc1a0ec94d013052e1e2a10" kindref="member">secure_finit</ref>();</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_ENV_INIT_ERROR;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((ret<sp/>=<sp/>L1_get_algorithms(<ref refid="group___environmental_vars_1gad3215e338581ce95b76b3b84b928d744" kindref="member">EnvSession</ref>,<sp/>0,<sp/>SE3_ALGO_MAX,<sp/>algTable,<sp/>&amp;count))<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>count<sp/>&gt;<sp/>0){</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>count;<sp/>i++){</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(algTable[i].type<sp/>==<sp/>SE3_CRYPTO_TYPE_BLOCKCIPHER_AUTH)<sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="group___environmental_vars_1ga328037c714e95e56186f9d5f0842adea" kindref="member">EnvCrypto</ref><sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*<ref refid="group___environmental_vars_1ga328037c714e95e56186f9d5f0842adea" kindref="member">EnvCrypto</ref><sp/>==<sp/>SE3_ALGO_MAX<sp/>+<sp/>1){</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_efile_8c_1a71736a6b4cc1a0ec94d013052e1e2a10" kindref="member">secure_finit</ref>();</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_ENV_INIT_ERROR;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_s_efile_8c_1a71736a6b4cc1a0ec94d013052e1e2a10" kindref="member">secure_finit</ref>();</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_ENV_INIT_ERROR;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="327"><highlight class="normal">}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal">uint16_t<sp/><ref refid="_s_efile_8c_1ae8d0daae652fc1f3e2c29781591aa36e" kindref="member">secure_update</ref>(se3_session<sp/>*s,<sp/>int32_t<sp/>keyID,<sp/>uint16_t<sp/>crypto){</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>count<sp/>=<sp/>0,<sp/>ret<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>se3_key<sp/>keyTable;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>se3_algo<sp/>algTable[SE3_ALGO_MAX];</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="_s_efile_8c_1a99543075d3f99eca1a5ca4b2d5feb016" kindref="member">check_env</ref>()){</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_ENV_UPDATE_ERROR;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(s!=NULL){</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!s-&gt;logged_in){</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(<ref refid="group___environmental_vars_1gad3215e338581ce95b76b3b84b928d744" kindref="member">EnvSession</ref>,<sp/>s,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*s));</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_ENV_UPDATE_ERROR;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(keyID!=-1){</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!L1_find_key(<ref refid="group___environmental_vars_1gad3215e338581ce95b76b3b84b928d744" kindref="member">EnvSession</ref>,<sp/>keyID)){</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_ENV_UPDATE_ERROR;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="group___environmental_vars_1ga7a8b4d6945f6a13f8683427dc7ab7a44" kindref="member">EnvKeyID</ref>=keyID;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(crypto<sp/>!=<sp/>(SE3_ALGO_MAX<sp/>+<sp/>1)){</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((ret<sp/>=<sp/>L1_get_algorithms(<ref refid="group___environmental_vars_1gad3215e338581ce95b76b3b84b928d744" kindref="member">EnvSession</ref>,<sp/>0,<sp/>SE3_ALGO_MAX,<sp/>algTable,<sp/>&amp;count))<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>count<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>algTable[crypto].type<sp/>==<sp/>SE3_CRYPTO_TYPE_BLOCKCIPHER_AUTH){</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="group___environmental_vars_1ga328037c714e95e56186f9d5f0842adea" kindref="member">EnvCrypto</ref><sp/>=<sp/>crypto;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_ENV_UPDATE_ERROR;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="362"><highlight class="normal">}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal">uint16_t<sp/><ref refid="_s_efile_8c_1a71736a6b4cc1a0ec94d013052e1e2a10" kindref="member">secure_finit</ref>(){</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="group___environmental_vars_1gad3215e338581ce95b76b3b84b928d744" kindref="member">EnvSession</ref>!=NULL){</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(<ref refid="group___environmental_vars_1gad3215e338581ce95b76b3b84b928d744" kindref="member">EnvSession</ref>);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="group___environmental_vars_1ga7a8b4d6945f6a13f8683427dc7ab7a44" kindref="member">EnvKeyID</ref>!=NULL){</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(<ref refid="group___environmental_vars_1ga7a8b4d6945f6a13f8683427dc7ab7a44" kindref="member">EnvKeyID</ref>);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="group___environmental_vars_1ga328037c714e95e56186f9d5f0842adea" kindref="member">EnvCrypto</ref>!=NULL){</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(<ref refid="group___environmental_vars_1ga328037c714e95e56186f9d5f0842adea" kindref="member">EnvCrypto</ref>);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="377"><highlight class="normal">}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal">uint16_t<sp/><ref refid="_s_efile_8c_1ae99f8ccb396cbb5685d9e16bb3dbbe98" kindref="member">secure_open</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path,<sp/><ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e" kindref="compound">SEFILE_FHANDLE</ref><sp/>*hFile,<sp/>int32_t<sp/>mode,<sp/>int32_t<sp/>creation){</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>commandError=0;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>enc_filename[<ref refid="_s_efile_8h_1aa4e5ca47d52a8be522912705c27e0d1c" kindref="member">MAX_PATHNAME</ref>];</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>lenc=0;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e" kindref="compound">SEFILE_FHANDLE</ref><sp/>hTmp=NULL;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_s_e_f_i_l_e___s_e_c_t_o_r" kindref="compound">SEFILE_SECTOR</ref><sp/>buffEnc,<sp/>buffDec;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32</highlight></codeline>
<codeline lineno="387"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>DWORD<sp/>nBytesRead<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="389"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="_s_efile_8c_1a99543075d3f99eca1a5ca4b2d5feb016" kindref="member">check_env</ref>()){</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_OPEN_ERROR;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(enc_filename,<sp/>0,<sp/><ref refid="_s_efile_8h_1aa4e5ca47d52a8be522912705c27e0d1c" kindref="member">MAX_PATHNAME</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(creation==(<ref refid="group___access___defines_1ga57c4f0752b0acce2d45dff73592e09e3" kindref="member">SEFILE_NEWFILE</ref>)){</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((commandError=<ref refid="_s_efile_8c_1adbb72ef517bfb5e342fba86f2e72b25f" kindref="member">secure_create</ref>(path,<sp/>&amp;hTmp,<sp/>mode))!=0){</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_OPEN_ERROR;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(hFile,<sp/>&amp;hTmp,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(hTmp));</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="_s_efile_8c_1ab134ec0c74652e6c2ecac3096d0bfd7f" kindref="member">crypto_filename</ref>(path,<sp/>enc_filename,<sp/>&amp;lenc)){</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_OPEN_ERROR;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>hTmp=(<ref refid="_s_efile_8h_1ac073933cdf58a366c2dfed344c37ebe9" kindref="member">SEFILE_FHANDLE</ref>)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e" kindref="compound">SEFILE_HANDLE</ref>));</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hTmp==NULL){</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_OPEN_ERROR;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>open<sp/>phase<sp/>start<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__linux__)<sp/>||<sp/>defined(__APPLE__)</highlight></codeline>
<codeline lineno="414"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref><sp/>=<sp/>open(enc_filename,<sp/>mode<sp/>|<sp/>creation,<sp/>S_IRWXU))<sp/>==<sp/>-1<sp/>){</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>commandError=SEFILE_OPEN_ERROR;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>_WIN32</highlight></codeline>
<codeline lineno="418"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref><sp/>=<sp/>CreateFile(</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enc_filename,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>file<sp/>to<sp/>open</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>open<sp/>for<sp/>reading<sp/>and<sp/>writing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE_SHARE_READ<sp/>|<sp/>FILE_SHARE_WRITE,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>share</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>default<sp/>security</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>creation,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>existing<sp/>file<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE_ATTRIBUTE_NORMAL,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>normal<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>attr.<sp/>template</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref><sp/>==<sp/>INVALID_HANDLE_VALUE){</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DWORD<sp/>errValue<sp/>=<sp/>GetLastError();</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>commandError=SEFILE_OPEN_ERROR;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="435"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>open<sp/>phase<sp/>end<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>move<sp/>pointer<sp/>after<sp/>the<sp/>first<sp/>sector*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__linux__)<sp/>||<sp/>defined(__APPLE__)</highlight></codeline>
<codeline lineno="439"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*lseek(hTmp-&gt;fd,<sp/>SEFILE_SECTOR_SIZE,<sp/>SEEK_SET);*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(read(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref>,<sp/>&amp;buffEnc,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_e_f_i_l_e___s_e_c_t_o_r" kindref="compound">SEFILE_SECTOR</ref>))<sp/>!=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_e_f_i_l_e___s_e_c_t_o_r" kindref="compound">SEFILE_SECTOR</ref>)){</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>commandError<sp/>=<sp/>SEFILE_OPEN_ERROR;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a507fef27d36d8ad4550276f9abf84ebb" kindref="member">log_offset</ref><sp/>=<sp/>lseek(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref>,<sp/>0,<sp/>SEEK_CUR);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>_WIN32</highlight></codeline>
<codeline lineno="445"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*SetFilePointer(hTmp-&gt;fd,<sp/>SEFILE_SECTOR_SIZE,<sp/>NULL,<sp/>FILE_BEGIN);*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ReadFile(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref>,<sp/>&amp;buffEnc,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_e_f_i_l_e___s_e_c_t_o_r" kindref="compound">SEFILE_SECTOR</ref>),<sp/>&amp;nBytesRead,<sp/>NULL)<sp/>==<sp/>FALSE<sp/>&amp;&amp;<sp/>nBytesRead<sp/>!=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_e_f_i_l_e___s_e_c_t_o_r" kindref="compound">SEFILE_SECTOR</ref>)){</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>commandError<sp/>=<sp/>SEFILE_OPEN_ERROR;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a507fef27d36d8ad4550276f9abf84ebb" kindref="member">log_offset</ref><sp/>=<sp/>SetFilePointer(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref>,<sp/>0,<sp/>NULL,<sp/>FILE_CURRENT);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="451"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_s_efile_8c_1a84651b6b79095cbb509ac22824595e4d" kindref="member">crypt_header</ref>(&amp;buffEnc,<sp/>&amp;buffDec,<sp/><ref refid="group___sector___defines_1ga6961ed45e472749b587136d18eb74b4d" kindref="member">SEFILE_SECTOR_DATA_SIZE</ref>,<sp/>SE3_DIR_DECRYPT)){</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>commandError<sp/>=<sp/>SEFILE_OPEN_ERROR;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a37935da2e79760bd04e32e05e5922975" kindref="member">nonce_ctr</ref>,<sp/>buffDec.<ref refid="struct_s_e_f_i_l_e___s_e_c_t_o_r_1a4f1dcced2232164ca00c5906400dd083" kindref="member">header</ref>.<ref refid="struct_s_e_f_i_l_e___h_e_a_d_e_r_1adcb7b8a5fc9e93d1fbf348b144883bf9" kindref="member">nonce_ctr</ref>,<sp/>16);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a6d2cb56237e6a99def8f9e9e54a46489" kindref="member">nonce_pbkdf2</ref>,<sp/>buffDec.<ref refid="struct_s_e_f_i_l_e___s_e_c_t_o_r_1a4f1dcced2232164ca00c5906400dd083" kindref="member">header</ref>.<ref refid="struct_s_e_f_i_l_e___h_e_a_d_e_r_1a7ebb6ac2da3fc9384e1ed12cdbbeb03c" kindref="member">nonce_pbkdf2</ref>,<sp/>SEFILE_NONCE_LEN);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(hFile,<sp/>&amp;hTmp,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(hTmp));</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>commandError;</highlight></codeline>
<codeline lineno="460"><highlight class="normal">}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal">uint16_t<sp/><ref refid="_s_efile_8c_1adbb72ef517bfb5e342fba86f2e72b25f" kindref="member">secure_create</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path,<sp/><ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e" kindref="compound">SEFILE_FHANDLE</ref><sp/>*hFile,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mode){</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>commandError=0;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>enc_filename[<ref refid="_s_efile_8h_1aa4e5ca47d52a8be522912705c27e0d1c" kindref="member">MAX_PATHNAME</ref>],<sp/>*filename=NULL;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>lenc=0;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_s_e_f_i_l_e___s_e_c_t_o_r" kindref="compound">SEFILE_SECTOR</ref><sp/>*buff=NULL,<sp/>*buffEnc=NULL;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e" kindref="compound">SEFILE_FHANDLE</ref><sp/>hTmp=NULL;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>random_padding<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>*padding_ptr<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32</highlight></codeline>
<codeline lineno="471"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>DWORD<sp/>nBytesWritten<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="473"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="_s_efile_8c_1a99543075d3f99eca1a5ca4b2d5feb016" kindref="member">check_env</ref>()){</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_CREATE_ERROR;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(enc_filename,<sp/>0,<sp/><ref refid="_s_efile_8h_1aa4e5ca47d52a8be522912705c27e0d1c" kindref="member">MAX_PATHNAME</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="_s_efile_8c_1ab134ec0c74652e6c2ecac3096d0bfd7f" kindref="member">crypto_filename</ref>(path,<sp/>enc_filename,<sp/>((uint16_t*)&amp;lenc))){</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_CREATE_ERROR;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>hTmp=(<ref refid="_s_efile_8h_1ac073933cdf58a366c2dfed344c37ebe9" kindref="member">SEFILE_FHANDLE</ref>)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e" kindref="compound">SEFILE_HANDLE</ref>));</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hTmp==NULL){</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_CREATE_ERROR;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>create<sp/>phase<sp/>start<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__linux__)<sp/>||<sp/>defined(__APPLE__)</highlight></codeline>
<codeline lineno="489"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref><sp/>=<sp/>open(enc_filename,<sp/>mode<sp/>|<sp/>O_CREAT<sp/>|<sp/>O_TRUNC<sp/>,<sp/>S_IRWXU))<sp/>==<sp/>-1<sp/>){</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>commandError=SEFILE_CREATE_ERROR;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>_WIN32</highlight></codeline>
<codeline lineno="494"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref><sp/>=<sp/>CreateFile(</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enc_filename,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>file<sp/>to<sp/>open</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mode,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>open<sp/>for<sp/>reading<sp/>and<sp/>writing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE_SHARE_READ<sp/>|<sp/>FILE_SHARE_WRITE,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>share</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>default<sp/>security</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CREATE_ALWAYS,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>existing<sp/>file<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE_ATTRIBUTE_NORMAL,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>normal<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>attr.<sp/>template</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref><sp/>==<sp/>INVALID_HANDLE_VALUE){</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>commandError=SEFILE_CREATE_ERROR;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="510"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>create<sp/>phase<sp/>end<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>create<sp/>new<sp/>header<sp/>sector<sp/>start<sp/>****************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>buff=(<ref refid="struct_s_e_f_i_l_e___s_e_c_t_o_r" kindref="compound">SEFILE_SECTOR</ref><sp/>*)calloc(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_e_f_i_l_e___s_e_c_t_o_r" kindref="compound">SEFILE_SECTOR</ref>));</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>buffEnc=(<ref refid="struct_s_e_f_i_l_e___s_e_c_t_o_r" kindref="compound">SEFILE_SECTOR</ref><sp/>*)calloc(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_e_f_i_l_e___s_e_c_t_o_r" kindref="compound">SEFILE_SECTOR</ref>));</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(buff==NULL<sp/>||<sp/>buffEnc==NULL){</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_CREATE_ERROR;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO<sp/>Populate<sp/>header<sp/>and<sp/>write<sp/>to<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//buff-&gt;header.nonce_ctr.high=0;<sp/>//discover<sp/>what<sp/>to<sp/>put.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//buff-&gt;header.nonce_ctr.low=0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//memset(buff-&gt;header.nonce_ctr,<sp/>0,<sp/>16);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>se3c_rand(16,<sp/>buff-&gt;<ref refid="struct_s_e_f_i_l_e___s_e_c_t_o_r_1a4f1dcced2232164ca00c5906400dd083" kindref="member">header</ref>.<ref refid="struct_s_e_f_i_l_e___h_e_a_d_e_r_1adcb7b8a5fc9e93d1fbf348b144883bf9" kindref="member">nonce_ctr</ref>);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a37935da2e79760bd04e32e05e5922975" kindref="member">nonce_ctr</ref>,<sp/>buff-&gt;<ref refid="struct_s_e_f_i_l_e___s_e_c_t_o_r_1a4f1dcced2232164ca00c5906400dd083" kindref="member">header</ref>.<ref refid="struct_s_e_f_i_l_e___h_e_a_d_e_r_1adcb7b8a5fc9e93d1fbf348b144883bf9" kindref="member">nonce_ctr</ref>,<sp/>16);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>se3c_rand(SEFILE_NONCE_LEN,<sp/>buff-&gt;<ref refid="struct_s_e_f_i_l_e___s_e_c_t_o_r_1a4f1dcced2232164ca00c5906400dd083" kindref="member">header</ref>.<ref refid="struct_s_e_f_i_l_e___h_e_a_d_e_r_1a7ebb6ac2da3fc9384e1ed12cdbbeb03c" kindref="member">nonce_pbkdf2</ref>);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a6d2cb56237e6a99def8f9e9e54a46489" kindref="member">nonce_pbkdf2</ref>,<sp/>buff-&gt;<ref refid="struct_s_e_f_i_l_e___s_e_c_t_o_r_1a4f1dcced2232164ca00c5906400dd083" kindref="member">header</ref>.<ref refid="struct_s_e_f_i_l_e___h_e_a_d_e_r_1a7ebb6ac2da3fc9384e1ed12cdbbeb03c" kindref="member">nonce_pbkdf2</ref>,<sp/>SEFILE_NONCE_LEN);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>buff-&gt;<ref refid="struct_s_e_f_i_l_e___s_e_c_t_o_r_1a4f1dcced2232164ca00c5906400dd083" kindref="member">header</ref>.<ref refid="struct_s_e_f_i_l_e___h_e_a_d_e_r_1a3c573cee7709f63a385460ad21637ec1" kindref="member">uid</ref>=0;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>buff-&gt;<ref refid="struct_s_e_f_i_l_e___s_e_c_t_o_r_1a4f1dcced2232164ca00c5906400dd083" kindref="member">header</ref>.<ref refid="struct_s_e_f_i_l_e___h_e_a_d_e_r_1ae10c6516ac00e694db72a45ef16a214c" kindref="member">uid_cnt</ref>=0;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>buff-&gt;<ref refid="struct_s_e_f_i_l_e___s_e_c_t_o_r_1a4f1dcced2232164ca00c5906400dd083" kindref="member">header</ref>.<ref refid="struct_s_e_f_i_l_e___h_e_a_d_e_r_1a243bb9ed827d6f802720231425ee240c" kindref="member">ver</ref>=0;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>buff-&gt;<ref refid="struct_s_e_f_i_l_e___s_e_c_t_o_r_1a4f1dcced2232164ca00c5906400dd083" kindref="member">header</ref>.<ref refid="struct_s_e_f_i_l_e___h_e_a_d_e_r_1a552830c2eab29ca1ce93f18cf8aff306" kindref="member">magic</ref>=0;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>filename=strrchr(path,<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(filename==NULL){</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filename=strrchr(path,<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(filename==NULL)<sp/>filename=path;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>filename++;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filename++;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>buff-&gt;<ref refid="struct_s_e_f_i_l_e___s_e_c_t_o_r_1a4f1dcced2232164ca00c5906400dd083" kindref="member">header</ref>.<ref refid="struct_s_e_f_i_l_e___h_e_a_d_e_r_1a6ef79b4f4b76a57b2610bda99f34afdc" kindref="member">fname_len</ref>=strlen(filename);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>buff-&gt;<ref refid="struct_s_e_f_i_l_e___s_e_c_t_o_r_1a7a0bf13d497fbcd2a5ac99511209bff0" kindref="member">len</ref>=0;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//copy<sp/>filename<sp/>in<sp/>header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(buff-&gt;<ref refid="struct_s_e_f_i_l_e___s_e_c_t_o_r_1a8cadf99c7327a12837c23bb6b97db165" kindref="member">data</ref>+</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_e_f_i_l_e___h_e_a_d_e_r" kindref="compound">SEFILE_HEADER</ref>),<sp/>filename,<sp/>buff-&gt;<ref refid="struct_s_e_f_i_l_e___s_e_c_t_o_r_1a4f1dcced2232164ca00c5906400dd083" kindref="member">header</ref>.<ref refid="struct_s_e_f_i_l_e___h_e_a_d_e_r_1a6ef79b4f4b76a57b2610bda99f34afdc" kindref="member">fname_len</ref>);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO<sp/>add<sp/>random<sp/>padding!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>padding_ptr<sp/>=<sp/>(buff-&gt;<ref refid="struct_s_e_f_i_l_e___s_e_c_t_o_r_1a8cadf99c7327a12837c23bb6b97db165" kindref="member">data</ref><sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_e_f_i_l_e___h_e_a_d_e_r" kindref="compound">SEFILE_HEADER</ref>)<sp/>+<sp/>buff-&gt;<ref refid="struct_s_e_f_i_l_e___s_e_c_t_o_r_1a4f1dcced2232164ca00c5906400dd083" kindref="member">header</ref>.<ref refid="struct_s_e_f_i_l_e___h_e_a_d_e_r_1a6ef79b4f4b76a57b2610bda99f34afdc" kindref="member">fname_len</ref>);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>random_padding<sp/>=<sp/>(buff-&gt;<ref refid="struct_s_e_f_i_l_e___s_e_c_t_o_r_1a8cadf99c7327a12837c23bb6b97db165" kindref="member">data</ref>+<ref refid="group___sector___defines_1ga460525481b728a7bbad706019c7f2156" kindref="member">SEFILE_LOGIC_DATA</ref>)<sp/>-<sp/>padding_ptr;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>se3c_rand(random_padding,<sp/>padding_ptr);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_s_efile_8c_1a84651b6b79095cbb509ac22824595e4d" kindref="member">crypt_header</ref>(buff,<sp/>buffEnc,<sp/><ref refid="group___sector___defines_1ga6961ed45e472749b587136d18eb74b4d" kindref="member">SEFILE_SECTOR_DATA_SIZE</ref>,<sp/>SE3_DIR_ENCRYPT)){</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(buff);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(buffEnc);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_CREATE_ERROR;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__linux__)<sp/>||<sp/>defined(__APPLE__)</highlight></codeline>
<codeline lineno="559"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(write(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref>,<sp/>buffEnc,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_e_f_i_l_e___s_e_c_t_o_r" kindref="compound">SEFILE_SECTOR</ref>))<sp/>!=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_e_f_i_l_e___s_e_c_t_o_r" kindref="compound">SEFILE_SECTOR</ref>)<sp/>){</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>commandError=SEFILE_CREATE_ERROR;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>_WIN32</highlight></codeline>
<codeline lineno="563"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(WriteFile(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref>,<sp/>buffEnc,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_e_f_i_l_e___s_e_c_t_o_r" kindref="compound">SEFILE_SECTOR</ref>),<sp/>&amp;nBytesWritten,<sp/>NULL)<sp/>==<sp/>FALSE)</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>commandError=SEFILE_CREATE_ERROR;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="566"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>create<sp/>new<sp/>header<sp/>sector<sp/>end<sp/>**************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>move<sp/>pointer<sp/>after<sp/>the<sp/>first<sp/>sector<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__linux__)<sp/>||<sp/>defined(__APPLE__)</highlight></codeline>
<codeline lineno="570"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a507fef27d36d8ad4550276f9abf84ebb" kindref="member">log_offset</ref>=lseek(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref>,<sp/>0,<sp/>SEEK_CUR);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>_WIN32</highlight></codeline>
<codeline lineno="572"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a507fef27d36d8ad4550276f9abf84ebb" kindref="member">log_offset</ref>=SetFilePointer(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref>,<sp/>0,<sp/>NULL,<sp/>FILE_CURRENT);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="574"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>free(buff);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>free(buffEnc);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(hFile,<sp/>&amp;hTmp,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(hTmp));</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>commandError;</highlight></codeline>
<codeline lineno="578"><highlight class="normal">}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal">uint16_t<sp/><ref refid="_s_efile_8c_1acb652f6362fd5635c4aaa8c5e67c7f1b" kindref="member">secure_write</ref>(<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e" kindref="compound">SEFILE_FHANDLE</ref><sp/>*hFile,<sp/>uint8_t<sp/>*<sp/>dataIn,<sp/>uint32_t<sp/>dataIn_len){</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e" kindref="compound">SEFILE_FHANDLE</ref><sp/>hTmp=NULL;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>absOffset=0,<sp/>sectOffset=0;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_s_e_f_i_l_e___s_e_c_t_o_r" kindref="compound">SEFILE_SECTOR</ref><sp/>*cryptBuff=NULL,<sp/>*decryptBuff=NULL;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>current_position<sp/>=<sp/><ref refid="group___sector___defines_1gad205a758c315675de3ad9f5f1cbf962d" kindref="member">SEFILE_SECTOR_SIZE</ref>;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>random_padding<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>*padding_ptr<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__linux__)<sp/>||<sp/>defined(__APPLE__)</highlight></codeline>
<codeline lineno="589"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nBytesRead=0;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>_WIN32</highlight></codeline>
<codeline lineno="591"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>DWORD<sp/>nBytesWritten=0,<sp/>nBytesRead=0;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="593"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="_s_efile_8c_1a99543075d3f99eca1a5ca4b2d5feb016" kindref="member">check_env</ref>()<sp/>||<sp/>hFile==NULL){</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_WRITE_ERROR;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/>hTmp=*hFile;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dataIn_len<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>if<sp/>(secure_sync(hFile)){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>SEFILE_WRITE_ERROR;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//move<sp/>the<sp/>pointer<sp/>to<sp/>the<sp/>begin<sp/>of<sp/>the<sp/>sector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__linux__)<sp/>||<sp/>defined(__APPLE__)</highlight></codeline>
<codeline lineno="606"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((absOffset=lseek(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref>,<sp/>0,<sp/>SEEK_CUR))&lt;0<sp/>||<sp/>absOffset!=hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a507fef27d36d8ad4550276f9abf84ebb" kindref="member">log_offset</ref>){</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_WRITE_ERROR;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>current_position<sp/>=<sp/>lseek(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref>,((int32_t)(absOffset/<ref refid="group___sector___defines_1gad205a758c315675de3ad9f5f1cbf962d" kindref="member">SEFILE_SECTOR_SIZE</ref>))*<ref refid="group___sector___defines_1gad205a758c315675de3ad9f5f1cbf962d" kindref="member">SEFILE_SECTOR_SIZE</ref>,<sp/>SEEK_SET);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>_WIN32</highlight></codeline>
<codeline lineno="612"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((absOffset=SetFilePointer(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref>,<sp/>0,<sp/>NULL,<sp/>FILE_CURRENT))&lt;0<sp/>||<sp/>absOffset!=hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a507fef27d36d8ad4550276f9abf84ebb" kindref="member">log_offset</ref>){</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_WRITE_ERROR;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>current_position<sp/>=<sp/>SetFilePointer(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref>,((int32_t)(absOffset/<ref refid="group___sector___defines_1gad205a758c315675de3ad9f5f1cbf962d" kindref="member">SEFILE_SECTOR_SIZE</ref>))*<ref refid="group___sector___defines_1gad205a758c315675de3ad9f5f1cbf962d" kindref="member">SEFILE_SECTOR_SIZE</ref>,<sp/>NULL,<sp/>FILE_BEGIN);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="618"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>cryptBuff=(<ref refid="struct_s_e_f_i_l_e___s_e_c_t_o_r" kindref="compound">SEFILE_SECTOR</ref><sp/>*)calloc(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_e_f_i_l_e___s_e_c_t_o_r" kindref="compound">SEFILE_SECTOR</ref>));</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>decryptBuff=(<ref refid="struct_s_e_f_i_l_e___s_e_c_t_o_r" kindref="compound">SEFILE_SECTOR</ref><sp/>*)calloc(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_e_f_i_l_e___s_e_c_t_o_r" kindref="compound">SEFILE_SECTOR</ref>));</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(cryptBuff==NULL<sp/>||<sp/>decryptBuff==NULL){</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_WRITE_ERROR;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//save<sp/>the<sp/>relative<sp/>position<sp/>inside<sp/>the<sp/>sector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/>sectOffset=absOffset%<ref refid="group___sector___defines_1gad205a758c315675de3ad9f5f1cbf962d" kindref="member">SEFILE_SECTOR_SIZE</ref>;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//read<sp/>the<sp/>whole<sp/>sector<sp/>and<sp/>move<sp/>back<sp/>the<sp/>pointer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__linux__)<sp/>||<sp/>defined(__APPLE__)</highlight></codeline>
<codeline lineno="629"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>nBytesRead=read(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref>,<sp/>cryptBuff,<sp/><ref refid="group___sector___defines_1gad205a758c315675de3ad9f5f1cbf962d" kindref="member">SEFILE_SECTOR_SIZE</ref>);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>_WIN32</highlight></codeline>
<codeline lineno="631"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>ReadFile(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref>,<sp/>cryptBuff,<sp/><ref refid="group___sector___defines_1gad205a758c315675de3ad9f5f1cbf962d" kindref="member">SEFILE_SECTOR_SIZE</ref>,<sp/>&amp;nBytesRead,<sp/>NULL);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="633"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nBytesRead&gt;0){</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_s_efile_8c_1a34d995f228e33aa28bff9af5cd8ca305" kindref="member">decrypt_sectors</ref>(cryptBuff,<sp/>decryptBuff,<sp/><ref refid="group___sector___defines_1ga6961ed45e472749b587136d18eb74b4d" kindref="member">SEFILE_SECTOR_DATA_SIZE</ref>,<sp/><ref refid="_s_efile_8c_1a7617f01b2063fc7205c6081b88801a75" kindref="member">POS_TO_CIPHER_BLOCK</ref>(current_position),<sp/>hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a37935da2e79760bd04e32e05e5922975" kindref="member">nonce_ctr</ref>,<sp/>hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a6d2cb56237e6a99def8f9e9e54a46489" kindref="member">nonce_pbkdf2</ref>)){</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(cryptBuff);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(decryptBuff);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_WRITE_ERROR;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//sector<sp/>integrity<sp/>check</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(memcmp(cryptBuff-&gt;<ref refid="struct_s_e_f_i_l_e___s_e_c_t_o_r_1a111b909efca8a7c55f22c621c81e4cb5" kindref="member">signature</ref>,<sp/>decryptBuff-&gt;signature,<sp/>B5_SHA256_DIGEST_SIZE)){</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(cryptBuff);</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(decryptBuff);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_SIGNATURE_MISMATCH;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__linux__)<sp/>||<sp/>defined(__APPLE__)</highlight></codeline>
<codeline lineno="650"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lseek(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref>,<sp/>(-1)*<ref refid="group___sector___defines_1gad205a758c315675de3ad9f5f1cbf962d" kindref="member">SEFILE_SECTOR_SIZE</ref>,<sp/>SEEK_CUR);</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>_WIN32</highlight></codeline>
<codeline lineno="652"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetFilePointer(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref>,<sp/>(-1)*<ref refid="group___sector___defines_1gad205a758c315675de3ad9f5f1cbf962d" kindref="member">SEFILE_SECTOR_SIZE</ref>,<sp/>NULL,<sp/>FILE_CURRENT);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="654"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//sector<sp/>empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decryptBuff-&gt;len=0;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//fill<sp/>the<sp/>sector<sp/>with<sp/>input<sp/>data<sp/>until<sp/>datain<sp/>are<sp/>over<sp/>or<sp/>the<sp/>sector<sp/>is<sp/>full</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length<sp/>=<sp/>dataIn_len<sp/>&lt;<sp/><ref refid="group___sector___defines_1ga460525481b728a7bbad706019c7f2156" kindref="member">SEFILE_LOGIC_DATA</ref>-sectOffset?<sp/>dataIn_len<sp/>:<sp/><ref refid="group___sector___defines_1ga460525481b728a7bbad706019c7f2156" kindref="member">SEFILE_LOGIC_DATA</ref>-sectOffset;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(decryptBuff-&gt;data+sectOffset,<sp/>dataIn,<sp/>length);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//update<sp/>sector<sp/>data<sp/>length<sp/>if<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(length<sp/>+<sp/>(sectOffset))<sp/>&gt;<sp/>decryptBuff-&gt;len){</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decryptBuff-&gt;len<sp/>=<sp/>length<sp/>+<sp/>sectOffset;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Padding<sp/>must<sp/>be<sp/>random!<sp/>(known<sp/>plaintext<sp/>attack)*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>padding_ptr<sp/>=<sp/>decryptBuff-&gt;data<sp/>+<sp/>decryptBuff-&gt;len;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>random_padding<sp/>=<sp/>decryptBuff-&gt;data<sp/>+<sp/><ref refid="group___sector___defines_1ga460525481b728a7bbad706019c7f2156" kindref="member">SEFILE_LOGIC_DATA</ref><sp/>-<sp/>padding_ptr;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>se3c_rand(random_padding,<sp/>padding_ptr);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//encrypt<sp/>sector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_s_efile_8c_1aeb97d3ccfe07f0f8b62c6f4c05b3d115" kindref="member">crypt_sectors</ref>(decryptBuff,<sp/>cryptBuff,<sp/><ref refid="group___sector___defines_1ga6961ed45e472749b587136d18eb74b4d" kindref="member">SEFILE_SECTOR_DATA_SIZE</ref>,<sp/><ref refid="_s_efile_8c_1a7617f01b2063fc7205c6081b88801a75" kindref="member">POS_TO_CIPHER_BLOCK</ref>(current_position),<sp/>hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a37935da2e79760bd04e32e05e5922975" kindref="member">nonce_ctr</ref>,<sp/>hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a6d2cb56237e6a99def8f9e9e54a46489" kindref="member">nonce_pbkdf2</ref>)){</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(cryptBuff);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(decryptBuff);</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_WRITE_ERROR;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>writeback<sp/>sector<sp/>into<sp/>file<sp/>phase<sp/>start<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__linux__)<sp/>||<sp/>defined<sp/>(__APPLE__)</highlight></codeline>
<codeline lineno="684"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(write(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref>,<sp/>cryptBuff,<sp/><ref refid="group___sector___defines_1gad205a758c315675de3ad9f5f1cbf962d" kindref="member">SEFILE_SECTOR_SIZE</ref>)<sp/>!=<sp/><ref refid="group___sector___defines_1gad205a758c315675de3ad9f5f1cbf962d" kindref="member">SEFILE_SECTOR_SIZE</ref>){</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(cryptBuff);</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(decryptBuff);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_WRITE_ERROR;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>_WIN32</highlight></codeline>
<codeline lineno="692"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(WriteFile(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref>,<sp/>cryptBuff,<sp/><ref refid="group___sector___defines_1gad205a758c315675de3ad9f5f1cbf962d" kindref="member">SEFILE_SECTOR_SIZE</ref>,<sp/>&amp;nBytesWritten,<sp/>NULL)<sp/>==<sp/>FALSE){</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(cryptBuff);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(decryptBuff);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_WRITE_ERROR;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nBytesWritten<sp/>!=<sp/>(DWORD)<sp/><ref refid="group___sector___defines_1gad205a758c315675de3ad9f5f1cbf962d" kindref="member">SEFILE_SECTOR_SIZE</ref>){</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(cryptBuff);</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(decryptBuff);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_WRITE_ERROR;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="706"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>writeback<sp/>sector<sp/>into<sp/>file<sp/>phase<sp/>end<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_position<sp/>+=<sp/><ref refid="group___sector___defines_1gad205a758c315675de3ad9f5f1cbf962d" kindref="member">SEFILE_SECTOR_SIZE</ref>;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataIn_len-=length;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataIn+=length;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sectOffset=(sectOffset+length)%(<ref refid="group___sector___defines_1ga460525481b728a7bbad706019c7f2156" kindref="member">SEFILE_LOGIC_DATA</ref>);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decryptBuff-&gt;len=0;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(dataIn_len&gt;0);<sp/></highlight><highlight class="comment">//cycles<sp/>unless<sp/>all<sp/>dataIn<sp/>are<sp/>processed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//move<sp/>the<sp/>pointer<sp/>inside<sp/>the<sp/>last<sp/>sector<sp/>written</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sectOffset!=0){</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__linux__)<sp/>||<sp/>defined(__APPLE__)</highlight></codeline>
<codeline lineno="718"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a507fef27d36d8ad4550276f9abf84ebb" kindref="member">log_offset</ref>=lseek(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref>,<sp/>(sectOffset<sp/>-<sp/>SEFILE_SECTOR_SIZE),<sp/>SEEK_CUR);</highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>_WIN32</highlight></codeline>
<codeline lineno="720"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a507fef27d36d8ad4550276f9abf84ebb" kindref="member">log_offset</ref><sp/>=<sp/>SetFilePointer(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref>,<sp/>(LONG)(sectOffset<sp/>-<sp/>SEFILE_SECTOR_SIZE),<sp/>NULL,<sp/>FILE_CURRENT);</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="722"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__linux__)<sp/>||<sp/>defined(__APPLE__)</highlight></codeline>
<codeline lineno="724"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a507fef27d36d8ad4550276f9abf84ebb" kindref="member">log_offset</ref>=lseek(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref>,<sp/>0,<sp/>SEEK_CUR);</highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>_WIN32</highlight></codeline>
<codeline lineno="726"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a507fef27d36d8ad4550276f9abf84ebb" kindref="member">log_offset</ref>=SetFilePointer(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref>,<sp/>0,<sp/>NULL,<sp/>FILE_CURRENT);</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="728"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/>free(cryptBuff);</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/>free(decryptBuff);</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="732"><highlight class="normal">}</highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal">uint16_t<sp/><ref refid="_s_efile_8c_1ab4468e0e71fe2626767388150952fbdf" kindref="member">secure_read</ref>(<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e" kindref="compound">SEFILE_FHANDLE</ref><sp/>*hFile,<sp/><sp/>uint8_t<sp/>*<sp/>dataOut,<sp/>uint32_t<sp/>dataOut_len,<sp/>uint32_t<sp/>*<sp/>bytesRead){</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e" kindref="compound">SEFILE_FHANDLE</ref><sp/>hTmp=NULL;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>absOffset=0,<sp/>sectOffset=0;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>dataRead=0;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_s_e_f_i_l_e___s_e_c_t_o_r" kindref="compound">SEFILE_SECTOR</ref><sp/>*cryptBuff=NULL,<sp/>*decryptBuff=NULL;</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>current_position<sp/>=<sp/><ref refid="group___sector___defines_1gad205a758c315675de3ad9f5f1cbf962d" kindref="member">SEFILE_SECTOR_SIZE</ref>;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>data_remaining<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__linux__)<sp/>||<sp/>defined(__APPLE__)</highlight></codeline>
<codeline lineno="745"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nBytesRead=0;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>_WIN32</highlight></codeline>
<codeline lineno="747"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>DWORD<sp/>nBytesRead=0;</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="749"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="_s_efile_8c_1a99543075d3f99eca1a5ca4b2d5feb016" kindref="member">check_env</ref>()<sp/>||<sp/>hFile==NULL){</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_READ_ERROR;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dataOut_len<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bytesRead<sp/>!=<sp/>NULL)<sp/>*bytesRead<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/>hTmp=*hFile;</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>if<sp/>(secure_sync(hFile)){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>SEFILE_WRITE_ERROR;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//move<sp/>the<sp/>pointer<sp/>to<sp/>the<sp/>begin<sp/>of<sp/>the<sp/>sector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__linux__)<sp/>||<sp/>defined(__APPLE__)</highlight></codeline>
<codeline lineno="763"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((absOffset=lseek(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref>,<sp/>0,<sp/>SEEK_CUR))&lt;0<sp/>||<sp/>absOffset!=hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a507fef27d36d8ad4550276f9abf84ebb" kindref="member">log_offset</ref>){</highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_READ_ERROR;</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/>current_position<sp/>=<sp/>lseek(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref>,((int32_t)(absOffset/SEFILE_SECTOR_SIZE))*SEFILE_SECTOR_SIZE,<sp/>SEEK_SET);</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>_WIN32</highlight></codeline>
<codeline lineno="769"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((absOffset=SetFilePointer(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref>,<sp/>0,<sp/>NULL,<sp/>FILE_CURRENT))&lt;0<sp/>||<sp/>absOffset!=hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a507fef27d36d8ad4550276f9abf84ebb" kindref="member">log_offset</ref>){</highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_READ_ERROR;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/>current_position<sp/>=<sp/>SetFilePointer(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref>,<sp/>((int32_t)(absOffset<sp/>/<sp/>SEFILE_SECTOR_SIZE))*SEFILE_SECTOR_SIZE,<sp/>NULL,<sp/>FILE_BEGIN);</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="775"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/>cryptBuff=(<ref refid="struct_s_e_f_i_l_e___s_e_c_t_o_r" kindref="compound">SEFILE_SECTOR</ref><sp/>*)calloc(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_e_f_i_l_e___s_e_c_t_o_r" kindref="compound">SEFILE_SECTOR</ref>));</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/>decryptBuff=(<ref refid="struct_s_e_f_i_l_e___s_e_c_t_o_r" kindref="compound">SEFILE_SECTOR</ref><sp/>*)calloc(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_e_f_i_l_e___s_e_c_t_o_r" kindref="compound">SEFILE_SECTOR</ref>));</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(cryptBuff==NULL<sp/>||<sp/>decryptBuff==NULL){</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_READ_ERROR;</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//save<sp/>the<sp/>relative<sp/>position<sp/>inside<sp/>the<sp/>sector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/>sectOffset=absOffset%<ref refid="group___sector___defines_1gad205a758c315675de3ad9f5f1cbf962d" kindref="member">SEFILE_SECTOR_SIZE</ref>;</highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//read<sp/>the<sp/>whole<sp/>sector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__linux__)<sp/>||<sp/>defined(__APPLE__)</highlight></codeline>
<codeline lineno="787"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nBytesRead=read(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref>,<sp/>cryptBuff,<sp/>SEFILE_SECTOR_SIZE);</highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>_WIN32</highlight></codeline>
<codeline lineno="789"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReadFile(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref>,<sp/>cryptBuff,<sp/>SEFILE_SECTOR_SIZE,<sp/>&amp;nBytesRead,<sp/>NULL);</highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="791"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nBytesRead&gt;0){</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_s_efile_8c_1a34d995f228e33aa28bff9af5cd8ca305" kindref="member">decrypt_sectors</ref>(cryptBuff,<sp/>decryptBuff,<sp/><ref refid="group___sector___defines_1ga6961ed45e472749b587136d18eb74b4d" kindref="member">SEFILE_SECTOR_DATA_SIZE</ref>,<sp/><ref refid="_s_efile_8c_1a7617f01b2063fc7205c6081b88801a75" kindref="member">POS_TO_CIPHER_BLOCK</ref>(current_position),<sp/>hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a37935da2e79760bd04e32e05e5922975" kindref="member">nonce_ctr</ref>,<sp/>hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a6d2cb56237e6a99def8f9e9e54a46489" kindref="member">nonce_pbkdf2</ref>)){</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(cryptBuff);</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(decryptBuff);</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_READ_ERROR;</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//sector<sp/>integrity<sp/>check</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(memcmp(cryptBuff-&gt;<ref refid="struct_s_e_f_i_l_e___s_e_c_t_o_r_1a111b909efca8a7c55f22c621c81e4cb5" kindref="member">signature</ref>,<sp/>decryptBuff-&gt;signature,<sp/>B5_SHA256_DIGEST_SIZE)){</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(cryptBuff);</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(decryptBuff);</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_SIGNATURE_MISMATCH;</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_remaining<sp/>=<sp/>(decryptBuff-&gt;len)<sp/>-<sp/>sectOffset;<sp/></highlight><highlight class="comment">//remaining<sp/>data<sp/>in<sp/>THIS<sp/>sector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length<sp/>=<sp/>dataOut_len<sp/>&lt;<sp/><ref refid="group___sector___defines_1ga460525481b728a7bbad706019c7f2156" kindref="member">SEFILE_LOGIC_DATA</ref>-sectOffset?<sp/>dataOut_len<sp/>:<sp/><ref refid="group___sector___defines_1ga460525481b728a7bbad706019c7f2156" kindref="member">SEFILE_LOGIC_DATA</ref>-sectOffset;</highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(data_remaining&lt;length)</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length<sp/>=<sp/>data_remaining;</highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(dataOut+dataRead,<sp/>decryptBuff-&gt;data+sectOffset,<sp/>length);</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_position<sp/>+=<sp/><ref refid="group___sector___defines_1gad205a758c315675de3ad9f5f1cbf962d" kindref="member">SEFILE_SECTOR_SIZE</ref>;</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataOut_len-=length;</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataRead+=length;</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sectOffset=(sectOffset+length)%<ref refid="group___sector___defines_1ga460525481b728a7bbad706019c7f2156" kindref="member">SEFILE_LOGIC_DATA</ref>;</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(dataOut_len&gt;0);<sp/></highlight><highlight class="comment">//cycles<sp/>unless<sp/>all<sp/>data<sp/>requested<sp/>are<sp/>read</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//move<sp/>the<sp/>pointer<sp/>inside<sp/>the<sp/>last<sp/>sector<sp/>read</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sectOffset!=0){</highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__linux__)<sp/>||<sp/>defined(__APPLE__)</highlight></codeline>
<codeline lineno="825"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a507fef27d36d8ad4550276f9abf84ebb" kindref="member">log_offset</ref>=lseek(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref>,<sp/>(-1)*(SEFILE_SECTOR_SIZE-sectOffset),<sp/>SEEK_CUR);</highlight><highlight class="comment">//todo<sp/>check<sp/>sectoffset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>_WIN32</highlight></codeline>
<codeline lineno="827"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a507fef27d36d8ad4550276f9abf84ebb" kindref="member">log_offset</ref>=SetFilePointer(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref>,(-1)*(SEFILE_SECTOR_SIZE-sectOffset),<sp/>NULL,<sp/>FILE_CURRENT);</highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="829"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__linux__)<sp/>||<sp/>defined(__APPLE__)</highlight></codeline>
<codeline lineno="831"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a507fef27d36d8ad4550276f9abf84ebb" kindref="member">log_offset</ref>=lseek(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref>,<sp/>0,<sp/>SEEK_CUR);</highlight><highlight class="comment">//todo<sp/>check<sp/>sectoffset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>_WIN32</highlight></codeline>
<codeline lineno="833"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a507fef27d36d8ad4550276f9abf84ebb" kindref="member">log_offset</ref>=SetFilePointer(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref>,<sp/>0,<sp/>NULL,<sp/>FILE_CURRENT);</highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="835"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/>*bytesRead=dataRead;</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/>free(cryptBuff);</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/>free(decryptBuff);</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="840"><highlight class="normal">}</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal">uint16_t<sp/><ref refid="_s_efile_8c_1a157807247b4913a73fc3b6677a61e6a3" kindref="member">secure_seek</ref>(<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e" kindref="compound">SEFILE_FHANDLE</ref><sp/>*hFile,<sp/>int32_t<sp/>offset,<sp/>int32_t<sp/>*position,<sp/>uint8_t<sp/>whence){</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>dest=0,<sp/>tmp=0,<sp/>buffer_size=0;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>overhead=0,<sp/>absOffset=0,<sp/>sectOffset=0;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>*<sp/>buffer=NULL;</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>file_length=0;</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e" kindref="compound">SEFILE_FHANDLE</ref><sp/>hTmp=NULL;</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="_s_efile_8c_1a99543075d3f99eca1a5ca4b2d5feb016" kindref="member">check_env</ref>()<sp/>||<sp/>hFile==NULL){</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_SEEK_ERROR;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/>hTmp=*hFile;</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>dest<sp/>contains<sp/>the<sp/>ABSOLUTE<sp/>final<sp/>position<sp/>(comprehensive<sp/>of<sp/>header<sp/>and<sp/>overhead</highlight></codeline>
<codeline lineno="853"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>overhead<sp/>represent<sp/>the<sp/>signature<sp/>and<sp/>length<sp/>byte<sp/>of<sp/>each<sp/>sector<sp/>&quot;jumped&quot;</highlight></codeline>
<codeline lineno="854"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>position<sp/>contains<sp/>the<sp/>position<sp/>as<sp/>the<sp/>number<sp/>of<sp/>user<sp/>data<sp/>byte<sp/>from<sp/>the<sp/>begin<sp/>of<sp/>the<sp/>file</highlight></codeline>
<codeline lineno="855"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>if<sp/>(secure_sync(hFile)){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>SEFILE_WRITE_ERROR;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__linux__)<sp/>||<sp/>defined(__APPLE__)</highlight></codeline>
<codeline lineno="860"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((absOffset=lseek(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref>,<sp/>0,<sp/>SEEK_CUR))&lt;0<sp/>||<sp/>absOffset!=hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a507fef27d36d8ad4550276f9abf84ebb" kindref="member">log_offset</ref>){</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_SEEK_ERROR;</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>_WIN32</highlight></codeline>
<codeline lineno="864"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((absOffset=SetFilePointer(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref>,<sp/>0,<sp/>NULL,<sp/>FILE_CURRENT))&lt;0<sp/>||<sp/>absOffset!=hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a507fef27d36d8ad4550276f9abf84ebb" kindref="member">log_offset</ref>){</highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_SEEK_ERROR;</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="869"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="_s_efile_8c_1a558cc4a9929c6dc846d54ec42012466c" kindref="member">get_filesize</ref>(&amp;hTmp,<sp/>&amp;file_length)){</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_SEEK_ERROR;</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/>sectOffset=absOffset%<ref refid="group___sector___defines_1gad205a758c315675de3ad9f5f1cbf962d" kindref="member">SEFILE_SECTOR_SIZE</ref>;</highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(whence==<ref refid="group___seek___defines_1gab6c0208f58dfecf3ee595f75a3156a27" kindref="member">SEFILE_BEGIN</ref>){</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(offset&lt;0){<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//backward<sp/>jump<sp/>not<sp/>allowed<sp/>from<sp/>the<sp/>file<sp/>begin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*position=-1;</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_SEEK_ERROR;</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>overhead=(offset/<ref refid="group___sector___defines_1ga460525481b728a7bbad706019c7f2156" kindref="member">SEFILE_LOGIC_DATA</ref>)*<ref refid="group___sector___defines_1ga70a387176632325441aebca4839e19fc" kindref="member">SEFILE_SECTOR_OVERHEAD</ref>;</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest=offset+overhead+<ref refid="group___sector___defines_1gad205a758c315675de3ad9f5f1cbf962d" kindref="member">SEFILE_SECTOR_SIZE</ref>;</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(whence==<ref refid="group___seek___defines_1ga96800ac1f03fb12ac3f761d37553ddc3" kindref="member">SEFILE_CURRENT</ref>){</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(offset&lt;0){<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//backward<sp/>jump</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp=(offset<sp/>+<sp/>sectOffset);</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmp&gt;=0){<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//inside<sp/>the<sp/>sector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest=absOffset+offset;</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//outside<sp/>the<sp/>current<sp/>sector<sp/>(need<sp/>to<sp/>add<sp/>overheads)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>*=<sp/>(-1);</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>overhead=((tmp)/(<ref refid="group___sector___defines_1ga460525481b728a7bbad706019c7f2156" kindref="member">SEFILE_LOGIC_DATA</ref>))*<sp/><ref refid="group___sector___defines_1ga70a387176632325441aebca4839e19fc" kindref="member">SEFILE_SECTOR_OVERHEAD</ref>;</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((tmp)%<ref refid="group___sector___defines_1ga460525481b728a7bbad706019c7f2156" kindref="member">SEFILE_LOGIC_DATA</ref>)<sp/>overhead+=<ref refid="group___sector___defines_1ga70a387176632325441aebca4839e19fc" kindref="member">SEFILE_SECTOR_OVERHEAD</ref>;</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest=absOffset<sp/>+<sp/>offset<sp/>-<sp/>overhead;</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//forward<sp/>jump</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>overhead=((offset+sectOffset)/<ref refid="group___sector___defines_1ga460525481b728a7bbad706019c7f2156" kindref="member">SEFILE_LOGIC_DATA</ref>)*<ref refid="group___sector___defines_1ga70a387176632325441aebca4839e19fc" kindref="member">SEFILE_SECTOR_OVERHEAD</ref>;</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest=absOffset+overhead+offset;</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="899"><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(whence==<ref refid="group___seek___defines_1gac99113dc9b1f7710c8f451ce0b76c925" kindref="member">SEFILE_END</ref>){</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sectOffset=(file_length%<ref refid="group___sector___defines_1ga460525481b728a7bbad706019c7f2156" kindref="member">SEFILE_LOGIC_DATA</ref>);</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>absOffset=((file_length/<ref refid="group___sector___defines_1ga460525481b728a7bbad706019c7f2156" kindref="member">SEFILE_LOGIC_DATA</ref>)+1)*SEFILE_SECTOR_SIZE+sectOffset;</highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(offset&lt;0){<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//backward<sp/>jump</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp=(offset<sp/>+<sp/>sectOffset);</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmp&gt;=0){<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//inside<sp/>the<sp/>sector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest=absOffset+offset;</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//outside<sp/>the<sp/>current<sp/>sector<sp/>(need<sp/>to<sp/>add<sp/>overheads)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>*=<sp/>(-1);</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>overhead=((tmp)/(<ref refid="group___sector___defines_1ga460525481b728a7bbad706019c7f2156" kindref="member">SEFILE_LOGIC_DATA</ref>))*<sp/><ref refid="group___sector___defines_1ga70a387176632325441aebca4839e19fc" kindref="member">SEFILE_SECTOR_OVERHEAD</ref>;</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((tmp)%<ref refid="group___sector___defines_1ga460525481b728a7bbad706019c7f2156" kindref="member">SEFILE_LOGIC_DATA</ref>)<sp/>overhead+=<ref refid="group___sector___defines_1ga70a387176632325441aebca4839e19fc" kindref="member">SEFILE_SECTOR_OVERHEAD</ref>;</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest=absOffset<sp/>+<sp/>offset<sp/>-<sp/>overhead;</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//forward<sp/>jump</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>overhead=((offset+sectOffset)/<ref refid="group___sector___defines_1ga460525481b728a7bbad706019c7f2156" kindref="member">SEFILE_LOGIC_DATA</ref>)*<ref refid="group___sector___defines_1ga70a387176632325441aebca4839e19fc" kindref="member">SEFILE_SECTOR_OVERHEAD</ref>;</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest=absOffset+offset+overhead;</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dest&lt;SEFILE_SECTOR_SIZE){<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//pointer<sp/>inside<sp/>the<sp/>header<sp/>sector<sp/>is<sp/>not<sp/>allowed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*position=-1;</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_ILLEGAL_SEEK;</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="924"><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/>*position=(dest%<ref refid="group___sector___defines_1gad205a758c315675de3ad9f5f1cbf962d" kindref="member">SEFILE_SECTOR_SIZE</ref>)+(((dest/SEFILE_SECTOR_SIZE)-1)*<ref refid="group___sector___defines_1ga460525481b728a7bbad706019c7f2156" kindref="member">SEFILE_LOGIC_DATA</ref>);</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer_size=*position-file_length;</highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(buffer_size&gt;0){<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>destination<sp/>exceed<sp/>the<sp/>end<sp/>of<sp/>the<sp/>file,<sp/>empty<sp/>sectors<sp/>are<sp/>inserted<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>file<sp/>to<sp/>keep<sp/>the<sp/>file<sp/>consistency</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer=calloc(buffer_size,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint8_t));</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(buffer==NULL){</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_SEEK_ERROR;</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((file_length%SEFILE_LOGIC_DATA)){</highlight></codeline>
<codeline lineno="934"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__linux__)<sp/>||<sp/>defined(__APPLE__)</highlight></codeline>
<codeline lineno="935"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a507fef27d36d8ad4550276f9abf84ebb" kindref="member">log_offset</ref>=lseek(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref>,<sp/>((file_length%SEFILE_LOGIC_DATA)-SEFILE_SECTOR_SIZE),<sp/>SEEK_END);</highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>_WIN32</highlight></codeline>
<codeline lineno="937"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a507fef27d36d8ad4550276f9abf84ebb" kindref="member">log_offset</ref>=SetFilePointer(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref>,<sp/>((file_length%SEFILE_LOGIC_DATA)-SEFILE_SECTOR_SIZE),<sp/>NULL,<sp/>FILE_END);</highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="939"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="_s_efile_8c_1acb652f6362fd5635c4aaa8c5e67c7f1b" kindref="member">secure_write</ref>(&amp;hTmp,<sp/>buffer,<sp/>buffer_size)){</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(buffer);</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_SEEK_ERROR;</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(buffer);</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__linux__)<sp/>||<sp/>defined(__APPLE__)</highlight></codeline>
<codeline lineno="948"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp=lseek(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref>,<sp/>(off_t)<sp/>dest,<sp/>SEEK_SET);</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((<sp/>tmp<sp/>==<sp/>-1)){</highlight></codeline>
<codeline lineno="951"><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_SEEK_ERROR;</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>_WIN32</highlight></codeline>
<codeline lineno="956"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>SetFilePointer(<sp/>hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref>,<sp/>dest,<sp/>NULL,<sp/>FILE_BEGIN);</highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>tmp<sp/>==<sp/>INVALID_SET_FILE_POINTER){</highlight></codeline>
<codeline lineno="960"><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_SEEK_ERROR;</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="964"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a507fef27d36d8ad4550276f9abf84ebb" kindref="member">log_offset</ref>=tmp;</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="969"><highlight class="normal">}</highlight></codeline>
<codeline lineno="970"><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal">uint16_t<sp/><ref refid="_s_efile_8c_1ae51272c2c3b72a01bd7aa98f25fb5245" kindref="member">secure_truncate</ref>(<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e" kindref="compound">SEFILE_FHANDLE</ref><sp/>*hFile,<sp/>uint32_t<sp/>size){</highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e" kindref="compound">SEFILE_FHANDLE</ref><sp/>hTmp<sp/>=<sp/>*hFile;</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>fPosition<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rOffset<sp/>=<sp/>0,<sp/>nSector<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//New<sp/>Relative<sp/>offset<sp/>&amp;<sp/>new<sp/>number<sp/>of<sp/>sectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>*buffer<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>aSize<sp/>=<sp/>0,<sp/>bytesRead<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="978"><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>if<sp/>(secure_sync(hFile)){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>SEFILE_WRITE_ERROR;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="_s_efile_8c_1a558cc4a9929c6dc846d54ec42012466c" kindref="member">get_filesize</ref>(hFile,<sp/>&amp;aSize)){</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_TRUNCATE_ERROR;</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="986"><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(aSize<sp/>&lt;<sp/>size){<sp/></highlight><highlight class="comment">//File<sp/>should<sp/>be<sp/>enlarged</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_s_efile_8c_1a157807247b4913a73fc3b6677a61e6a3" kindref="member">secure_seek</ref>(hFile,<sp/>(size-aSize),<sp/>(int32_t*)&amp;fPosition,<sp/><ref refid="group___seek___defines_1gac99113dc9b1f7710c8f451ce0b76c925" kindref="member">SEFILE_END</ref>)<sp/>||<sp/>fPosition<sp/>!=<sp/>size+aSize){</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_TRUNCATE_ERROR;</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rOffset<sp/>=<sp/>size<sp/>%<sp/><ref refid="group___sector___defines_1ga460525481b728a7bbad706019c7f2156" kindref="member">SEFILE_LOGIC_DATA</ref>;<sp/></highlight><highlight class="comment">//Relative<sp/>offset<sp/>inside<sp/>a<sp/>sector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nSector<sp/>=<sp/>(size<sp/>/<sp/><ref refid="group___sector___defines_1ga460525481b728a7bbad706019c7f2156" kindref="member">SEFILE_LOGIC_DATA</ref>)<sp/>+<sp/>1;<sp/></highlight><highlight class="comment">//Number<sp/>of<sp/>sectors<sp/>in<sp/>a<sp/>file<sp/>(including<sp/>header)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__linux__)<sp/>||<sp/>defined(__APPLE__)</highlight></codeline>
<codeline lineno="997"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a507fef27d36d8ad4550276f9abf84ebb" kindref="member">log_offset</ref><sp/>=<sp/>lseek(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref>,<sp/>nSector*SEFILE_SECTOR_SIZE,<sp/>SEEK_SET);</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a507fef27d36d8ad4550276f9abf84ebb" kindref="member">log_offset</ref><sp/>&lt;<sp/>0){</highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_TRUNCATE_ERROR;</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>_WIN32</highlight></codeline>
<codeline lineno="1003"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a507fef27d36d8ad4550276f9abf84ebb" kindref="member">log_offset</ref><sp/>=<sp/>SetFilePointer(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref>,<sp/>nSector*SEFILE_SECTOR_SIZE,<sp/>NULL,<sp/>FILE_BEGIN);</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a507fef27d36d8ad4550276f9abf84ebb" kindref="member">log_offset</ref><sp/>==<sp/>INVALID_SET_FILE_POINTER){</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_TRUNCATE_ERROR;</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1009"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer=(uint8_t<sp/>*)malloc(rOffset*(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint8_t)));</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(buffer<sp/>==<sp/>NULL){</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_TRUNCATE_ERROR;</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="_s_efile_8c_1ab4468e0e71fe2626767388150952fbdf" kindref="member">secure_read</ref>(&amp;hTmp,<sp/>buffer,<sp/>rOffset,<sp/>&amp;bytesRead)){</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_TRUNCATE_ERROR;</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__linux__)<sp/>||<sp/>defined(__APPLE__)</highlight></codeline>
<codeline lineno="1019"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a507fef27d36d8ad4550276f9abf84ebb" kindref="member">log_offset</ref><sp/>=<sp/>lseek(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref>,<sp/>nSector*SEFILE_SECTOR_SIZE,<sp/>SEEK_SET);</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a507fef27d36d8ad4550276f9abf84ebb" kindref="member">log_offset</ref><sp/>&lt;<sp/>0){</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_TRUNCATE_ERROR;</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ftruncate(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref>,<sp/>nSector*SEFILE_SECTOR_SIZE)){<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//truncate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_TRUNCATE_ERROR;</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>_WIN32</highlight></codeline>
<codeline lineno="1029"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a507fef27d36d8ad4550276f9abf84ebb" kindref="member">log_offset</ref><sp/>=<sp/>SetFilePointer(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref>,<sp/>nSector*SEFILE_SECTOR_SIZE,<sp/>NULL,<sp/>FILE_BEGIN);</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a507fef27d36d8ad4550276f9abf84ebb" kindref="member">log_offset</ref><sp/>==<sp/>INVALID_SET_FILE_POINTER){</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"></highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_TRUNCATE_ERROR;</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!SetEndOfFile(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref>)){<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//truncate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"></highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_TRUNCATE_ERROR;</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1039"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="_s_efile_8c_1acb652f6362fd5635c4aaa8c5e67c7f1b" kindref="member">secure_write</ref>(&amp;hTmp,<sp/>buffer,<sp/>rOffset)){</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_TRUNCATE_ERROR;</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(buffer);</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1046"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="normal">uint16_t<sp/><ref refid="_s_efile_8c_1a54f66c38e6025c8e57ceda5c43d51c5c" kindref="member">secure_close</ref>(<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e" kindref="compound">SEFILE_FHANDLE</ref><sp/>*hFile){</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e" kindref="compound">SEFILE_FHANDLE</ref><sp/>hTmp=*hFile;</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="_s_efile_8c_1a99543075d3f99eca1a5ca4b2d5feb016" kindref="member">check_env</ref>()){</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_CLOSE_HANDLE_ERR;</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>if<sp/>(secure_sync(hFile)){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>SEFILE_WRITE_ERROR;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__linux__)<sp/>||<sp/>defined(__APPLE__)</highlight></codeline>
<codeline lineno="1057"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hFile!=NULL){</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(close(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref>)<sp/>==<sp/>-1<sp/>){</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"></highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(hTmp);</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_CLOSE_HANDLE_ERR;</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(hTmp);</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"></highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_CLOSE_HANDLE_ERR;</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>_WIN32</highlight></codeline>
<codeline lineno="1069"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hFile!=NULL){</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>CloseHandle(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref>)<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"></highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(hTmp);</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_CLOSE_HANDLE_ERR;</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(hTmp);</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_CLOSE_HANDLE_ERR;</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1081"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1083"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal">uint16_t<sp/><ref refid="_s_efile_8c_1a6b2a9a6b81381a4ce20421831103b8b3" kindref="member">secure_ls</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*list,<sp/>uint32_t<sp/>*<sp/>list_length){</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>commandError=0;</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>bufferEnc[<ref refid="_s_efile_8h_1aa4e5ca47d52a8be522912705c27e0d1c" kindref="member">MAX_PATHNAME</ref>],<sp/>bufferDec[<ref refid="_s_efile_8h_1aa4e5ca47d52a8be522912705c27e0d1c" kindref="member">MAX_PATHNAME</ref>],<sp/>*pFile=NULL;</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>encoded_length=0;</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>cwd[<ref refid="_s_efile_8h_1aa4e5ca47d52a8be522912705c27e0d1c" kindref="member">MAX_PATHNAME</ref>];</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32</highlight></codeline>
<codeline lineno="1091"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>HANDLE<sp/>hDir;</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/>WIN32_FIND_DATA<sp/>dDir;</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1094"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>memset(bufferEnc,<sp/>0,<sp/><ref refid="_s_efile_8h_1aa4e5ca47d52a8be522912705c27e0d1c" kindref="member">MAX_PATHNAME</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(bufferDec,<sp/>0,<sp/><ref refid="_s_efile_8h_1aa4e5ca47d52a8be522912705c27e0d1c" kindref="member">MAX_PATHNAME</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(cwd,<sp/>0,<sp/><ref refid="_s_efile_8h_1aa4e5ca47d52a8be522912705c27e0d1c" kindref="member">MAX_PATHNAME</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="_s_efile_8c_1a99543075d3f99eca1a5ca4b2d5feb016" kindref="member">check_env</ref>()<sp/>||<sp/>list<sp/>==<sp/>NULL){</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_LS_ERROR;</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/>*list_length=0;</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__linux__)<sp/>||<sp/>defined(__APPLE__)</highlight></codeline>
<codeline lineno="1102"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>DIR<sp/>*hDir=NULL;</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">dirent<sp/>*dDir;</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/>getcwd(cwd,<sp/><ref refid="_s_efile_8h_1aa4e5ca47d52a8be522912705c27e0d1c" kindref="member">MAX_PATHNAME</ref>);</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/>chdir(path);</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/>pFile=list;</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/>hDir=opendir(</highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">((dDir=readdir(hDir))!=NULL){</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((!strcmp(dDir-&gt;d_name,</highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">))||(!strcmp(dDir-&gt;d_name,</highlight><highlight class="stringliteral">&quot;..&quot;</highlight><highlight class="normal">))){</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dDir-&gt;d_type==DT_DIR){</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="_s_efile_8c_1a95ea3f63b783aca7223b6b885cab1a5e" kindref="member">valid_name</ref>(dDir-&gt;d_name))<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>commandError=<ref refid="_s_efile_8c_1ac74803a54c2cb05ea329acdeef7f7856" kindref="member">decrypt_dirname</ref>(dDir-&gt;d_name,<sp/>bufferDec);</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(commandError==SEFILE_USER_NOT_ALLOWED){</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(commandError==0){</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(pFile,<sp/>bufferDec);</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pFile+=(1+strlen(bufferDec));</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*list_length+=(1+strlen(bufferDec));</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(bufferEnc,<sp/>0,<sp/><ref refid="_s_efile_8h_1aa4e5ca47d52a8be522912705c27e0d1c" kindref="member">MAX_PATHNAME</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(bufferDec,<sp/>0,<sp/><ref refid="_s_efile_8h_1aa4e5ca47d52a8be522912705c27e0d1c" kindref="member">MAX_PATHNAME</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_LS_ERROR;</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dDir-&gt;d_type==DT_REG){</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="_s_efile_8c_1a95ea3f63b783aca7223b6b885cab1a5e" kindref="member">valid_name</ref>(dDir-&gt;d_name)<sp/>||<sp/><ref refid="_s_efile_8c_1aeda597741a9b6bf76b5258f6c996e678" kindref="member">decrypt_filename</ref>(dDir-&gt;d_name,<sp/>bufferDec)){</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="_s_efile_8c_1ab134ec0c74652e6c2ecac3096d0bfd7f" kindref="member">crypto_filename</ref>(bufferDec,<sp/>bufferEnc,<sp/>&amp;encoded_length)){</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_LS_ERROR;</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!strncmp(bufferEnc,<sp/>dDir-&gt;d_name,encoded_length)){</highlight><highlight class="comment">//user<sp/>allowed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(pFile,<sp/>bufferDec);</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pFile+=(1+strlen(bufferDec));</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*list_length+=(1+strlen(bufferDec));</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(bufferEnc,<sp/>0,<sp/><ref refid="_s_efile_8h_1aa4e5ca47d52a8be522912705c27e0d1c" kindref="member">MAX_PATHNAME</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(bufferDec,<sp/>0,<sp/><ref refid="_s_efile_8h_1aa4e5ca47d52a8be522912705c27e0d1c" kindref="member">MAX_PATHNAME</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/>closedir(hDir);</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/>chdir(cwd);</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>_WIN32</highlight></codeline>
<codeline lineno="1145"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/>GetCurrentDirectory(<ref refid="_s_efile_8h_1aa4e5ca47d52a8be522912705c27e0d1c" kindref="member">MAX_PATHNAME</ref>,<sp/>cwd);</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/>SetCurrentDirectory(path);</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/>pFile=list;</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"></highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/>hDir=FindFirstFile(</highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal">,<sp/>&amp;dDir);</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((!strcmp(dDir.cFileName,</highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">))||(!strcmp(dDir.cFileName,</highlight><highlight class="stringliteral">&quot;..&quot;</highlight><highlight class="normal">))){</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(dDir.dwFileAttributes==FILE_ATTRIBUTE_DIRECTORY){</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="_s_efile_8c_1a95ea3f63b783aca7223b6b885cab1a5e" kindref="member">valid_name</ref>(dDir.cFileName))<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>commandError=<ref refid="_s_efile_8c_1ac74803a54c2cb05ea329acdeef7f7856" kindref="member">decrypt_dirname</ref>(dDir.cFileName,<sp/>bufferDec);</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(commandError==SEFILE_USER_NOT_ALLOWED){</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(commandError==0){</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(pFile,<sp/>bufferDec);</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pFile+=(1+strlen(bufferDec));</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*list_length+=(1+strlen(bufferDec));</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_LS_ERROR;</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="_s_efile_8c_1a95ea3f63b783aca7223b6b885cab1a5e" kindref="member">valid_name</ref>(dDir.cFileName)<sp/>||<sp/><ref refid="_s_efile_8c_1aeda597741a9b6bf76b5258f6c996e678" kindref="member">decrypt_filename</ref>(dDir.cFileName,<sp/>bufferDec)){</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="_s_efile_8c_1ab134ec0c74652e6c2ecac3096d0bfd7f" kindref="member">crypto_filename</ref>(bufferDec,<sp/>bufferEnc,<sp/>&amp;encoded_length)){</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_LS_ERROR;</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!strncmp(bufferEnc,<sp/>dDir.cFileName,encoded_length)){</highlight><highlight class="comment">//user<sp/>allowed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(pFile,<sp/>bufferDec);</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pFile+=(1+strlen(bufferDec));</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*list_length+=(1+strlen(bufferDec));</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(FindNextFile(hDir,<sp/>&amp;dDir));</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/>FindClose(hDir);</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/>SetCurrentDirectory(cwd);</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1186"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1187"><highlight class="normal"></highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"></highlight></codeline>
<codeline lineno="1191"><highlight class="normal">uint16_t<sp/><ref refid="_s_efile_8c_1a987cae1899d44e2c86de985b6145d41b" kindref="member">secure_getfilesize</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path,<sp/>uint32_t<sp/>*<sp/>position){</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>ret<sp/>=<sp/>SE3_OK;</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e" kindref="compound">SEFILE_FHANDLE</ref><sp/>hFile=NULL;</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"></highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="_s_efile_8c_1a99543075d3f99eca1a5ca4b2d5feb016" kindref="member">check_env</ref>()){</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_FILESIZE_ERROR;</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"></highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_s_efile_8c_1ae99f8ccb396cbb5685d9e16bb3dbbe98" kindref="member">secure_open</ref>(path,<sp/>&amp;hFile,<sp/><ref refid="group___mode___defines_1ga54f7b08eaa281b5cc96f9b38f8cec756" kindref="member">SEFILE_READ</ref>,<sp/><ref refid="group___access___defines_1ga3912e29a65705156f8d2e7ffe7fe80c7" kindref="member">SEFILE_OPEN</ref><sp/>)){</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_FILESIZE_ERROR;</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="_s_efile_8c_1a558cc4a9929c6dc846d54ec42012466c" kindref="member">get_filesize</ref>(&amp;hFile,<sp/>position);</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"></highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="_s_efile_8c_1a54f66c38e6025c8e57ceda5c43d51c5c" kindref="member">secure_close</ref>(&amp;hFile)){</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_FILESIZE_ERROR;</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1209"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal">uint16_t<sp/><ref refid="_s_efile_8c_1afc10a53fb05941bb327447cbef30b963" kindref="member">secure_mkdir</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path){</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>encDirname[<ref refid="_s_efile_8h_1aa4e5ca47d52a8be522912705c27e0d1c" kindref="member">MAX_PATHNAME</ref>];</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32</highlight></codeline>
<codeline lineno="1214"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>DWORD<sp/>errValue<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="1216"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errValue<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1218"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>memset(encDirname,<sp/>0,<sp/><ref refid="_s_efile_8h_1aa4e5ca47d52a8be522912705c27e0d1c" kindref="member">MAX_PATHNAME</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="_s_efile_8c_1a99543075d3f99eca1a5ca4b2d5feb016" kindref="member">check_env</ref>()){</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_MKDIR_ERROR;</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"></highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="_s_efile_8c_1a700fedc67d30512447684ec1eff14bab" kindref="member">crypt_dirname</ref>(path,<sp/>encDirname)){</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_MKDIR_ERROR;</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__linux__)||defined(__APPLE__)</highlight></codeline>
<codeline lineno="1227"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mkdir(encDirname,<sp/>S_IRWXU<sp/>|<sp/>S_IRWXG)){</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((errValue<sp/>=<sp/>errno)<sp/>==<sp/>EEXIST){</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_MKDIR_ERROR;</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>_WIN32</highlight></codeline>
<codeline lineno="1234"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!CreateDirectory(encDirname,<sp/>NULL)){</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((errValue<sp/>=<sp/>GetLastError())<sp/>==<sp/>ERROR_ALREADY_EXISTS){</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_MKDIR_ERROR;</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1241"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"></highlight></codeline>
<codeline lineno="1244"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_s_efile_8c_1a533853754430e7d85524fd5641a7bf3b" kindref="member">get_filename</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file_name){</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"></highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*f_name;</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/>f_name=strrchr(path,<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(f_name==NULL){</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f_name=strrchr(path,<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(f_name==NULL){</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(file_name,<sp/>path);</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(file_name,<sp/>f_name+1);</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(file_name,<sp/>f_name+1);</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1260"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_s_efile_8c_1af387c94c97d3d3df73d0ddc6da891ad2" kindref="member">get_path</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*full_path,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path){</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"></highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p_name;</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"></highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/>p_name=strrchr(full_path,<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(p_name==NULL){</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_name=strrchr(full_path,<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(p_name==NULL)<sp/>{</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path[0]=</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(path,<sp/>full_path,<sp/>p_name-full_path+1);</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path[p_name-full_path+1]=</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(path,<sp/>full_path,<sp/>p_name-full_path+1);</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path[p_name-full_path+1]=</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1280"><highlight class="normal">uint16_t<sp/><ref refid="_s_efile_8c_1ab134ec0c74652e6c2ecac3096d0bfd7f" kindref="member">crypto_filename</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*enc_name,<sp/>uint16_t<sp/>*encoded_length){</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>commandError=0;</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>orig_filename[<ref refid="_s_efile_8h_1aa4e5ca47d52a8be522912705c27e0d1c" kindref="member">MAX_PATHNAME</ref>];</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>bufferName[<ref refid="_s_efile_8h_1aa4e5ca47d52a8be522912705c27e0d1c" kindref="member">MAX_PATHNAME</ref>],<sp/>SHAName[<ref refid="_s_efile_8h_1aa4e5ca47d52a8be522912705c27e0d1c" kindref="member">MAX_PATHNAME</ref>];</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>finalPath[<ref refid="_s_efile_8h_1aa4e5ca47d52a8be522912705c27e0d1c" kindref="member">MAX_PATHNAME</ref>];</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>lorig=0,<sp/>i=0;</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/>B5_tSha256Ctx<sp/>ctx;</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>finalLen<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(orig_filename,<sp/>0,<sp/><ref refid="_s_efile_8h_1aa4e5ca47d52a8be522912705c27e0d1c" kindref="member">MAX_PATHNAME</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(bufferName,<sp/>0,<sp/><ref refid="_s_efile_8h_1aa4e5ca47d52a8be522912705c27e0d1c" kindref="member">MAX_PATHNAME</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(SHAName,<sp/>0,<sp/><ref refid="_s_efile_8h_1aa4e5ca47d52a8be522912705c27e0d1c" kindref="member">MAX_PATHNAME</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(finalPath,<sp/>0,<sp/><ref refid="_s_efile_8h_1aa4e5ca47d52a8be522912705c27e0d1c" kindref="member">MAX_PATHNAME</ref>*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_efile_8c_1a533853754430e7d85524fd5641a7bf3b" kindref="member">get_filename</ref>(path,<sp/>orig_filename);</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"></highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_efile_8c_1af387c94c97d3d3df73d0ddc6da891ad2" kindref="member">get_path</ref>(path,<sp/>finalPath);</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/>lorig=strlen(orig_filename);</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((commandError<sp/>=<sp/>B5_Sha256_Init(&amp;ctx))){</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>commandError;</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((commandError<sp/>=<sp/>B5_Sha256_Update(&amp;ctx,<sp/>(uint8_t<sp/>*)orig_filename,<sp/>lorig*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint8_t)))){</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"></highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>commandError;</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((commandError<sp/>=<sp/>B5_Sha256_Finit(&amp;ctx,<sp/>(uint8_t<sp/>*)bufferName))){</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"></highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>commandError;</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strlen(finalPath)&gt;<ref refid="_s_efile_8h_1aa4e5ca47d52a8be522912705c27e0d1c" kindref="member">MAX_PATHNAME</ref>-B5_SHA256_DIGEST_SIZE){</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"></highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_FILENAME_ENC_ERROR;</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i&lt;B5_SHA256_DIGEST_SIZE;<sp/>i++){</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(&amp;(SHAName[i*2]),<sp/></highlight><highlight class="stringliteral">&quot;%02x&quot;</highlight><highlight class="normal">,<sp/>(uint8_t)bufferName[i]);</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/>finalLen=strlen(finalPath);</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"></highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(encoded_length<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*encoded_length=i*2+finalLen;</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"></highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(finalPath[0])</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(enc_name,<sp/>finalPath,<sp/>finalLen);</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(enc_name+finalLen,<sp/>SHAName,<sp/>i*2);</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1326"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"></highlight></codeline>
<codeline lineno="1328"><highlight class="normal">uint16_t<sp/><ref refid="_s_efile_8c_1a99543075d3f99eca1a5ca4b2d5feb016" kindref="member">check_env</ref>(){</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="group___environmental_vars_1gad3215e338581ce95b76b3b84b928d744" kindref="member">EnvSession</ref><sp/>==<sp/>NULL<sp/>||<sp/><ref refid="group___environmental_vars_1ga7a8b4d6945f6a13f8683427dc7ab7a44" kindref="member">EnvKeyID</ref><sp/>==<sp/>NULL<sp/>||<sp/><ref refid="group___environmental_vars_1ga328037c714e95e56186f9d5f0842adea" kindref="member">EnvCrypto</ref><sp/>==<sp/>NULL<sp/>){</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_ENV_NOT_SET;</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1333"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"></highlight></codeline>
<codeline lineno="1335"><highlight class="normal">uint16_t<sp/><ref refid="_s_efile_8c_1a84651b6b79095cbb509ac22824595e4d" kindref="member">crypt_header</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buff1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buff2,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>datain_len,<sp/>uint16_t<sp/>direction){</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MAX_DATA_IN<sp/>=<sp/>SE3_CRYPTO_MAX_DATAIN<sp/>-<sp/>(SE3_CMD1_CRYPTO_UPDATE_REQ_OFF_DATA<sp/>+<sp/><ref refid="group___sector___defines_1ga9344350dc20df5bbdc5693775c54afcb" kindref="member">SEFILE_BLOCK_SIZE</ref>)<sp/>-<sp/>SEFILE_NONCE_LEN</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t*<sp/>sp<sp/>=<sp/>(uint8_t*)buff1,<sp/>*rp<sp/>=<sp/>(uint8_t*)buff2;</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>error<sp/>=<sp/>SE3_OK;</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>curr_len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>enc_sess_id<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>curr_chunk<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>flag_reset_auth<sp/>=<sp/>datain_len<sp/>&lt;<sp/>MAX_DATA_IN<sp/>?<sp/>SE3_CRYPTO_FLAG_AUTH<sp/>:<sp/>SE3_CRYPTO_FLAG_AUTH;</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>*nonce_pbkdf2<sp/>=<sp/>buff1;</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(datain_len<sp/>&lt;<sp/>0<sp/>||<sp/>buff2<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(SE3_ERR_PARAMS);</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"></highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/>datain_len<sp/>-=<sp/>SEFILE_NONCE_LEN;</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/>curr_chunk<sp/>=<sp/>datain_len<sp/>&lt;<sp/>MAX_DATA_IN<sp/>?<sp/>datain_len<sp/>:<sp/>MAX_DATA_IN;</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"></highlight></codeline>
<codeline lineno="1352"><highlight class="normal"></highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/>L1_crypto_init(<ref refid="group___environmental_vars_1gad3215e338581ce95b76b3b84b928d744" kindref="member">EnvSession</ref>,<sp/>*<ref refid="group___environmental_vars_1ga328037c714e95e56186f9d5f0842adea" kindref="member">EnvCrypto</ref>,<sp/>SE3_FEEDBACK_ECB<sp/>|<sp/>direction,<sp/>*<ref refid="group___environmental_vars_1ga7a8b4d6945f6a13f8683427dc7ab7a44" kindref="member">EnvKeyID</ref>,<sp/>&amp;enc_sess_id);</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error<sp/>!=<sp/>SE3_OK)<sp/>{</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error;</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/>L1_crypto_update(<ref refid="group___environmental_vars_1gad3215e338581ce95b76b3b84b928d744" kindref="member">EnvSession</ref>,<sp/>enc_sess_id,<sp/>SE3_CRYPTO_FLAG_SETNONCE,<sp/>SEFILE_NONCE_LEN,<sp/>nonce_pbkdf2,<sp/>0,<sp/>NULL,<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error<sp/>!=<sp/>SE3_OK)<sp/>{</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error;</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(datain_len<sp/>-<sp/>curr_chunk)</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>L1_crypto_update(<ref refid="group___environmental_vars_1gad3215e338581ce95b76b3b84b928d744" kindref="member">EnvSession</ref>,<sp/>enc_sess_id,<sp/>SE3_FEEDBACK_ECB<sp/>|<sp/>direction,<sp/>0,<sp/>NULL,<sp/>curr_chunk,<sp/>sp<sp/>+<sp/>SEFILE_NONCE_LEN,<sp/>&amp;curr_len,<sp/>rp<sp/>+<sp/>SEFILE_NONCE_LEN);</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>L1_crypto_update(<ref refid="group___environmental_vars_1gad3215e338581ce95b76b3b84b928d744" kindref="member">EnvSession</ref>,<sp/>enc_sess_id,<sp/>flag_reset_auth<sp/>|<sp/>SE3_CRYPTO_FLAG_FINIT,<sp/>0,<sp/>NULL,<sp/>curr_chunk,<sp/>sp<sp/>+<sp/>SEFILE_NONCE_LEN,<sp/>&amp;curr_len,<sp/>rp<sp/>+<sp/>SEFILE_NONCE_LEN);</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"></highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(error)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>datain_len<sp/>-=<sp/>curr_chunk;</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sp<sp/>+=<sp/>curr_chunk;</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rp<sp/>+=<sp/>curr_chunk;</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curr_chunk<sp/>=<sp/>datain_len<sp/>&lt;<sp/>MAX_DATA_IN<sp/>?<sp/>datain_len<sp/>:<sp/>MAX_DATA_IN;</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(datain_len<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"></highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(buff2,<sp/>buff1,<sp/>SEFILE_NONCE_LEN);</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"></highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(error);</highlight></codeline>
<codeline lineno="1377"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>compute_blk_offset(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>current_offset,<sp/>uint8_t*<sp/>nonce){</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>i<sp/>=<sp/>15,<sp/>old_v;</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>cb;</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>old_v<sp/>=<sp/>nonce[i];</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nonce[i]<sp/>+=<sp/>(uint8_t)(current_offset<sp/>&amp;<sp/>0xFF);</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_offset<sp/>=<sp/>(current_offset&gt;&gt;8);</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cb<sp/>=<sp/>nonce[i]<sp/>&lt;<sp/>old_v;</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cb)<sp/>nonce[i<sp/>-<sp/>1]++;</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i--<sp/>&amp;&amp;<sp/>current_offset<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="1388"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1389"><highlight class="normal">uint16_t<sp/><ref refid="_s_efile_8c_1aeb97d3ccfe07f0f8b62c6f4c05b3d115" kindref="member">crypt_sectors</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buff_decrypt,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buff_crypt,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>datain_len,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>current_offset,<sp/>uint8_t*<sp/>nonce_ctr,<sp/>uint8_t*<sp/>nonce_pbkdf2){</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"></highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MAX_DATA_IN<sp/>=<sp/>SE3_CRYPTO_MAX_DATAIN<sp/>-<sp/>(SE3_CMD1_CRYPTO_UPDATE_REQ_OFF_DATA<sp/>+<sp/><ref refid="group___sector___defines_1ga9344350dc20df5bbdc5693775c54afcb" kindref="member">SEFILE_BLOCK_SIZE</ref>)<sp/>-<sp/>B5_SHA256_DIGEST_SIZE</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t*<sp/>sp<sp/>=<sp/>buff_decrypt,<sp/>*rp<sp/>=<sp/>buff_crypt;</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>error<sp/>=<sp/>SE3_OK;</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>curr_len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>enc_sess_id<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>curr_chunk<sp/>=<sp/>datain_len<sp/>&lt;<sp/>MAX_DATA_IN<sp/>?<sp/>datain_len<sp/>:<sp/>MAX_DATA_IN;</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>nonce_local[16];</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>flag_reset_auth<sp/>=<sp/>datain_len<sp/>&lt;<sp/>MAX_DATA_IN<sp/>?<sp/>SE3_CRYPTO_FLAG_RESET<sp/>|<sp/>SE3_CRYPTO_FLAG_AUTH<sp/>:<sp/>SE3_CRYPTO_FLAG_AUTH;</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"></highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(datain_len<sp/>&lt;<sp/>0<sp/>||<sp/>buff_crypt<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(SE3_ERR_PARAMS);</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"></highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/>L1_crypto_init(<ref refid="group___environmental_vars_1gad3215e338581ce95b76b3b84b928d744" kindref="member">EnvSession</ref>,<sp/>*<ref refid="group___environmental_vars_1ga328037c714e95e56186f9d5f0842adea" kindref="member">EnvCrypto</ref>,<sp/>SE3_FEEDBACK_CTR<sp/>|<sp/>SE3_DIR_ENCRYPT,<sp/>*<ref refid="group___environmental_vars_1ga7a8b4d6945f6a13f8683427dc7ab7a44" kindref="member">EnvKeyID</ref>,<sp/>&amp;enc_sess_id);</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error<sp/>!=<sp/>SE3_OK)<sp/>{</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error;</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/>L1_crypto_update(<ref refid="group___environmental_vars_1gad3215e338581ce95b76b3b84b928d744" kindref="member">EnvSession</ref>,<sp/>enc_sess_id,<sp/>SE3_CRYPTO_FLAG_SETNONCE,<sp/>SEFILE_NONCE_LEN,<sp/>nonce_pbkdf2,<sp/>0,<sp/>NULL,<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error<sp/>!=<sp/>SE3_OK)<sp/>{</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error;</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(nonce_local,<sp/>nonce_ctr,<sp/>16);</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/>compute_blk_offset(current_offset,<sp/>nonce_local);</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"></highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(datain_len<sp/>-<sp/>curr_chunk)</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>L1_crypto_update(<ref refid="group___environmental_vars_1gad3215e338581ce95b76b3b84b928d744" kindref="member">EnvSession</ref>,<sp/>enc_sess_id,<sp/>SE3_CRYPTO_FLAG_RESET<sp/>|<sp/>SE3_FEEDBACK_CTR<sp/>|<sp/>SE3_DIR_ENCRYPT,<sp/><ref refid="group___sector___defines_1ga9344350dc20df5bbdc5693775c54afcb" kindref="member">SEFILE_BLOCK_SIZE</ref>,<sp/>nonce_local,<sp/>curr_chunk,<sp/>sp,<sp/>&amp;curr_len,<sp/>rp);</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>L1_crypto_update(<ref refid="group___environmental_vars_1gad3215e338581ce95b76b3b84b928d744" kindref="member">EnvSession</ref>,<sp/>enc_sess_id,<sp/>flag_reset_auth<sp/>|<sp/>SE3_CRYPTO_FLAG_FINIT,<sp/><ref refid="group___sector___defines_1ga9344350dc20df5bbdc5693775c54afcb" kindref="member">SEFILE_BLOCK_SIZE</ref>,<sp/>nonce_local,<sp/>curr_chunk,<sp/>sp,<sp/>&amp;curr_len,<sp/>rp);</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"></highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(error)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compute_blk_offset(((curr_len<sp/>-<sp/>B5_SHA256_DIGEST_SIZE)<sp/>/<sp/><ref refid="group___sector___defines_1ga9344350dc20df5bbdc5693775c54afcb" kindref="member">SEFILE_BLOCK_SIZE</ref>),<sp/>nonce_local);</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>datain_len<sp/>-=<sp/>curr_chunk;</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sp<sp/>+=<sp/>curr_chunk;</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rp<sp/>+=<sp/>curr_chunk;</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curr_chunk<sp/>=<sp/>datain_len<sp/>&lt;<sp/>MAX_DATA_IN<sp/>?<sp/>datain_len<sp/>:<sp/>MAX_DATA_IN;</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(datain_len<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"></highlight></codeline>
<codeline lineno="1430"><highlight class="normal"></highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(error);</highlight></codeline>
<codeline lineno="1432"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1433"><highlight class="normal">uint16_t<sp/><ref refid="_s_efile_8c_1a34d995f228e33aa28bff9af5cd8ca305" kindref="member">decrypt_sectors</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buff_crypt,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buff_decrypt,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>datain_len,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>current_offset,<sp/>uint8_t*<sp/>nonce_ctr,<sp/>uint8_t*<sp/>nonce_pbkdf2){</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"></highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MAX_DATA_IN<sp/>=<sp/>SE3_CRYPTO_MAX_DATAIN<sp/>-<sp/>(SE3_CMD1_CRYPTO_UPDATE_REQ_OFF_DATA<sp/>+<sp/><ref refid="group___sector___defines_1ga9344350dc20df5bbdc5693775c54afcb" kindref="member">SEFILE_BLOCK_SIZE</ref>)<sp/>-<sp/>B5_SHA256_DIGEST_SIZE</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t*<sp/>sp<sp/>=<sp/>buff_crypt,<sp/>*rp<sp/>=<sp/>buff_decrypt;</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>error<sp/>=<sp/>SE3_OK;</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>curr_len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>enc_sess_id<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>curr_chunk<sp/>=<sp/>datain_len<sp/>&lt;<sp/>MAX_DATA_IN<sp/>?<sp/>datain_len<sp/>:<sp/>MAX_DATA_IN;</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>nonce_local[16];</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>flag_reset_auth<sp/>=<sp/>datain_len<sp/>&lt;<sp/>MAX_DATA_IN<sp/>?<sp/>SE3_CRYPTO_FLAG_RESET<sp/>|<sp/>SE3_CRYPTO_FLAG_AUTH<sp/>:<sp/>SE3_CRYPTO_FLAG_AUTH;</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"></highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(datain_len<sp/>&lt;<sp/>0<sp/>||<sp/>buff_crypt<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(SE3_ERR_PARAMS);</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"></highlight></codeline>
<codeline lineno="1449"><highlight class="normal"></highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/>L1_crypto_init(<ref refid="group___environmental_vars_1gad3215e338581ce95b76b3b84b928d744" kindref="member">EnvSession</ref>,<sp/>*<ref refid="group___environmental_vars_1ga328037c714e95e56186f9d5f0842adea" kindref="member">EnvCrypto</ref>,<sp/>SE3_FEEDBACK_CTR<sp/>|<sp/>SE3_DIR_DECRYPT,<sp/>*<ref refid="group___environmental_vars_1ga7a8b4d6945f6a13f8683427dc7ab7a44" kindref="member">EnvKeyID</ref>,<sp/>&amp;enc_sess_id);</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error<sp/>!=<sp/>SE3_OK)<sp/>{</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error;</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/>L1_crypto_update(<ref refid="group___environmental_vars_1gad3215e338581ce95b76b3b84b928d744" kindref="member">EnvSession</ref>,<sp/>enc_sess_id,<sp/>SE3_CRYPTO_FLAG_SETNONCE,<sp/>SEFILE_NONCE_LEN,<sp/>nonce_pbkdf2,<sp/>0,<sp/>NULL,<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error<sp/>!=<sp/>SE3_OK)<sp/>{</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error;</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(nonce_local,<sp/>nonce_ctr,<sp/>16);</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/>compute_blk_offset(current_offset,<sp/>nonce_local);</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"></highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(datain_len<sp/>-<sp/>curr_chunk)</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>L1_crypto_update(<ref refid="group___environmental_vars_1gad3215e338581ce95b76b3b84b928d744" kindref="member">EnvSession</ref>,<sp/>enc_sess_id,<sp/>SE3_CRYPTO_FLAG_RESET<sp/>|<sp/>SE3_FEEDBACK_CTR<sp/>|<sp/>SE3_DIR_DECRYPT,<sp/><ref refid="group___sector___defines_1ga9344350dc20df5bbdc5693775c54afcb" kindref="member">SEFILE_BLOCK_SIZE</ref>,<sp/>nonce_local,<sp/>curr_chunk,<sp/>sp,<sp/>&amp;curr_len,<sp/>rp);</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>L1_crypto_update(<ref refid="group___environmental_vars_1gad3215e338581ce95b76b3b84b928d744" kindref="member">EnvSession</ref>,<sp/>enc_sess_id,<sp/>flag_reset_auth<sp/>|<sp/>SE3_CRYPTO_FLAG_FINIT,<sp/><ref refid="group___sector___defines_1ga9344350dc20df5bbdc5693775c54afcb" kindref="member">SEFILE_BLOCK_SIZE</ref>,<sp/>nonce_local,<sp/>curr_chunk,<sp/>sp,<sp/>&amp;curr_len,<sp/>rp);</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"></highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(error)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compute_blk_offset(((curr_len-B5_SHA256_DIGEST_SIZE)<sp/>/<sp/><ref refid="group___sector___defines_1ga9344350dc20df5bbdc5693775c54afcb" kindref="member">SEFILE_BLOCK_SIZE</ref>),<sp/>nonce_local);</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>datain_len<sp/>-=<sp/>curr_chunk;</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sp<sp/>+=<sp/>curr_chunk;</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rp<sp/>+=<sp/>curr_chunk;</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curr_chunk<sp/>=<sp/>datain_len<sp/>&lt;<sp/>MAX_DATA_IN<sp/>?<sp/>datain_len<sp/>:<sp/>MAX_DATA_IN;</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(datain_len<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"></highlight></codeline>
<codeline lineno="1475"><highlight class="normal"></highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(error);</highlight></codeline>
<codeline lineno="1477"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"></highlight></codeline>
<codeline lineno="1479"><highlight class="normal">uint16_t<sp/><ref refid="_s_efile_8c_1a558cc4a9929c6dc846d54ec42012466c" kindref="member">get_filesize</ref>(<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e" kindref="compound">SEFILE_FHANDLE</ref><sp/>*hFile,<sp/>uint32_t<sp/>*<sp/>length){</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_s_e_f_i_l_e___s_e_c_t_o_r" kindref="compound">SEFILE_SECTOR</ref><sp/>*crypt_buffer=NULL,<sp/>*decrypt_buffer=NULL;</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>total_size=0;</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e" kindref="compound">SEFILE_FHANDLE</ref><sp/>hTmp=NULL;</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__linux__)<sp/>||<sp/>defined(__APPLE__)</highlight></codeline>
<codeline lineno="1484"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>off_t<sp/>orig_off;</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>BytesRead<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>_WIN32</highlight></codeline>
<codeline lineno="1487"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>DWORD<sp/>orig_off;</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/>DWORD<sp/>BytesRead<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1490"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hFile==NULL){</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"></highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_FILESIZE_ERROR;</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/>crypt_buffer=(<ref refid="struct_s_e_f_i_l_e___s_e_c_t_o_r" kindref="compound">SEFILE_SECTOR</ref><sp/>*)calloc(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_e_f_i_l_e___s_e_c_t_o_r" kindref="compound">SEFILE_SECTOR</ref>));</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/>decrypt_buffer=(<ref refid="struct_s_e_f_i_l_e___s_e_c_t_o_r" kindref="compound">SEFILE_SECTOR</ref><sp/>*)calloc(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_e_f_i_l_e___s_e_c_t_o_r" kindref="compound">SEFILE_SECTOR</ref>));</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(crypt_buffer==NULL<sp/>||<sp/>decrypt_buffer==NULL){</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"></highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_FILESIZE_ERROR;</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/>hTmp=*hFile;</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"></highlight></codeline>
<codeline lineno="1502"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__linux__)<sp/>||<sp/>defined(__APPLE__)</highlight></codeline>
<codeline lineno="1503"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>orig_off=lseek(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref>,<sp/>0,<sp/>SEEK_CUR);</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/>total_size=lseek(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref>,<sp/>(-1)*(SEFILE_SECTOR_SIZE),<sp/>SEEK_END);</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"></highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(orig_off==-1<sp/>||<sp/>total_size==-1){</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(crypt_buffer);</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(decrypt_buffer);</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"></highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_SEEK_ERROR;</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!total_size)<sp/>{</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lseek(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref>,<sp/>orig_off,<sp/>SEEK_SET);</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*length=0;</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(crypt_buffer);</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(decrypt_buffer);</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((BytesRead<sp/>=<sp/>read(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref>,<sp/>crypt_buffer,<sp/>SEFILE_SECTOR_SIZE))!=<sp/>SEFILE_SECTOR_SIZE){</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lseek(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref>,<sp/>orig_off,<sp/>SEEK_SET);</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(crypt_buffer);</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(decrypt_buffer);</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"></highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_READ_ERROR;</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"></highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((lseek(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref>,<sp/>orig_off,<sp/>SEEK_SET))==-1){</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(crypt_buffer);</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(decrypt_buffer);</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"></highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_SEEK_ERROR;</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>_WIN32</highlight></codeline>
<codeline lineno="1534"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>orig_off=SetFilePointer(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref>,<sp/>0,<sp/>0,<sp/>FILE_CURRENT);</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/>total_size=SetFilePointer(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref>,<sp/>(-1)*(SEFILE_SECTOR_SIZE),<sp/>NULL,<sp/>FILE_END);</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"></highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(orig_off==INVALID_SET_FILE_POINTER<sp/>||<sp/>total_size==INVALID_SET_FILE_POINTER){</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(crypt_buffer);</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(decrypt_buffer);</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"></highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_SEEK_ERROR;</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!total_size)<sp/>{</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetFilePointer(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref>,<sp/>orig_off,<sp/>NULL,<sp/>FILE_BEGIN);</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*length=0;</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(crypt_buffer);</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(decrypt_buffer);</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((ReadFile(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref>,<sp/>crypt_buffer,<sp/>SEFILE_SECTOR_SIZE,<sp/>&amp;BytesRead,<sp/>NULL))==0<sp/>||<sp/>BytesRead!=SEFILE_SECTOR_SIZE){</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetFilePointer(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref>,<sp/>orig_off,<sp/>NULL,<sp/>FILE_BEGIN);</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(crypt_buffer);</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(decrypt_buffer);</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"></highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_READ_ERROR;</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"></highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((SetFilePointer(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref>,<sp/>orig_off,<sp/>NULL,<sp/>FILE_BEGIN))==INVALID_SET_FILE_POINTER){</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(crypt_buffer);</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(decrypt_buffer);</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"></highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_SEEK_ERROR;</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"></highlight></codeline>
<codeline lineno="1565"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1566"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_s_efile_8c_1a34d995f228e33aa28bff9af5cd8ca305" kindref="member">decrypt_sectors</ref>(crypt_buffer,<sp/>decrypt_buffer,<sp/><ref refid="group___sector___defines_1ga6961ed45e472749b587136d18eb74b4d" kindref="member">SEFILE_SECTOR_DATA_SIZE</ref>,<sp/><ref refid="_s_efile_8c_1a7617f01b2063fc7205c6081b88801a75" kindref="member">POS_TO_CIPHER_BLOCK</ref>(total_size),<sp/>hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a37935da2e79760bd04e32e05e5922975" kindref="member">nonce_ctr</ref>,<sp/>hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a6d2cb56237e6a99def8f9e9e54a46489" kindref="member">nonce_pbkdf2</ref>)){</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(crypt_buffer);</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(decrypt_buffer);</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_FILESIZE_ERROR;</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(memcmp(crypt_buffer-&gt;<ref refid="struct_s_e_f_i_l_e___s_e_c_t_o_r_1a111b909efca8a7c55f22c621c81e4cb5" kindref="member">signature</ref>,<sp/>decrypt_buffer-&gt;signature,<sp/>B5_SHA256_DIGEST_SIZE)){</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(crypt_buffer);</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(decrypt_buffer);</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_SIGNATURE_MISMATCH;</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"></highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/>*length=((total_size/<ref refid="group___sector___defines_1gad205a758c315675de3ad9f5f1cbf962d" kindref="member">SEFILE_SECTOR_SIZE</ref>)-1)*SEFILE_LOGIC_DATA<sp/>+<sp/>decrypt_buffer-&gt;len;</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/>free(crypt_buffer);</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/>free(decrypt_buffer);</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"></highlight></codeline>
<codeline lineno="1583"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1584"><highlight class="normal">uint16_t<sp/><ref refid="_s_efile_8c_1aeda597741a9b6bf76b5258f6c996e678" kindref="member">decrypt_filename</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename){</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e" kindref="compound">SEFILE_FHANDLE</ref><sp/>hFile=NULL;</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"></highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/>hFile=(<ref refid="_s_efile_8h_1ac073933cdf58a366c2dfed344c37ebe9" kindref="member">SEFILE_FHANDLE</ref>)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e" kindref="compound">SEFILE_HANDLE</ref>));</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hFile==NULL){</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"></highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_FILENAME_DEC_ERROR;</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__linux__)<sp/>||<sp/>defined(__APPLE__)</highlight></codeline>
<codeline lineno="1593"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((hFile-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref><sp/>=<sp/>open(path,<sp/>O_RDONLY))<sp/>==<sp/>-1<sp/>){</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"></highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_FILENAME_DEC_ERROR;</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>_WIN32</highlight></codeline>
<codeline lineno="1598"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>hFile-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref><sp/>=<sp/>CreateFile(</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>file<sp/>to<sp/>open</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GENERIC_READ,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>open<sp/>for<sp/>reading<sp/>and<sp/>writing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE_SHARE_READ,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>share</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>default<sp/>security</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OPEN_EXISTING,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>existing<sp/>file<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE_ATTRIBUTE_NORMAL,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>normal<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>attr.<sp/>template</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1606"><highlight class="normal"></highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hFile-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref><sp/>==<sp/>INVALID_HANDLE_VALUE){</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"></highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_FILENAME_DEC_ERROR;</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1612"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="_s_efile_8c_1a2ada7106da4eb0668715f317366777ef" kindref="member">decrypt_filehandle</ref>(&amp;hFile,<sp/>filename)){</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_FILENAME_DEC_ERROR;</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"></highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="_s_efile_8c_1a54f66c38e6025c8e57ceda5c43d51c5c" kindref="member">secure_close</ref>(&amp;hFile)){</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_FILENAME_DEC_ERROR;</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"></highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1621"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"></highlight></codeline>
<codeline lineno="1623"><highlight class="normal">uint16_t<sp/><ref refid="_s_efile_8c_1a2ada7106da4eb0668715f317366777ef" kindref="member">decrypt_filehandle</ref>(<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e" kindref="compound">SEFILE_FHANDLE</ref><sp/>*hFile,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename){</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_s_e_f_i_l_e___s_e_c_t_o_r" kindref="compound">SEFILE_SECTOR</ref><sp/>*header_buffer=NULL,<sp/>*bufferDec=NULL;</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>length=0;</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>orig_off=0;</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e" kindref="compound">SEFILE_FHANDLE</ref><sp/>hTmp=NULL;</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32</highlight></codeline>
<codeline lineno="1629"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>DWORD<sp/>BytesRead;</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1631"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hFile==NULL){</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"></highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_CREATE_ERROR;</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/>hTmp=*hFile;</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/>header_buffer=(<ref refid="struct_s_e_f_i_l_e___s_e_c_t_o_r" kindref="compound">SEFILE_SECTOR</ref><sp/>*)calloc(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_e_f_i_l_e___s_e_c_t_o_r" kindref="compound">SEFILE_SECTOR</ref>));</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/>bufferDec=(<ref refid="struct_s_e_f_i_l_e___s_e_c_t_o_r" kindref="compound">SEFILE_SECTOR</ref><sp/>*)calloc(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_e_f_i_l_e___s_e_c_t_o_r" kindref="compound">SEFILE_SECTOR</ref>));</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(header_buffer==NULL<sp/>||<sp/>bufferDec==NULL){</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"></highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_FILESIZE_ERROR;</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"></highlight></codeline>
<codeline lineno="1643"><highlight class="normal"></highlight></codeline>
<codeline lineno="1644"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__linux__)<sp/>||<sp/>defined(__APPLE__)</highlight></codeline>
<codeline lineno="1645"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>orig_off=lseek(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref>,<sp/>0,<sp/>SEEK_CUR);</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"></highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(orig_off==-1){</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(header_buffer);</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(bufferDec);</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"></highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_FILENAME_DEC_ERROR;</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"></highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lseek(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref>,<sp/>0,<sp/>SEEK_SET)==-1){</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(header_buffer);</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(bufferDec);</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"></highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_FILENAME_DEC_ERROR;</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"></highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(read(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref>,<sp/>header_buffer,<sp/>SEFILE_SECTOR_SIZE)!=SEFILE_SECTOR_SIZE){</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(header_buffer);</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(bufferDec);</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"></highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_FILENAME_DEC_ERROR;</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lseek(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref>,<sp/>orig_off,<sp/>SEEK_SET)==-1){</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(header_buffer);</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(bufferDec);</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"></highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_FILENAME_DEC_ERROR;</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>_WIN32</highlight></codeline>
<codeline lineno="1674"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>orig_off=SetFilePointer(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref>,<sp/>0,<sp/>0,<sp/>FILE_CURRENT);</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"></highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(orig_off==INVALID_SET_FILE_POINTER){</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(header_buffer);</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(bufferDec);</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"></highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_FILENAME_DEC_ERROR;</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"></highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(SetFilePointer(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref>,<sp/>0,<sp/>NULL,<sp/>FILE_BEGIN)==INVALID_SET_FILE_POINTER){</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(header_buffer);</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(bufferDec);</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"></highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_FILENAME_DEC_ERROR;</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ReadFile(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref>,<sp/>header_buffer,<sp/>SEFILE_SECTOR_SIZE,<sp/>&amp;BytesRead,<sp/>NULL)==0<sp/>||<sp/>BytesRead!=SEFILE_SECTOR_SIZE){</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(header_buffer);</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(bufferDec);</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"></highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_FILENAME_DEC_ERROR;</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(SetFilePointer(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref>,<sp/>orig_off,<sp/>NULL,<sp/>FILE_BEGIN)==INVALID_SET_FILE_POINTER){</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(header_buffer);</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(bufferDec);</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"></highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_FILENAME_DEC_ERROR;</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1702"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_s_efile_8c_1a84651b6b79095cbb509ac22824595e4d" kindref="member">crypt_header</ref>(header_buffer,<sp/>bufferDec,<sp/><ref refid="group___sector___defines_1ga6961ed45e472749b587136d18eb74b4d" kindref="member">SEFILE_SECTOR_DATA_SIZE</ref>,<sp/>SE3_DIR_DECRYPT)){</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(header_buffer);</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(bufferDec);</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_FILENAME_DEC_ERROR;</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"></highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(memcmp(header_buffer-&gt;<ref refid="struct_s_e_f_i_l_e___s_e_c_t_o_r_1a111b909efca8a7c55f22c621c81e4cb5" kindref="member">signature</ref>,<sp/>bufferDec-&gt;signature,<sp/>B5_SHA256_DIGEST_SIZE)){</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(header_buffer);</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(bufferDec);</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_SIGNATURE_MISMATCH;</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"></highlight></codeline>
<codeline lineno="1715"><highlight class="normal"></highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/>length=bufferDec-&gt;header.fname_len;</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(filename,<sp/>bufferDec-&gt;data+</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_s_e_f_i_l_e___h_e_a_d_e_r" kindref="compound">SEFILE_HEADER</ref>),<sp/>length);</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/>free(header_buffer);</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/>free(bufferDec);</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/>filename[length]=</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"></highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1723"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"></highlight></codeline>
<codeline lineno="1725"><highlight class="normal">uint16_t<sp/>encrypt_name(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>buff1,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>buff2,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size,<sp/>uint16_t<sp/>direction){</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>L1_encrypt(<ref refid="group___environmental_vars_1gad3215e338581ce95b76b3b84b928d744" kindref="member">EnvSession</ref>,<sp/>*<ref refid="group___environmental_vars_1ga328037c714e95e56186f9d5f0842adea" kindref="member">EnvCrypto</ref>,<sp/>SE3_FEEDBACK_ECB<sp/>|<sp/>direction,<sp/>*<ref refid="group___environmental_vars_1ga7a8b4d6945f6a13f8683427dc7ab7a44" kindref="member">EnvKeyID</ref>,<sp/>size,<sp/>buff1,<sp/>NULL,<sp/>buff2);</highlight></codeline>
<codeline lineno="1727"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"></highlight></codeline>
<codeline lineno="1729"><highlight class="normal">uint16_t<sp/><ref refid="_s_efile_8c_1a700fedc67d30512447684ec1eff14bab" kindref="member">crypt_dirname</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dirpath,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*encDirname){</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>commandError=0;</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>*pDir=NULL;</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>maxLen<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename=NULL;</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>*buffDec=NULL,<sp/>*buffEnc=NULL;</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"></highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/>filename=strrchr(dirpath,<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(filename==NULL){</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filename=strrchr(dirpath,<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(filename==NULL)<sp/>filename=dirpath;</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>filename++;</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filename++;</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/>maxLen=(((strlen(filename)/<ref refid="group___sector___defines_1ga9344350dc20df5bbdc5693775c54afcb" kindref="member">SEFILE_BLOCK_SIZE</ref>)+1)*<ref refid="group___sector___defines_1ga9344350dc20df5bbdc5693775c54afcb" kindref="member">SEFILE_BLOCK_SIZE</ref>);</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strlen(filename)&gt;(<ref refid="_s_efile_8h_1aa4e5ca47d52a8be522912705c27e0d1c" kindref="member">MAX_PATHNAME</ref>-2)/2){</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"></highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_DIRNAME_ENC_ERROR;</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((filename-dirpath)&gt;<ref refid="_s_efile_8h_1aa4e5ca47d52a8be522912705c27e0d1c" kindref="member">MAX_PATHNAME</ref>-maxLen){</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_DIRNAME_ENC_ERROR;</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/><sp/>buffDec=calloc(maxLen+1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint8_t));</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/>buffEnc=calloc(maxLen+1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint8_t));</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(buffDec==NULL<sp/>||<sp/>buffEnc==NULL){</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"></highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_DIRNAME_ENC_ERROR;</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(buffDec,<sp/>filename,<sp/>strlen(filename));</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"></highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((commandError<sp/>=<sp/>encrypt_name(buffDec,<sp/>buffEnc,<sp/>maxLen,<sp/>SE3_DIR_ENCRYPT))){</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(buffDec);</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(buffEnc);</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>commandError;</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(encDirname,<sp/>dirpath,<sp/>filename-dirpath);</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/>pDir=encDirname+(filename-dirpath);</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(pDir,<sp/></highlight><highlight class="stringliteral">&quot;%02x&quot;</highlight><highlight class="normal">,<sp/>(uint8_t)*<ref refid="group___environmental_vars_1ga7a8b4d6945f6a13f8683427dc7ab7a44" kindref="member">EnvKeyID</ref>);</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/><sp/>pDir+=2;</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;maxLen;i++){</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(pDir+(i*2),<sp/></highlight><highlight class="stringliteral">&quot;%02x&quot;</highlight><highlight class="normal">,<sp/>(uint8_t)buffEnc[i]);</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/><sp/>pDir[i*2]=</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/><sp/><sp/>free(buffDec);</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/>free(buffEnc);</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1777"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"></highlight></codeline>
<codeline lineno="1779"><highlight class="normal">uint16_t<sp/><ref refid="_s_efile_8c_1ac74803a54c2cb05ea329acdeef7f7856" kindref="member">decrypt_dirname</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dirpath,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*decDirname){</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>commandError=0;</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>maxLen<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>key=0;</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filename=NULL,<sp/>*buffEnc=NULL;</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>tmp[3]={0,0,0};</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>i=0;</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"></highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/>filename=strrchr(dirpath,<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(filename==NULL){</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filename=strrchr(dirpath,<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(filename==NULL)<sp/>filename=dirpath;</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>filename++;</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filename++;</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"></highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><sp/><sp/>maxLen=(strlen(filename)-2);</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/><sp/><sp/>buffEnc=calloc((maxLen/2)+1+1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(buffEnc==NULL){</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"></highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_DIRNAME_ENC_ERROR;</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Conversion<sp/>of<sp/>2<sp/>chars<sp/>at<sp/>a<sp/>time<sp/>from<sp/>Hex<sp/>to<sp/>Integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1803"><highlight class="normal"></highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;(maxLen/2)+1;i++){</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(tmp,&amp;filename[i*2],2);</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffEnc[i]=strtol(tmp,<sp/>NULL,<sp/>16);</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/><sp/>key=buffEnc[0];</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"></highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(*<ref refid="group___environmental_vars_1ga7a8b4d6945f6a13f8683427dc7ab7a44" kindref="member">EnvKeyID</ref>==key){</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((commandError<sp/>=<sp/>encrypt_name((buffEnc+1),<sp/>decDirname,<sp/>maxLen,<sp/>SE3_DIR_DECRYPT))){</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(buffEnc);</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>commandError;</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_USER_NOT_ALLOWED;</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><sp/>free(buffEnc);</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1820"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"></highlight></codeline>
<codeline lineno="1822"><highlight class="normal">uint16_t<sp/><ref refid="_s_efile_8c_1a95ea3f63b783aca7223b6b885cab1a5e" kindref="member">valid_name</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name){</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;name[i]!=</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;i++){</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!isalnum(name[i]))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_NAME_NOT_VALID;</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(name[i]<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>name[i]<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(name[i]<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>name[i]<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;f&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_NAME_NOT_VALID;</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1831"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"></highlight></codeline>
<codeline lineno="1833"><highlight class="normal">uint16_t<sp/><ref refid="_s_efile_8c_1aae977955a0ae4b48158806cd45d2cd12" kindref="member">secure_sync</ref>(<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e" kindref="compound">SEFILE_FHANDLE</ref><sp/>*hFile){</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e" kindref="compound">SEFILE_FHANDLE</ref><sp/>hTmp;</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>ret<sp/>=<sp/>SE3_OK;</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"></highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="_s_efile_8c_1a99543075d3f99eca1a5ca4b2d5feb016" kindref="member">check_env</ref>()<sp/>||<sp/>hFile<sp/>==<sp/>NULL){</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SEFILE_SYNC_ERR;</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><sp/>hTmp<sp/>=<sp/>*hFile;</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__linux__)<sp/>||<sp/>defined(__APPLE__)</highlight></codeline>
<codeline lineno="1842"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fsync(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref>)){</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>SEFILE_SYNC_ERR;</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>_WIN32</highlight></codeline>
<codeline lineno="1846"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!FlushFileBuffers(hTmp-&gt;<ref refid="struct_s_e_f_i_l_e___h_a_n_d_l_e_1a17bc7f2e296f61d7758cb18e68d41375" kindref="member">fd</ref>)){</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>SEFILE_SYNC_ERR;</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1850"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1851"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/run/media/scaglia/5B106C33792E4440/polito/MAGISTRALE/current/tesi/SEfile_library/SEfile.c"/>
  </compounddef>
</doxygen>
